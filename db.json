{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/logo.png","path":"images/logo.png","modified":1,"renderable":0},{"_id":"source/images/mylogo.jpg","path":"images/mylogo.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.jpeg","path":"images/logo.jpeg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/user.png","path":"images/user.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1486514405901},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1486514405903},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1486514405905},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1486514405909},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1486514405907},{"_id":"themes/next/_config.yml","hash":"d255933b4232d596a167f3df23e1d07948696d67","modified":1486514405912},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1486514405913},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1486514405915},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1486514406045},{"_id":"source/_posts/React开发规范1-0.md","hash":"e027830bc363a93733f8e21fcbe9fe801f84e1d5","modified":1520217889260},{"_id":"source/_posts/WebStorm、PhpStorm搭建本地授权服务.md","hash":"8eed84dfdadd8df6a798ba174fbeba247159c32d","modified":1496369687221},{"_id":"source/_posts/express中cookie-session.md","hash":"0582aec4e89a40655996a463b9c6009fc71f99a5","modified":1520217056058},{"_id":"source/_posts/express框架使用.md","hash":"98a5cf27dde88bdd60d1e4aacfe489d82418156d","modified":1520217056069},{"_id":"source/_posts/git.md","hash":"3c13c611e4900a391a183a22113f41b901eaf9f2","modified":1496369687223},{"_id":"source/_posts/git分支.md","hash":"6f735cdb11401e10acbf47a5a2e720aaec41763b","modified":1496369687223},{"_id":"source/_posts/git发布静态网站.md","hash":"40cf30f3974dd3d81732cbe3fcf5d2d74768a8d9","modified":1496369687224},{"_id":"source/_posts/git文件内容对比.md","hash":"f1ccfe27c60aeb3c3102bcbeae6a44715af946a0","modified":1496369687225},{"_id":"source/_posts/git在mac中自动补全功能配置.md","hash":"e3ec0988f66aa62e84497908bf205ae75c7805f7","modified":1496369687225},{"_id":"source/_posts/git文件回滚.md","hash":"75d6db77d99f447f9c2a887beee661788ce55fea","modified":1496369687226},{"_id":"source/_posts/git解决冲突.md","hash":"4823bb87f479f0a5c39708a9a0099a05a650e01d","modified":1496369687226},{"_id":"source/_posts/hexo发布.md","hash":"1681332e706c18e927206ca050f5253337375e01","modified":1496369687226},{"_id":"source/_posts/hexo安装.md","hash":"e1b64dc4d72d18a44ee59c2bf7b154f2f0d0d7c9","modified":1496369687227},{"_id":"source/_posts/jsonp.md","hash":"52f55e137ee1494dade9d82f397c9d7869dd5223","modified":1496369687227},{"_id":"source/_posts/node-EventEmitter方法.md","hash":"2d9aadf46d02c8e09cbd29fe6f51f69ed4a7baa6","modified":1496369687228},{"_id":"source/_posts/node发布与订阅.md","hash":"d0ff710e343c48309cf334a1ca1aae94ac13e9c8","modified":1496369687228},{"_id":"source/_posts/node同步与异步.md","hash":"a2cfb2569744810003b30b22e84267b97f97fbcc","modified":1496369687228},{"_id":"source/_posts/node基础.md","hash":"ec838be2b3f2bf5799875220a51ebf9f0d3e5bc5","modified":1496369687229},{"_id":"source/_posts/node核心模块.md","hash":"75763be6b95c98b260b87c8ac0356f4f6ac09278","modified":1496369687229},{"_id":"source/_posts/node模块安装.md","hash":"e6cbba5d6c6c9b219940ddf286c162042e4d549c","modified":1496369687229},{"_id":"source/_posts/前端开发环境及工具.md","hash":"6b91aa5eb87620c45d0bd06922fea2ad53357c4f","modified":1520217553755},{"_id":"source/_posts/前端规范.md","hash":"0f529db38c91a72b796def00582625fd7a262931","modified":1520218230694},{"_id":"source/_posts/发布node模块包.md","hash":"040f9af0bb74414151877c843f5ddd532f195a2a","modified":1496369687230},{"_id":"source/_posts/基于uba前端mock代理.md","hash":"3bd771e46077f8c76b69e7e324cad50602c8f36d","modified":1520217091540},{"_id":"source/_posts/基于uba前端项目搭建.md","hash":"5ad3d310e64dbd49987ce1d3189eed516b15fb93","modified":1520218112748},{"_id":"source/_posts/开篇记.md","hash":"dfa71fb3ff33d21f5a1388945366109c087552ec","modified":1496369687230},{"_id":"source/_posts/相关文档目录.md","hash":"3caa715a7ad6f7f99f7d578ad2232dd67b5aaf63","modified":1520219302836},{"_id":"source/_posts/项目中视图相关.md","hash":"35a45c56d4e55cb299900d631ea1d80ccde8e70c","modified":1520218098774},{"_id":"source/about/index.md","hash":"2ef3dd194fe4eaa1ca7a5cf6bd05f7d88056e851","modified":1486514405714},{"_id":"source/categories/index.md","hash":"19e6f43f4367ef7acb49d344ce0e2bb1eb6c9714","modified":1486514405716},{"_id":"source/tags/index.md","hash":"e233f3b7cc4f73fdfddeef13aa0a6a3e14651f0f","modified":1486514405725},{"_id":"source/images/logo.png","hash":"30104df27b85960347f22454f78f2a5030cbdac2","modified":1486514405720},{"_id":"source/images/mylogo.jpg","hash":"b7966211ca28b732f7eadaa173aeb579393d2c4c","modified":1486514405722},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1486514405918},{"_id":"themes/next/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1486514405922},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1486514405924},{"_id":"themes/next/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1486514405920},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1486514405926},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1486514405928},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1486514405930},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1486514405933},{"_id":"themes/next/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1486514405935},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1486514405932},{"_id":"themes/next/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1486514405937},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1486514405939},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1486514405941},{"_id":"themes/next/source/404.html","hash":"7510bbd1eed82f2786e940e1f1e9a539918e7ef7","modified":1486514406060},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1486514406047},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1486514406443},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1486514406445},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1486514406447},{"_id":"themes/next/layout/_layout.swig","hash":"24de463d28bacbf2a28c34fecf082980f7f33a12","modified":1486514405953},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1486514406031},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1486514406033},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1486514406039},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1486514406035},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1486514406037},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1486514406043},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1486514406041},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514406257},{"_id":"themes/next/source/css/main.styl","hash":"fc5680000e7c177c74dab1f1af2f22ccb7366be2","modified":1486514406255},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1486514406260},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1486514406263},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1486514406264},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1486514406268},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1486514406266},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1486514406272},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1486514406270},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1486514406274},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1486514406276},{"_id":"themes/next/source/images/logo.png","hash":"134816aa3b01e19a8166ded4fc490ff169c2e9d8","modified":1486514406282},{"_id":"themes/next/source/images/logo.jpeg","hash":"b7966211ca28b732f7eadaa173aeb579393d2c4c","modified":1486514406280},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486514406278},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1486514406286},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486514406283},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1486514406287},{"_id":"themes/next/source/images/user.png","hash":"f97258d2b3a75e62f503299514a24515653df50e","modified":1487039155556},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1486514406289},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1486514406052},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1486514406050},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1486514406054},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1486514406056},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1486514406058},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1486514405950},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1486514405951},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1486514405956},{"_id":"themes/next/layout/_macro/post.swig","hash":"216907a1348317114ccb90fecc752b8b7255b15b","modified":1486514405958},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a42851e17d8961e5cae8b588d95a4a5456964972","modified":1486514405962},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1486514405960},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1486514405964},{"_id":"themes/next/layout/_partials/comments.swig","hash":"09da002fbeb0fe2ac3f180ecf77bce568ea989ca","modified":1486514405967},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1486514405969},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1486514405971},{"_id":"themes/next/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1486514405973},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1486514405980},{"_id":"themes/next/layout/_partials/header.swig","hash":"8985089c950d6df0efab9cd549a6b9ee50708ee2","modified":1486514405980},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1486514405981},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1486514405981},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1486514405984},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1486514405984},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1486514405985},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e9beddda9758d8739c41fc8c67b2e72fc29c1244","modified":1486514406029},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514406193},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514406192},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514406198},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514406248},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514406253},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514405987},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486514405988},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1486514406190},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1486514406197},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1486514406195},{"_id":"themes/next/source/css/_my/mycss.styl","hash":"99dda6fa4a52ad7e51bb6c30b3baabf106d28104","modified":1486514406200},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c666e352c3b8e4ad0a16cc757b08f44ef9172182","modified":1486514406250},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1486514406247},{"_id":"themes/next/source/css/_variables/base.styl","hash":"8b08a5ce4222aa731b180a12127bd0e52d12ede8","modified":1486514406252},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1486514406313},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1486514406321},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1486514406357},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1486514406361},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1486514406359},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1486514406363},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1486514406325},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1486514406323},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1486514406369},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1486514406373},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1486514406375},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1486514406371},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1486514406377},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1486514406412},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1486514406415},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1486514406411},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1486514406417},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1486514406419},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1486514406420},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1486514406405},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1486514406428},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1486514406430},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1486514406438},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1486514406436},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1486514406440},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1486514406294},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1486514406293},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1486514406296},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1486514406298},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1486514406300},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1486514406302},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1486514406307},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1486514406309},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1486514405947},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1486514405945},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1486514405975},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1486514405977},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1486514405981},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1486514405982},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1486514405982},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1486514405983},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1486514405983},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1486514405984},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1486514405983},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1486514405985},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1486514405992},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4f9efb15c9aaa016ac78d9f8aa2caefea87869df","modified":1486514406008},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1486514406022},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1486514406020},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1486514406024},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1486514406027},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1486514406026},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1486514405990},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1486514406408},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1486514406070},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1486514406064},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1486514406066},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1486514406068},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1486514406101},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1486514406148},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1486514406180},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1486514406182},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1486514406184},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1486514406185},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1486514406187},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1486514406177},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1486514406203},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1486514406205},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1486514406207},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1486514406209},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1486514406211},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1486514406213},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1486514406215},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1486514406222},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1486514406224},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1486514406226},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1486514406228},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1486514406229},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"221d3dbc04ff6c211ba9382397c4977e9f493153","modified":1486514406237},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"34acb45007229b299951ce35d8eef642ea16fbe9","modified":1486514406235},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"173f3aa31c41782591b7abeadd4f88f68d59b042","modified":1486514406238},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1486514406240},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"1be4ef3f97f329e2531bfd2dfdc40c0e46df35c8","modified":1486514406242},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1486514406244},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1486514406367},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1486514406365},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486514406328},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486514406331},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486514406329},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486514406333},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486514406335},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486514406337},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1486514406350},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1486514406352},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1486514406354},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1486514406380},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1486514406382},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1486514406385},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1486514406424},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1486514406426},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1486514406305},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1486514405995},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1486514405999},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1486514405997},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1486514406002},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1486514406001},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1486514406004},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1486514406006},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1486514406010},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1486514406012},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1486514406014},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1486514406016},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"f40a697fd046415924a142eec1effad70f3cb187","modified":1486514406018},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1486514406389},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1486514406391},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1486514406400},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1486514406402},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1486514406435},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1486514406073},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1486514406075},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1486514406077},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1486514406081},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1486514406079},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1486514406083},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1486514406085},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1486514406089},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1486514406087},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1486514406106},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"0d9a4ae2e4ab418453e0f81b8fb1ad4b856f91d4","modified":1486514406104},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1486514406110},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1486514406108},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1486514406117},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1486514406112},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"e28c805011f65b54060f03be90ec5a23714c4985","modified":1486514406115},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1486514406119},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1486514406122},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1486514406121},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"011d5828b4972b2df0b429794b4466ba5bc1b49e","modified":1486514406126},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1486514406124},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1486514406092},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1486514406094},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1486514406095},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1486514406129},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1486514406099},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1486514406097},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1486514406133},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1486514406135},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1486514406130},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1486514406139},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1486514406141},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1486514406143},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1486514406145},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1486514406147},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1486514406151},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1486514406153},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1486514406155},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1486514406159},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1486514406157},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1486514406165},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1486514406163},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1486514406161},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1486514406167},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1486514406171},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1486514406173},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1486514406169},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1486514406175},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1486514406220},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1486514406217},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1486514406232},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486514406339},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1486514406341},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1486514406343},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1486514406345},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1486514406346},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1486514406348},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1486514406397},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1486514406319},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1486514406394},{"_id":"public/search.xml","hash":"846ad6763955c00b90e451513714d1938c694649","modified":1520219421406},{"_id":"public/about/index.html","hash":"4d023b27a5a84198ffe79d1cbb5a123149c99602","modified":1520219421600},{"_id":"public/categories/jsonp/index.html","hash":"380c0b04cc95c384f32d68d74d52fb750d7bdeb4","modified":1520219421601},{"_id":"public/categories/React/index.html","hash":"f98ec14e58e7a2c17743831f1c1e0b73d70a7fa6","modified":1520219421601},{"_id":"public/tags/WebStorm/index.html","hash":"1039b3e17e56de4b3f808c954df9679464771f78","modified":1520219421601},{"_id":"public/tags/开发工具/index.html","hash":"ed0eb10fc6db2056555479e60fd704644d0a7678","modified":1520219421601},{"_id":"public/tags/PhpStorm/index.html","hash":"f1b303a5e40c2e098ec7545599687251187515b1","modified":1520219421601},{"_id":"public/tags/git配置/index.html","hash":"0154226baa365bcab103056a1cf20c448da0457c","modified":1520219421601},{"_id":"public/tags/git，前端笔记/index.html","hash":"a28601decfe79da27e9fc1fb22c58d66bda15a4c","modified":1520219421601},{"_id":"public/tags/nodeAPI/index.html","hash":"542d47b892db13f664140ed06a99c2bb32d92e06","modified":1520219421601},{"_id":"public/tags/jsonp/index.html","hash":"fa1ce3036977e213aae501709e21fe6a68f78bf4","modified":1520219421601},{"_id":"public/tags/基础/index.html","hash":"590ddf91a77656d2c06e2145b2fc810c8201a2f3","modified":1520219421601},{"_id":"public/tags/node，node基础/index.html","hash":"34c8a89edf5212f2c3bc5f654cb8439d4a1e04c7","modified":1520219421601},{"_id":"public/tags/mock/index.html","hash":"4e1f66a213b10f534f65dd3a19d8ea49ea16dfe9","modified":1520219421601},{"_id":"public/tags/记录/index.html","hash":"6ab9b9cafbd41ea1ee63d8f4e034330cd05db434","modified":1520219421602},{"_id":"public/tags/Css/index.html","hash":"8c296f231f1b199424d948c553010e25797c9ecc","modified":1520219421602},{"_id":"public/categories/index.html","hash":"893c0ad3495862adf754799a5b34785f3c303a2a","modified":1520219421602},{"_id":"public/tags/index.html","hash":"2be0dfa7540666703a7abd2473315f1db3909586","modified":1520219421602},{"_id":"public/2018/03/05/项目中视图相关/index.html","hash":"48b2b2faf1835feae93a4bb2f2cb8e021a538275","modified":1520219421602},{"_id":"public/2018/03/05/基于uba前端项目搭建/index.html","hash":"5efedefb1a0a24447f70dec36629753308c470fc","modified":1520219421602},{"_id":"public/2018/03/05/React开发规范1-0/index.html","hash":"671f67abb711dd064ae74b639bdc88d2aeabe0d9","modified":1520219421602},{"_id":"public/2018/03/05/前端开发环境及工具/index.html","hash":"f84973853b8735ea469cdb5a2f20bcdf0b409faf","modified":1520219421602},{"_id":"public/2018/03/05/基于uba前端mock代理/index.html","hash":"2dd1804de0307f9b31a0cbe6691d614427dd050a","modified":1520219421602},{"_id":"public/2017/06/02/前端规范/index.html","hash":"6aadb19182c706f90858924e334c39bc5749a305","modified":1520219421602},{"_id":"public/2017/05/14/express中cookie-session/index.html","hash":"117618ccf03c19a0d6182ac59a967d7462eddd37","modified":1520219421602},{"_id":"public/2017/05/13/express框架使用/index.html","hash":"7dec4cb0e7ba67b94935350ca87febfe67bd16c9","modified":1520219421602},{"_id":"public/2017/04/30/hexo安装/index.html","hash":"7d35f54f6b5be8d269cdb80b2d2de433d32b5dcf","modified":1520219421603},{"_id":"public/2017/04/30/node发布与订阅/index.html","hash":"91647ad2d677c3cca18f8ee29ea9deaebe2cc392","modified":1520219421603},{"_id":"public/2017/04/30/发布node模块包/index.html","hash":"57a6361f4498ce40a814d07350ee8ec615258f32","modified":1520219421603},{"_id":"public/2017/04/30/hexo发布/index.html","hash":"ea6432ef5086062d5c73cd98b21e7a9b8589021c","modified":1520219421603},{"_id":"public/2017/04/30/node核心模块/index.html","hash":"452f1a750a7bf0d526751a366cb60f1d1495d3f0","modified":1520219421603},{"_id":"public/2017/04/30/node模块安装/index.html","hash":"ca82da4adf8674af36cc718c4ef460f8aa457dca","modified":1520219421603},{"_id":"public/2017/04/30/node同步与异步/index.html","hash":"46e81309bba8c01f2a5837a461a184ab2edb0013","modified":1520219421603},{"_id":"public/2017/04/30/node基础/index.html","hash":"86d4cc73a90ea29240724119640ffdea30cd7282","modified":1520219421603},{"_id":"public/2017/04/29/git发布静态网站/index.html","hash":"7549c6ba5265449c4b537ba86a1c8c47f9e38ebe","modified":1520219421603},{"_id":"public/2017/04/29/git解决冲突/index.html","hash":"34c4cd58628906aa68d6aa25167d6bff69ff1806","modified":1520219421603},{"_id":"public/2017/04/29/git分支/index.html","hash":"960a81f43d3937eb6c1f01d842c3be28e803e789","modified":1520219421603},{"_id":"public/2017/04/29/git文件回滚/index.html","hash":"9c2fb427a042ea5aeefef914da503b524436b9b1","modified":1520219421604},{"_id":"public/2017/04/29/git/index.html","hash":"9a541b8dab9d472713179aabd2be7000ddc24eb8","modified":1520219421604},{"_id":"public/2017/04/29/git文件内容对比/index.html","hash":"99b6df49b438e316ce9cc52948e1f315506bac3f","modified":1520219421604},{"_id":"public/2017/04/24/node-EventEmitter方法/index.html","hash":"22a8c2ce58e0f8145ca166ec0eb6ea13ef6d6a38","modified":1520219421604},{"_id":"public/2017/04/23/jsonp/index.html","hash":"f40e623ee5b744c44e2d8074190e96a1b04493e7","modified":1520219421604},{"_id":"public/2017/02/09/WebStorm、PhpStorm搭建本地授权服务/index.html","hash":"ab707ac1e337374b76d853d4a8bada04af450922","modified":1520219421604},{"_id":"public/2017/01/25/git在mac中自动补全功能配置/index.html","hash":"2b8dfc8cc3ef7aeef1d4d6a3a9f16f3dec7ae3f5","modified":1520219421604},{"_id":"public/2017/01/01/开篇记/index.html","hash":"96666e975edda6fe6d7d9646accfc7b48682daa8","modified":1520219421604},{"_id":"public/categories/开发工具/index.html","hash":"522a67b686ea3767ca82167fce4f4c10dc204974","modified":1520219421604},{"_id":"public/categories/规范/index.html","hash":"4fc50bcf3cb0e418f49aff6f7bfc4137bbaa3c2c","modified":1520219421604},{"_id":"public/categories/Git/index.html","hash":"d6d75643494c58dad470b4685b19fa61384317d4","modified":1520219421604},{"_id":"public/categories/Git/page/2/index.html","hash":"e026a0e5260435dbcdc503884255d21b060774f6","modified":1520219421604},{"_id":"public/categories/node/page/2/index.html","hash":"9f3359627fffbf6ea4b71615f05ed5cf18a666c8","modified":1520219421604},{"_id":"public/categories/node/index.html","hash":"b06c09a3d7ee58e2a3c4d5f1d819e8c93f0f9517","modified":1520219421604},{"_id":"public/categories/node/page/3/index.html","hash":"d18c3a8618949696404fec0efd33e376cd606255","modified":1520219421604},{"_id":"public/categories/HEXO/index.html","hash":"82ca09c7dc51cf8a32f5d1edc0e9ecc16d50a3c6","modified":1520219421604},{"_id":"public/categories/初始/index.html","hash":"50435c5d2077cef424e331e4d2fdcdabf6dbd39a","modified":1520219421604},{"_id":"public/archives/index.html","hash":"2f9f5226afd493445c6e353e41a49282f7a7675f","modified":1520219421604},{"_id":"public/archives/page/3/index.html","hash":"20fd8e875d8a8553c9f45c82a2879d8d76b92198","modified":1520219421605},{"_id":"public/archives/page/2/index.html","hash":"4e7b7b8c7c031c9642ea1543430e9b41251d849d","modified":1520219421605},{"_id":"public/archives/page/4/index.html","hash":"d0b4eab82202f5f88dd07b478366ffe60ba4e6da","modified":1520219421605},{"_id":"public/archives/page/5/index.html","hash":"da893de8a31afd08d7157858812972c6a01bc31e","modified":1520219421605},{"_id":"public/archives/page/6/index.html","hash":"199f1514b4bb94674730d1cfd91436bda4e3f261","modified":1520219421605},{"_id":"public/archives/2017/index.html","hash":"6e774fdab286ffd6f2fbaf089d4dc6cb35f5d92c","modified":1520219421605},{"_id":"public/archives/2017/page/2/index.html","hash":"a640897af2bf5b898e2ef80336c2983d52511831","modified":1520219421605},{"_id":"public/archives/2017/page/3/index.html","hash":"60c377f6b311be3c434838b8bc900a068b669b4b","modified":1520219421605},{"_id":"public/archives/2017/page/4/index.html","hash":"f880c43ab2938ffe631608588e09f327ddd79559","modified":1520219421605},{"_id":"public/archives/2017/page/5/index.html","hash":"1e2c903bf402f48da8a5ed048b6c687c3663ab9b","modified":1520219421605},{"_id":"public/archives/2017/01/index.html","hash":"0ab49390c5b95af7f0246e51c862195145cd3375","modified":1520219421605},{"_id":"public/archives/2017/02/index.html","hash":"746676c701a3b27dce4fe98d61d864b1d1e1e12f","modified":1520219421605},{"_id":"public/archives/2017/04/index.html","hash":"51c9c8976870a277f5d744c009bf2b3efa33753b","modified":1520219421605},{"_id":"public/archives/2017/04/page/2/index.html","hash":"fba3d76a3b4ab7f1613bfada3184293b13cea592","modified":1520219421605},{"_id":"public/archives/2017/04/page/3/index.html","hash":"c238c6da863f6630e066f3eb5bc1c38ac0bab9e2","modified":1520219421605},{"_id":"public/archives/2017/04/page/4/index.html","hash":"be39eaaa8805843e7e6c3790daaef6026c60a4ef","modified":1520219421605},{"_id":"public/archives/2017/05/index.html","hash":"4dd4632251f1d972288f317e38c3234bac3e7855","modified":1520219421605},{"_id":"public/archives/2017/06/index.html","hash":"c3bd223df0181a1f1ae0e7cc0ccddb55592b0d14","modified":1520219421605},{"_id":"public/archives/2018/index.html","hash":"323211cc854be2011f713bcd1823cacf0a28d884","modified":1520219421606},{"_id":"public/archives/2018/03/index.html","hash":"ee2d8b413e42b09102e4c50eab6f9a9241d3a4db","modified":1520219421606},{"_id":"public/index.html","hash":"54f488a24e3d716aa1b5b80dcbd5ad276fb85aaa","modified":1520219421606},{"_id":"public/page/2/index.html","hash":"b5e52121f511ea77905b73e84f0a1b07df177a4d","modified":1520219421606},{"_id":"public/page/3/index.html","hash":"e6997bcdf7c8a5ccd352e33f9bf72131a5cf3c11","modified":1520219421606},{"_id":"public/page/4/index.html","hash":"3135816542b36dbd688e92f8c30d2d84d39b43ef","modified":1520219421606},{"_id":"public/page/5/index.html","hash":"3f85cb67ed45c77e8829c9b87958e9332f6b639e","modified":1520219421606},{"_id":"public/page/6/index.html","hash":"6a0c6087b3d6aa6ae3e960ad51ffae384a853d3f","modified":1520219421606},{"_id":"public/tags/前端/index.html","hash":"e16360350aa7a7fb5c3552c6e93638b7cc63bad0","modified":1520219421606},{"_id":"public/tags/React/index.html","hash":"d9e7f81e58580038d73251543a971b75f7778f7c","modified":1520219421606},{"_id":"public/tags/git/index.html","hash":"46733501878474c1286f5456e4b39e127b50c08d","modified":1520219421606},{"_id":"public/tags/前端笔记/index.html","hash":"898821eb6d156ab27b35574f3691339b0de0fa7f","modified":1520219421606},{"_id":"public/tags/前端笔记/page/2/index.html","hash":"c78f301fc24616d1bd3153351fd75d5c1f240845","modified":1520219421606},{"_id":"public/tags/node/index.html","hash":"cc8d4d92c8b2e352609ba5a5191a52f84884770a","modified":1520219421606},{"_id":"public/tags/node/page/2/index.html","hash":"d90cb365c08f485c6b6d4e29817540c5e6f3358b","modified":1520219421606},{"_id":"public/tags/node基础/index.html","hash":"f5bd30bb73be44a4598b1351e6688b1572f70713","modified":1520219421606},{"_id":"public/tags/node基础/page/2/index.html","hash":"799e3148b03dea150e3f134d8189bc200d91184e","modified":1520219421606},{"_id":"public/tags/js/index.html","hash":"6d394227b79ff699e2f738e693c5c9e3f0046761","modified":1520219421606},{"_id":"public/tags/hexo/index.html","hash":"60724c42428e33cce1d5c365b1df5f03a4245944","modified":1520219421606},{"_id":"public/tags/装逼利器/index.html","hash":"e62244ea81bf779483c7a124feed7395f0c15ea3","modified":1520219421606},{"_id":"public/tags/uba/index.html","hash":"d7bd70371ea948938d772f062fb465bc86b43f59","modified":1520219421606},{"_id":"public/tags/文档目录，规范/index.html","hash":"611bd580f0ed8fe62a307cb50556e181ecbb8a65","modified":1520219421616},{"_id":"public/2018/03/05/相关文档目录/index.html","hash":"8f2b235c3c247637a201ee4240103792d96d5a13","modified":1520219421616},{"_id":"public/archives/2018/page/2/index.html","hash":"bd1fb8ee36abb727acabded2a5b22a8768593db4","modified":1520219421616},{"_id":"public/archives/2018/03/page/2/index.html","hash":"fff6e9fc417de191938d5e3044145d9749756d85","modified":1520219421616},{"_id":"public/images/logo.png","hash":"134816aa3b01e19a8166ded4fc490ff169c2e9d8","modified":1520219421621},{"_id":"public/images/mylogo.jpg","hash":"b7966211ca28b732f7eadaa173aeb579393d2c4c","modified":1520219421621},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1520219421621},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1520219421621},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1520219421621},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1520219421621},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1520219421622},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1520219421622},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1520219421622},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1520219421622},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1520219421622},{"_id":"public/images/logo.jpeg","hash":"b7966211ca28b732f7eadaa173aeb579393d2c4c","modified":1520219421622},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1520219421622},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1520219421622},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1520219421622},{"_id":"public/images/user.png","hash":"f97258d2b3a75e62f503299514a24515653df50e","modified":1520219421622},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1520219421622},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1520219421622},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1520219421622},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1520219421622},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1520219421622},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1520219421622},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1520219421622},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1520219421623},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1520219421623},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1520219421623},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1520219421623},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1520219421623},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1520219422533},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1520219422538},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1520219422543},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1520219422543},{"_id":"public/404.html","hash":"cd43f2f324fa7cdadc46b36337f1d5c555681053","modified":1520219422562},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1520219422562},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1520219422562},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1520219422563},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1520219422563},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1520219422563},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1520219422563},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1520219422563},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1520219422563},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1520219422563},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1520219422563},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1520219422563},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1520219422563},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1520219422563},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1520219422563},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1520219422563},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1520219422563},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1520219422563},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1520219422563},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1520219422564},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1520219422564},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1520219422564},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1520219422564},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1520219422564},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1520219422564},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1520219422564},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1520219422564},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1520219422564},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1520219422564},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1520219422564},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1520219422564},{"_id":"public/css/main.css","hash":"9961d99d202773de287c35076cf712d6383bc68b","modified":1520219422564},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1520219422564},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1520219422564},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1520219422564},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1520219422564},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1520219422564},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1520219422564},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1520219422564},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1520219422564},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1520219422564},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1520219422564},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1520219422565},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1520219422617}],"Category":[{"name":"开发工具","_id":"cjedne11h0004egcrglkafhu0"},{"name":"规范","_id":"cjedne11u000aegcrld9yrms0"},{"name":"Git","_id":"cjedne11x000fegcr0fsjoner"},{"name":"node","_id":"cjedne129000regcrjnovzmr6"},{"name":"HEXO","_id":"cjedne12m001degcr7ybmrwif"},{"name":"jsonp","_id":"cjedne12s001legcruq7yv3qe"},{"name":"初始","_id":"cjedne1380025egcrna5bf4ch"},{"name":"React","_id":"cjedne13d002iegcrg1ey704d"}],"Data":[],"Page":[{"title":"about","date":"2017-01-24T03:05:47.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-01-24 11:05:47\ntype: about\n---\n","updated":"2017-02-08T00:40:05.714Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjedne11c0001egcrxcf44q6j","content":"","excerpt":"","more":""},{"title":"categories","date":"2017-01-24T03:05:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-01-24 11:05:16\ntype: categories\n---\n","updated":"2017-02-08T00:40:05.716Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjedne11g0003egcrqdx7rk04","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-01-24T03:05:32.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-01-24 11:05:32\ntype: tags\n---\n","updated":"2017-02-08T00:40:05.725Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjedne11n0007egcrq6h0vm29","content":"","excerpt":"","more":""}],"Post":[{"title":"WebStorm搭建本地授权服务","date":"2017-02-09T00:55:44.000Z","_content":"> ### 本地搭建各种storm License Server ,建立自己的本地授权服务器。告别那些恶心的注册码。\n\n## 适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\n### 1、下载下面的文件\n<!--more-->\n#### 链接地址：\n http://ol31uv24o.bkt.clouddn.com/IDEALicenseServer.zip\n### 2、解压文件，找到自己的操作版本。\n\n以下使用windows64位系统做示例。\n找到![图1](http://ol320xopj.bkt.clouddn.com/blog-webstorm-01.jpg)\n\n双击运行 ***IntelliJIDEALicenseServer_windows_amd64.exe***\n\n![图2](http://ol320xopj.bkt.clouddn.com/blog-webstorm-02.jpg)\n\n### 3、之前如果通过其他方式注册的，可以在 ***WebStorm*** 中的 ***Helep*** 选项下 ***Register...*** 选项中进行重新注册。\n\n![图3](http://ol320xopj.bkt.clouddn.com/blog-webstorm-03.jpg)\n\n### 4、在注册界面选择 ***License server*** 授权服务器，填写 ***http://127.0.0.1:41017***,然后点击 “Activate” ,如下图\n![图4](http://ol320xopj.bkt.clouddn.com/blog-webstorm-04.jpg)\n","source":"_posts/WebStorm、PhpStorm搭建本地授权服务.md","raw":"---\ntitle: WebStorm搭建本地授权服务\ndate: 2017-02-09 08:55:44\ntags: [WebStorm,PhpStorm,开发工具]\ncategories: 开发工具\n---\n> ### 本地搭建各种storm License Server ,建立自己的本地授权服务器。告别那些恶心的注册码。\n\n## 适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\n### 1、下载下面的文件\n<!--more-->\n#### 链接地址：\n http://ol31uv24o.bkt.clouddn.com/IDEALicenseServer.zip\n### 2、解压文件，找到自己的操作版本。\n\n以下使用windows64位系统做示例。\n找到![图1](http://ol320xopj.bkt.clouddn.com/blog-webstorm-01.jpg)\n\n双击运行 ***IntelliJIDEALicenseServer_windows_amd64.exe***\n\n![图2](http://ol320xopj.bkt.clouddn.com/blog-webstorm-02.jpg)\n\n### 3、之前如果通过其他方式注册的，可以在 ***WebStorm*** 中的 ***Helep*** 选项下 ***Register...*** 选项中进行重新注册。\n\n![图3](http://ol320xopj.bkt.clouddn.com/blog-webstorm-03.jpg)\n\n### 4、在注册界面选择 ***License server*** 授权服务器，填写 ***http://127.0.0.1:41017***,然后点击 “Activate” ,如下图\n![图4](http://ol320xopj.bkt.clouddn.com/blog-webstorm-04.jpg)\n","slug":"WebStorm、PhpStorm搭建本地授权服务","published":1,"updated":"2017-06-02T02:14:47.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne1170000egcruy9xqooy","content":"<blockquote>\n<h3 id=\"本地搭建各种storm-License-Server-建立自己的本地授权服务器。告别那些恶心的注册码。\"><a href=\"#本地搭建各种storm-License-Server-建立自己的本地授权服务器。告别那些恶心的注册码。\" class=\"headerlink\" title=\"本地搭建各种storm License Server ,建立自己的本地授权服务器。告别那些恶心的注册码。\"></a>本地搭建各种storm License Server ,建立自己的本地授权服务器。告别那些恶心的注册码。</h3></blockquote>\n<h2 id=\"适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\"><a href=\"#适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\" class=\"headerlink\" title=\"适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\"></a>适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。</h2><h3 id=\"1、下载下面的文件\"><a href=\"#1、下载下面的文件\" class=\"headerlink\" title=\"1、下载下面的文件\"></a>1、下载下面的文件</h3><a id=\"more\"></a>\n<h4 id=\"链接地址：\"><a href=\"#链接地址：\" class=\"headerlink\" title=\"链接地址：\"></a>链接地址：</h4><p> <a href=\"http://ol31uv24o.bkt.clouddn.com/IDEALicenseServer.zip\" target=\"_blank\" rel=\"external\">http://ol31uv24o.bkt.clouddn.com/IDEALicenseServer.zip</a></p>\n<h3 id=\"2、解压文件，找到自己的操作版本。\"><a href=\"#2、解压文件，找到自己的操作版本。\" class=\"headerlink\" title=\"2、解压文件，找到自己的操作版本。\"></a>2、解压文件，找到自己的操作版本。</h3><p>以下使用windows64位系统做示例。<br>找到<img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-01.jpg\" alt=\"图1\"></p>\n<p>双击运行 <strong><em>IntelliJIDEALicenseServer_windows_amd64.exe</em></strong></p>\n<p><img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-02.jpg\" alt=\"图2\"></p>\n<h3 id=\"3、之前如果通过其他方式注册的，可以在-WebStorm-中的-Helep-选项下-Register…-选项中进行重新注册。\"><a href=\"#3、之前如果通过其他方式注册的，可以在-WebStorm-中的-Helep-选项下-Register…-选项中进行重新注册。\" class=\"headerlink\" title=\"3、之前如果通过其他方式注册的，可以在 WebStorm 中的 Helep 选项下 Register… 选项中进行重新注册。\"></a>3、之前如果通过其他方式注册的，可以在 <strong><em>WebStorm</em></strong> 中的 <strong><em>Helep</em></strong> 选项下 <strong><em>Register…</em></strong> 选项中进行重新注册。</h3><p><img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-03.jpg\" alt=\"图3\"></p>\n<h3 id=\"4、在注册界面选择-License-server-授权服务器，填写-http-127-0-0-1-41017-然后点击-“Activate”-如下图\"><a href=\"#4、在注册界面选择-License-server-授权服务器，填写-http-127-0-0-1-41017-然后点击-“Activate”-如下图\" class=\"headerlink\" title=\"4、在注册界面选择 License server 授权服务器，填写 http://127.0.0.1:41017,然后点击 “Activate” ,如下图\"></a>4、在注册界面选择 <strong><em>License server</em></strong> 授权服务器，填写 <strong><em><a href=\"http://127.0.0.1:41017\" target=\"_blank\" rel=\"external\">http://127.0.0.1:41017</a></em></strong>,然后点击 “Activate” ,如下图</h3><p><img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-04.jpg\" alt=\"图4\"></p>\n","excerpt":"<blockquote>\n<h3 id=\"本地搭建各种storm-License-Server-建立自己的本地授权服务器。告别那些恶心的注册码。\"><a href=\"#本地搭建各种storm-License-Server-建立自己的本地授权服务器。告别那些恶心的注册码。\" class=\"headerlink\" title=\"本地搭建各种storm License Server ,建立自己的本地授权服务器。告别那些恶心的注册码。\"></a>本地搭建各种storm License Server ,建立自己的本地授权服务器。告别那些恶心的注册码。</h3></blockquote>\n<h2 id=\"适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\"><a href=\"#适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\" class=\"headerlink\" title=\"适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。\"></a>适用情况：理论上支持所有Jetbrains产品，截止到目前所有版本都可正常激活。</h2><h3 id=\"1、下载下面的文件\"><a href=\"#1、下载下面的文件\" class=\"headerlink\" title=\"1、下载下面的文件\"></a>1、下载下面的文件</h3>","more":"<h4 id=\"链接地址：\"><a href=\"#链接地址：\" class=\"headerlink\" title=\"链接地址：\"></a>链接地址：</h4><p> <a href=\"http://ol31uv24o.bkt.clouddn.com/IDEALicenseServer.zip\">http://ol31uv24o.bkt.clouddn.com/IDEALicenseServer.zip</a></p>\n<h3 id=\"2、解压文件，找到自己的操作版本。\"><a href=\"#2、解压文件，找到自己的操作版本。\" class=\"headerlink\" title=\"2、解压文件，找到自己的操作版本。\"></a>2、解压文件，找到自己的操作版本。</h3><p>以下使用windows64位系统做示例。<br>找到<img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-01.jpg\" alt=\"图1\"></p>\n<p>双击运行 <strong><em>IntelliJIDEALicenseServer_windows_amd64.exe</em></strong></p>\n<p><img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-02.jpg\" alt=\"图2\"></p>\n<h3 id=\"3、之前如果通过其他方式注册的，可以在-WebStorm-中的-Helep-选项下-Register…-选项中进行重新注册。\"><a href=\"#3、之前如果通过其他方式注册的，可以在-WebStorm-中的-Helep-选项下-Register…-选项中进行重新注册。\" class=\"headerlink\" title=\"3、之前如果通过其他方式注册的，可以在 WebStorm 中的 Helep 选项下 Register… 选项中进行重新注册。\"></a>3、之前如果通过其他方式注册的，可以在 <strong><em>WebStorm</em></strong> 中的 <strong><em>Helep</em></strong> 选项下 <strong><em>Register…</em></strong> 选项中进行重新注册。</h3><p><img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-03.jpg\" alt=\"图3\"></p>\n<h3 id=\"4、在注册界面选择-License-server-授权服务器，填写-http-127-0-0-1-41017-然后点击-“Activate”-如下图\"><a href=\"#4、在注册界面选择-License-server-授权服务器，填写-http-127-0-0-1-41017-然后点击-“Activate”-如下图\" class=\"headerlink\" title=\"4、在注册界面选择 License server 授权服务器，填写 http://127.0.0.1:41017,然后点击 “Activate” ,如下图\"></a>4、在注册界面选择 <strong><em>License server</em></strong> 授权服务器，填写 <strong><em><a href=\"http://127.0.0.1:41017\">http://127.0.0.1:41017</a></em></strong>,然后点击 “Activate” ,如下图</h3><p><img src=\"http://ol320xopj.bkt.clouddn.com/blog-webstorm-04.jpg\" alt=\"图4\"></p>"},{"title":"React开发规范1.0","date":"2018-03-05T02:43:39.000Z","_content":"## React 代码规范\n\n### 内容目录 \n\n[Toc]\n\n---\n>1.部分遵循 [eslint 规则](https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules)， 后期可以直接引入 eslint\n>\n>2.此规范参考 tinper-bee 及 airbnb react 开发规范 \n\n### 基础规范\n- 统一使用 `utf-8` 编码\n- ==回车换行==统一使用`CRLF`\n- `Tab` 缩进为 `4` 个空格\n- 统一使用 ES6 语法进行开发 [ES6 语法参考](http://es6.ruanyifeng.com/)\n- 使用 JSX 语法，模块文件统一使用 js 后缀\n- 不要使用 `React.createClass`\n- 每一个文件只包含一个组件，每一个基本组件只包含单一功能 [组件设计原则](https://github.com/tinper-bee/react-components-docs/blob/master/%E7%BB%84%E4%BB%B6%E5%88%92%E5%88%86%E5%8E%9F%E5%88%99.md)\n\n<!--more-->\n### 命名\n- #### 文件命名\n    - 文件名使用大驼峰命名 `MyComponent`\n\n- #### 模块命名\n    - 模块使用当前模块文件夹名一样的名称\n    > 如果整个文件夹是一个模块，使用 `index.js`作为入口文件，然后直接使用当前文件夹名作为模块名称\n\n    ```\n    // bad\n    import Footer from './Footer/index';\n\n    // good\n    import Footer from './Footer';\n    ```\n\n- #### 引用命名\n    - 模块名使用大驼峰命名\n\n    ```javascriipt\n    // bad\n    import myComponent from './MyComponent';\n\n    // good\n    import MyComponent from './MyComponent';\n    ```\n    - 实例使用正常驼峰命名\n    ```\n    // bad\n    const MyComponent = <MyComponent />;\n\n    // good\n    const myComponent = <MyComponent />;\n    ```\n- #### 属性命名\n    - 避免使用 DOM 相关属性来用作其他用途\n    > 相关属性为正常 HTML 标签属性，如 `style、id、class、href` 等\n\n    ```javascriipt\n    // bad\n    <MyComponent style=\"fancy\" />\n\n    // good\n    <MyComponent variant=\"fancy\" />\n    ```\n\n### JSX 书写规范\n- #### 代码对齐\n    - 遵循以下的 JSX 语法缩进格式\n    ```\n    // bad\n    <Foo superLongParam=\"bar\"\n         anotherSuperLongParam=\"baz\" />\n    \n    // good, 有多行属性的话, 新建一行关闭标签\n    <Foo\n      superLongParam=\"bar\"\n      anotherSuperLongParam=\"baz\"\n    />\n    \n    // 若能在一行中显示, 直接写成一行\n    <Foo bar=\"bar\" />\n    \n    // 子元素按照常规方式缩进\n    <Foo\n      superLongParam=\"bar\"\n      anotherSuperLongParam=\"baz\"\n    >\n    </Foo>\n    ```\n- #### 单双引号\n    - 对于 JSX 属性值总是使用双引号（`\"`）,其他均使用单引号（`'`）\n    ```\n    // bad\n    <Foo bar='bar' />\n    \n    // good\n    <Foo bar=\"bar\" />\n    \n    // bad\n    <Foo style={{ left: \"20px\" }} />\n    \n    // good\n    <Foo style={{ left: '20px' }} />\n    ```\n- #### 空格\n    - 总是在自动关闭的标签前加一个空格，正常情况下不需要换行\n    ```\n    // bad\n    <Foo/>\n    \n    // very bad\n    <Foo                 />\n    \n    // bad\n    <Foo\n     />\n    \n    // good\n    <Foo />\n    ```\n    - 不要在 JSX `{}` 引用括号里两边加空格\n    ```\n    // bad\n    <Foo bar={ baz } />\n    \n    // good\n    <Foo bar={baz} />\n    ```\n\n- #### 标签\n    - 对于没有子元素的标签来说总是自己关闭标签\n    ```\n    // bad\n    <Foo className=\"stuff\"></Foo>\n\n    // good\n    <Foo className=\"stuff\" />\n    ```\n    - 如果模块有多行的属性，关闭标签时新建一行\n    ```\n    // bad\n    <Foo\n        bar=\"bar\"\n        baz=\"baz\" />\n\n    // good\n    <Foo\n        bar=\"bar\"\n        baz=\"baz\"\n    />\n    ```\n- #### 组件结构\n\n    - 总体规则\n\n        函数式组件形式优于 ES6 Class\n\n    - 书写规则\n\n        组件（ES6 Class）内部生命周期函数书写顺序，如下\n\n    1. 可选的`static`方法\n    \n    2. `constructor`构造函数\n    \n    3. `getChildContext`获取子元素内容\n    \n    4. `componentWillMount`模块渲染前\n    \n    5. `componentDidMount`模块渲染后\n    \n    6. `componentWillReceiveProps`模块将接受新的数据\n    \n    7. `shouldComponentUpdate`判断模块需不需要重新渲染\n    \n    8. `componentWillUpdate`上面的的方法返回 true ，模块将重新渲染\n    \n    9. `componentDidUpdate`模块渲染结束\n    \n    10. `componentWillUnmount`模块将从DOM中清除，可以做些清理任务\n    \n    11. 点击回调或者事件处理器 如 `onClickSubmit()` 或 `onChangeDescription()`\n    \n    12. `render` 里的 getter方法 如 `getSelectReason()` 或 `getFooterContent()`\n    \n    13. 可选的 render 方法 如 `renderNavigation()` 或 `renderProfilePicture()`\n    \n    14. `render` render() 方法\n    \n        - 示例代码\n        > 如何定义 propTypes, defaultProps, contextTypes, 等其他属性...\n        \n        ```javascript\n        import React from 'react';\n        import PropTypes from 'prop-types';\n        \n        // 定义 props 类型\n        const propTypes = {\n          name: React.PropTypes.string\n        };\n        \n        // 如果需要\n        const defaultProps = {\n          name: 'Guest'\n        };\n        \n        class Person extends React.Component {\n          // 构造函数\n          constructor (props) {\n            super(props);\n            // 定义 state\n            this.state = { smiling: false };\n          }\n        \n          // 生命周期方法\n          componentWillMount () {},\n          componentDidMount () {},\n          componentWillUnmount () {},\n          \n          // getters and setters\n          get attr() {}\n        \n          // handlers\n          handleClick = ()=>{},\n        \n          // render\n          renderChild() {},\n          render () {},\n        \n        }\n        \n        /**\n         * 类变量定义\n         */\n        Person.defaultProps = defaultProps;\n        \n        /**\n         * 统一都要定义 propTypes\n         * @type {Object}\n         */\n        Person.propTypes = propTypes;\n        ```\n<!--\n- #### Refs \n    - 在 Refs 里使用回调函数\n\n    ```javascript\n    // bad\n    <Foo\n      ref=\"myRef\"\n    />\n    \n    // good\n    <Foo\n      ref={(ref) => { this.myRef = ref; }}\n    />\n    ```\n-->\n### 语法规范\n- #### return (返回)\n    - 将多行的 JSX 标签写在 `()` 里，并确保有返回内容\n\n    ```javascript\n    // bad\n    render() {\n      return <MyComponent className=\"long body\" foo=\"bar\">\n               <MyChild />\n             </MyComponent>;\n    }\n    \n    // good\n    render() {\n      return (\n        <MyComponent className=\"long body\" foo=\"bar\">\n          <MyChild />\n        </MyComponent>\n      );\n    }\n    \n    // good,单行可以不需要\n    render() {\n      const body = <div>hello</div>;\n      return <MyComponent>{body}</MyComponent>;\n    }\n    ```\n\n\n<!--\n### 测试相关\n\n- 不推荐对鼠标右键功能进行改写\n- 页面各主要元素应设定唯一性标识\n    > 标识对照如下表\n    \n    分类     | 标识     | 来源      \n    ---|---|---\n    input  | name   |   可以使用后台表中定义页面展示元素字段名或id\n    button | id     | 根据按钮操作功能进行定义\n    a   | href  | 根据 href 属性确定 a 标签的唯一性\n    其他容器标签（带事件）|id   | 根据当前容器事件功能进行定义\n    -->\n\n\n\n","source":"_posts/React开发规范1-0.md","raw":"---\ntitle: React开发规范1.0\ndate: 2018-03-05 10:43:39\ntags: [前端,React]\ncategories: 规范\n---\n## React 代码规范\n\n### 内容目录 \n\n[Toc]\n\n---\n>1.部分遵循 [eslint 规则](https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules)， 后期可以直接引入 eslint\n>\n>2.此规范参考 tinper-bee 及 airbnb react 开发规范 \n\n### 基础规范\n- 统一使用 `utf-8` 编码\n- ==回车换行==统一使用`CRLF`\n- `Tab` 缩进为 `4` 个空格\n- 统一使用 ES6 语法进行开发 [ES6 语法参考](http://es6.ruanyifeng.com/)\n- 使用 JSX 语法，模块文件统一使用 js 后缀\n- 不要使用 `React.createClass`\n- 每一个文件只包含一个组件，每一个基本组件只包含单一功能 [组件设计原则](https://github.com/tinper-bee/react-components-docs/blob/master/%E7%BB%84%E4%BB%B6%E5%88%92%E5%88%86%E5%8E%9F%E5%88%99.md)\n\n<!--more-->\n### 命名\n- #### 文件命名\n    - 文件名使用大驼峰命名 `MyComponent`\n\n- #### 模块命名\n    - 模块使用当前模块文件夹名一样的名称\n    > 如果整个文件夹是一个模块，使用 `index.js`作为入口文件，然后直接使用当前文件夹名作为模块名称\n\n    ```\n    // bad\n    import Footer from './Footer/index';\n\n    // good\n    import Footer from './Footer';\n    ```\n\n- #### 引用命名\n    - 模块名使用大驼峰命名\n\n    ```javascriipt\n    // bad\n    import myComponent from './MyComponent';\n\n    // good\n    import MyComponent from './MyComponent';\n    ```\n    - 实例使用正常驼峰命名\n    ```\n    // bad\n    const MyComponent = <MyComponent />;\n\n    // good\n    const myComponent = <MyComponent />;\n    ```\n- #### 属性命名\n    - 避免使用 DOM 相关属性来用作其他用途\n    > 相关属性为正常 HTML 标签属性，如 `style、id、class、href` 等\n\n    ```javascriipt\n    // bad\n    <MyComponent style=\"fancy\" />\n\n    // good\n    <MyComponent variant=\"fancy\" />\n    ```\n\n### JSX 书写规范\n- #### 代码对齐\n    - 遵循以下的 JSX 语法缩进格式\n    ```\n    // bad\n    <Foo superLongParam=\"bar\"\n         anotherSuperLongParam=\"baz\" />\n    \n    // good, 有多行属性的话, 新建一行关闭标签\n    <Foo\n      superLongParam=\"bar\"\n      anotherSuperLongParam=\"baz\"\n    />\n    \n    // 若能在一行中显示, 直接写成一行\n    <Foo bar=\"bar\" />\n    \n    // 子元素按照常规方式缩进\n    <Foo\n      superLongParam=\"bar\"\n      anotherSuperLongParam=\"baz\"\n    >\n    </Foo>\n    ```\n- #### 单双引号\n    - 对于 JSX 属性值总是使用双引号（`\"`）,其他均使用单引号（`'`）\n    ```\n    // bad\n    <Foo bar='bar' />\n    \n    // good\n    <Foo bar=\"bar\" />\n    \n    // bad\n    <Foo style={{ left: \"20px\" }} />\n    \n    // good\n    <Foo style={{ left: '20px' }} />\n    ```\n- #### 空格\n    - 总是在自动关闭的标签前加一个空格，正常情况下不需要换行\n    ```\n    // bad\n    <Foo/>\n    \n    // very bad\n    <Foo                 />\n    \n    // bad\n    <Foo\n     />\n    \n    // good\n    <Foo />\n    ```\n    - 不要在 JSX `{}` 引用括号里两边加空格\n    ```\n    // bad\n    <Foo bar={ baz } />\n    \n    // good\n    <Foo bar={baz} />\n    ```\n\n- #### 标签\n    - 对于没有子元素的标签来说总是自己关闭标签\n    ```\n    // bad\n    <Foo className=\"stuff\"></Foo>\n\n    // good\n    <Foo className=\"stuff\" />\n    ```\n    - 如果模块有多行的属性，关闭标签时新建一行\n    ```\n    // bad\n    <Foo\n        bar=\"bar\"\n        baz=\"baz\" />\n\n    // good\n    <Foo\n        bar=\"bar\"\n        baz=\"baz\"\n    />\n    ```\n- #### 组件结构\n\n    - 总体规则\n\n        函数式组件形式优于 ES6 Class\n\n    - 书写规则\n\n        组件（ES6 Class）内部生命周期函数书写顺序，如下\n\n    1. 可选的`static`方法\n    \n    2. `constructor`构造函数\n    \n    3. `getChildContext`获取子元素内容\n    \n    4. `componentWillMount`模块渲染前\n    \n    5. `componentDidMount`模块渲染后\n    \n    6. `componentWillReceiveProps`模块将接受新的数据\n    \n    7. `shouldComponentUpdate`判断模块需不需要重新渲染\n    \n    8. `componentWillUpdate`上面的的方法返回 true ，模块将重新渲染\n    \n    9. `componentDidUpdate`模块渲染结束\n    \n    10. `componentWillUnmount`模块将从DOM中清除，可以做些清理任务\n    \n    11. 点击回调或者事件处理器 如 `onClickSubmit()` 或 `onChangeDescription()`\n    \n    12. `render` 里的 getter方法 如 `getSelectReason()` 或 `getFooterContent()`\n    \n    13. 可选的 render 方法 如 `renderNavigation()` 或 `renderProfilePicture()`\n    \n    14. `render` render() 方法\n    \n        - 示例代码\n        > 如何定义 propTypes, defaultProps, contextTypes, 等其他属性...\n        \n        ```javascript\n        import React from 'react';\n        import PropTypes from 'prop-types';\n        \n        // 定义 props 类型\n        const propTypes = {\n          name: React.PropTypes.string\n        };\n        \n        // 如果需要\n        const defaultProps = {\n          name: 'Guest'\n        };\n        \n        class Person extends React.Component {\n          // 构造函数\n          constructor (props) {\n            super(props);\n            // 定义 state\n            this.state = { smiling: false };\n          }\n        \n          // 生命周期方法\n          componentWillMount () {},\n          componentDidMount () {},\n          componentWillUnmount () {},\n          \n          // getters and setters\n          get attr() {}\n        \n          // handlers\n          handleClick = ()=>{},\n        \n          // render\n          renderChild() {},\n          render () {},\n        \n        }\n        \n        /**\n         * 类变量定义\n         */\n        Person.defaultProps = defaultProps;\n        \n        /**\n         * 统一都要定义 propTypes\n         * @type {Object}\n         */\n        Person.propTypes = propTypes;\n        ```\n<!--\n- #### Refs \n    - 在 Refs 里使用回调函数\n\n    ```javascript\n    // bad\n    <Foo\n      ref=\"myRef\"\n    />\n    \n    // good\n    <Foo\n      ref={(ref) => { this.myRef = ref; }}\n    />\n    ```\n-->\n### 语法规范\n- #### return (返回)\n    - 将多行的 JSX 标签写在 `()` 里，并确保有返回内容\n\n    ```javascript\n    // bad\n    render() {\n      return <MyComponent className=\"long body\" foo=\"bar\">\n               <MyChild />\n             </MyComponent>;\n    }\n    \n    // good\n    render() {\n      return (\n        <MyComponent className=\"long body\" foo=\"bar\">\n          <MyChild />\n        </MyComponent>\n      );\n    }\n    \n    // good,单行可以不需要\n    render() {\n      const body = <div>hello</div>;\n      return <MyComponent>{body}</MyComponent>;\n    }\n    ```\n\n\n<!--\n### 测试相关\n\n- 不推荐对鼠标右键功能进行改写\n- 页面各主要元素应设定唯一性标识\n    > 标识对照如下表\n    \n    分类     | 标识     | 来源      \n    ---|---|---\n    input  | name   |   可以使用后台表中定义页面展示元素字段名或id\n    button | id     | 根据按钮操作功能进行定义\n    a   | href  | 根据 href 属性确定 a 标签的唯一性\n    其他容器标签（带事件）|id   | 根据当前容器事件功能进行定义\n    -->\n\n\n\n","slug":"React开发规范1-0","published":1,"updated":"2018-03-05T02:44:49.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11d0002egcrlwcwmoy7","content":"<h2 id=\"React-代码规范\"><a href=\"#React-代码规范\" class=\"headerlink\" title=\"React 代码规范\"></a>React 代码规范</h2><h3 id=\"内容目录\"><a href=\"#内容目录\" class=\"headerlink\" title=\"内容目录\"></a>内容目录</h3><p>[Toc]</p>\n<hr>\n<blockquote>\n<p>1.部分遵循 <a href=\"https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules\" target=\"_blank\" rel=\"external\">eslint 规则</a>， 后期可以直接引入 eslint</p>\n<p>2.此规范参考 tinper-bee 及 airbnb react 开发规范 </p>\n</blockquote>\n<h3 id=\"基础规范\"><a href=\"#基础规范\" class=\"headerlink\" title=\"基础规范\"></a>基础规范</h3><ul>\n<li>统一使用 <code>utf-8</code> 编码</li>\n<li>==回车换行==统一使用<code>CRLF</code></li>\n<li><code>Tab</code> 缩进为 <code>4</code> 个空格</li>\n<li>统一使用 ES6 语法进行开发 <a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"external\">ES6 语法参考</a></li>\n<li>使用 JSX 语法，模块文件统一使用 js 后缀</li>\n<li>不要使用 <code>React.createClass</code></li>\n<li>每一个文件只包含一个组件，每一个基本组件只包含单一功能 <a href=\"https://github.com/tinper-bee/react-components-docs/blob/master/%E7%BB%84%E4%BB%B6%E5%88%92%E5%88%86%E5%8E%9F%E5%88%99.md\" target=\"_blank\" rel=\"external\">组件设计原则</a></li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><ul>\n<li><h4 id=\"文件命名\"><a href=\"#文件命名\" class=\"headerlink\" title=\"文件命名\"></a>文件命名</h4><ul>\n<li>文件名使用大驼峰命名 <code>MyComponent</code></li>\n</ul>\n</li>\n<li><h4 id=\"模块命名\"><a href=\"#模块命名\" class=\"headerlink\" title=\"模块命名\"></a>模块命名</h4><ul>\n<li><p>模块使用当前模块文件夹名一样的名称</p>\n<blockquote>\n<p>如果整个文件夹是一个模块，使用 <code>index.js</code>作为入口文件，然后直接使用当前文件夹名作为模块名称</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">import Footer from &apos;./Footer/index&apos;;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">import Footer from &apos;./Footer&apos;;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"引用命名\"><a href=\"#引用命名\" class=\"headerlink\" title=\"引用命名\"></a>引用命名</h4><ul>\n<li><p>模块名使用大驼峰命名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">import myComponent from &apos;./MyComponent&apos;;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">import MyComponent from &apos;./MyComponent&apos;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>实例使用正常驼峰命名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">const MyComponent = &lt;MyComponent /&gt;;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">const myComponent = &lt;MyComponent /&gt;;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"属性命名\"><a href=\"#属性命名\" class=\"headerlink\" title=\"属性命名\"></a>属性命名</h4><ul>\n<li><p>避免使用 DOM 相关属性来用作其他用途</p>\n<blockquote>\n<p>相关属性为正常 HTML 标签属性，如 <code>style、id、class、href</code> 等</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;MyComponent style=&quot;fancy&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;MyComponent variant=&quot;fancy&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"JSX-书写规范\"><a href=\"#JSX-书写规范\" class=\"headerlink\" title=\"JSX 书写规范\"></a>JSX 书写规范</h3><ul>\n<li><h4 id=\"代码对齐\"><a href=\"#代码对齐\" class=\"headerlink\" title=\"代码对齐\"></a>代码对齐</h4><ul>\n<li>遵循以下的 JSX 语法缩进格式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo superLongParam=&quot;bar&quot;</div><div class=\"line\">     anotherSuperLongParam=&quot;baz&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good, 有多行属性的话, 新建一行关闭标签</div><div class=\"line\">&lt;Foo</div><div class=\"line\">  superLongParam=&quot;bar&quot;</div><div class=\"line\">  anotherSuperLongParam=&quot;baz&quot;</div><div class=\"line\">/&gt;</div><div class=\"line\"></div><div class=\"line\">// 若能在一行中显示, 直接写成一行</div><div class=\"line\">&lt;Foo bar=&quot;bar&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// 子元素按照常规方式缩进</div><div class=\"line\">&lt;Foo</div><div class=\"line\">  superLongParam=&quot;bar&quot;</div><div class=\"line\">  anotherSuperLongParam=&quot;baz&quot;</div><div class=\"line\">&gt;</div><div class=\"line\">&lt;/Foo&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"单双引号\"><a href=\"#单双引号\" class=\"headerlink\" title=\"单双引号\"></a>单双引号</h4><ul>\n<li>对于 JSX 属性值总是使用双引号（<code>&quot;</code>）,其他均使用单引号（<code>&#39;</code>）<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo bar=&apos;bar&apos; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo bar=&quot;bar&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo style=&#123;&#123; left: &quot;20px&quot; &#125;&#125; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo style=&#123;&#123; left: &apos;20px&apos; &#125;&#125; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"空格\"><a href=\"#空格\" class=\"headerlink\" title=\"空格\"></a>空格</h4><ul>\n<li><p>总是在自动关闭的标签前加一个空格，正常情况下不需要换行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo/&gt;</div><div class=\"line\"></div><div class=\"line\">// very bad</div><div class=\"line\">&lt;Foo                 /&gt;</div><div class=\"line\"></div><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo</div><div class=\"line\"> /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo /&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>不要在 JSX <code>{}</code> 引用括号里两边加空格</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo bar=&#123; baz &#125; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo bar=&#123;baz&#125; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h4><ul>\n<li><p>对于没有子元素的标签来说总是自己关闭标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo className=&quot;stuff&quot;&gt;&lt;/Foo&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo className=&quot;stuff&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果模块有多行的属性，关闭标签时新建一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo</div><div class=\"line\">    bar=&quot;bar&quot;</div><div class=\"line\">    baz=&quot;baz&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo</div><div class=\"line\">    bar=&quot;bar&quot;</div><div class=\"line\">    baz=&quot;baz&quot;</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"组件结构\"><a href=\"#组件结构\" class=\"headerlink\" title=\"组件结构\"></a>组件结构</h4><ul>\n<li><p>总体规则</p>\n<p>  函数式组件形式优于 ES6 Class</p>\n</li>\n<li><p>书写规则</p>\n<p>  组件（ES6 Class）内部生命周期函数书写顺序，如下</p>\n</li>\n</ul>\n<ol>\n<li><p>可选的<code>static</code>方法</p>\n</li>\n<li><p><code>constructor</code>构造函数</p>\n</li>\n<li><p><code>getChildContext</code>获取子元素内容</p>\n</li>\n<li><p><code>componentWillMount</code>模块渲染前</p>\n</li>\n<li><p><code>componentDidMount</code>模块渲染后</p>\n</li>\n<li><p><code>componentWillReceiveProps</code>模块将接受新的数据</p>\n</li>\n<li><p><code>shouldComponentUpdate</code>判断模块需不需要重新渲染</p>\n</li>\n<li><p><code>componentWillUpdate</code>上面的的方法返回 true ，模块将重新渲染</p>\n</li>\n<li><p><code>componentDidUpdate</code>模块渲染结束</p>\n</li>\n<li><p><code>componentWillUnmount</code>模块将从DOM中清除，可以做些清理任务</p>\n</li>\n<li><p>点击回调或者事件处理器 如 <code>onClickSubmit()</code> 或 <code>onChangeDescription()</code></p>\n</li>\n<li><p><code>render</code> 里的 getter方法 如 <code>getSelectReason()</code> 或 <code>getFooterContent()</code></p>\n</li>\n<li><p>可选的 render 方法 如 <code>renderNavigation()</code> 或 <code>renderProfilePicture()</code></p>\n</li>\n<li><p><code>render</code> render() 方法</p>\n<ul>\n<li>示例代码<blockquote>\n<p>如何定义 propTypes, defaultProps, contextTypes, 等其他属性…</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 定义 props 类型</span></div><div class=\"line\"><span class=\"keyword\">const</span> propTypes = &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: React.PropTypes.string</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 如果需要</span></div><div class=\"line\"><span class=\"keyword\">const</span> defaultProps = &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'Guest'</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// 构造函数</span></div><div class=\"line\">  <span class=\"keyword\">constructor</span> (props) &#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(props);</div><div class=\"line\">    <span class=\"comment\">// 定义 state</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.state = &#123; <span class=\"attr\">smiling</span>: <span class=\"literal\">false</span> &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// 生命周期方法</span></div><div class=\"line\">  componentWillMount () &#123;&#125;,</div><div class=\"line\">  componentDidMount () &#123;&#125;,</div><div class=\"line\">  componentWillUnmount () &#123;&#125;,</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">// getters and setters</span></div><div class=\"line\">  get attr() &#123;&#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// handlers</span></div><div class=\"line\">  handleClick = <span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;,</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// render</span></div><div class=\"line\">  renderChild() &#123;&#125;,</div><div class=\"line\">  render () &#123;&#125;,</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 类变量定义</div><div class=\"line\"> */</div><div class=\"line\">Person.defaultProps = defaultProps;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 统一都要定义 propTypes</div><div class=\"line\"> * @type &#123;Object&#125;</div><div class=\"line\"> */</div><div class=\"line\">Person.propTypes = propTypes;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<!--\n- #### Refs \n    - 在 Refs 里使用回调函数\n\n    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// bad</span></div><div class=\"line\">&lt;Foo</div><div class=\"line\">  ref=<span class=\"string\">\"myRef\"</span></div><div class=\"line\">/&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// good</span></div><div class=\"line\">&lt;Foo</div><div class=\"line\">  ref=&#123;(ref) =&gt; &#123; <span class=\"keyword\">this</span>.myRef = ref; &#125;&#125;</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<p>–&gt;</p>\n<h3 id=\"语法规范\"><a href=\"#语法规范\" class=\"headerlink\" title=\"语法规范\"></a>语法规范</h3><ul>\n<li><h4 id=\"return-返回\"><a href=\"#return-返回\" class=\"headerlink\" title=\"return (返回)\"></a>return (返回)</h4><ul>\n<li><p>将多行的 JSX 标签写在 <code>()</code> 里，并确保有返回内容</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// bad</span></div><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &lt;MyComponent className=\"long body\" foo=\"bar\"&gt;</div><div class=\"line\">           &lt;MyChild /&gt;</div><div class=\"line\">         &lt;/MyComponent&gt;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// good</span></div><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> (</div><div class=\"line\">    &lt;MyComponent className=\"long body\" foo=\"bar\"&gt;</div><div class=\"line\">      &lt;MyChild /&gt;</div><div class=\"line\">    &lt;/MyComponent&gt;</div><div class=\"line\">  );</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// good,单行可以不需要</span></div><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> body = &lt;div&gt;hello&lt;/div&gt;;</div><div class=\"line\">  <span class=\"keyword\">return</span> &lt;MyComponent&gt;&#123;body&#125;&lt;/MyComponent&gt;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<!--\n### 测试相关\n\n- 不推荐对鼠标右键功能进行改写\n- 页面各主要元素应设定唯一性标识\n    > 标识对照如下表\n\n    分类     | 标识     | 来源      \n    ---|---|---\n    input  | name   |   可以使用后台表中定义页面展示元素字段名或id\n    button | id     | 根据按钮操作功能进行定义\n    a   | href  | 根据 href 属性确定 a 标签的唯一性\n    其他容器标签（带事件）|id   | 根据当前容器事件功能进行定义\n    -->\n","excerpt":"<h2 id=\"React-代码规范\"><a href=\"#React-代码规范\" class=\"headerlink\" title=\"React 代码规范\"></a>React 代码规范</h2><h3 id=\"内容目录\"><a href=\"#内容目录\" class=\"headerlink\" title=\"内容目录\"></a>内容目录</h3><p>[Toc]</p>\n<hr>\n<blockquote>\n<p>1.部分遵循 <a href=\"https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules\">eslint 规则</a>， 后期可以直接引入 eslint</p>\n<p>2.此规范参考 tinper-bee 及 airbnb react 开发规范 </p>\n</blockquote>\n<h3 id=\"基础规范\"><a href=\"#基础规范\" class=\"headerlink\" title=\"基础规范\"></a>基础规范</h3><ul>\n<li>统一使用 <code>utf-8</code> 编码</li>\n<li>==回车换行==统一使用<code>CRLF</code></li>\n<li><code>Tab</code> 缩进为 <code>4</code> 个空格</li>\n<li>统一使用 ES6 语法进行开发 <a href=\"http://es6.ruanyifeng.com/\">ES6 语法参考</a></li>\n<li>使用 JSX 语法，模块文件统一使用 js 后缀</li>\n<li>不要使用 <code>React.createClass</code></li>\n<li>每一个文件只包含一个组件，每一个基本组件只包含单一功能 <a href=\"https://github.com/tinper-bee/react-components-docs/blob/master/%E7%BB%84%E4%BB%B6%E5%88%92%E5%88%86%E5%8E%9F%E5%88%99.md\">组件设计原则</a></li>\n</ul>","more":"<h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><ul>\n<li><h4 id=\"文件命名\"><a href=\"#文件命名\" class=\"headerlink\" title=\"文件命名\"></a>文件命名</h4><ul>\n<li>文件名使用大驼峰命名 <code>MyComponent</code></li>\n</ul>\n</li>\n<li><h4 id=\"模块命名\"><a href=\"#模块命名\" class=\"headerlink\" title=\"模块命名\"></a>模块命名</h4><ul>\n<li><p>模块使用当前模块文件夹名一样的名称</p>\n<blockquote>\n<p>如果整个文件夹是一个模块，使用 <code>index.js</code>作为入口文件，然后直接使用当前文件夹名作为模块名称</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">import Footer from &apos;./Footer/index&apos;;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">import Footer from &apos;./Footer&apos;;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"引用命名\"><a href=\"#引用命名\" class=\"headerlink\" title=\"引用命名\"></a>引用命名</h4><ul>\n<li><p>模块名使用大驼峰命名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">import myComponent from &apos;./MyComponent&apos;;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">import MyComponent from &apos;./MyComponent&apos;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>实例使用正常驼峰命名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">const MyComponent = &lt;MyComponent /&gt;;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">const myComponent = &lt;MyComponent /&gt;;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"属性命名\"><a href=\"#属性命名\" class=\"headerlink\" title=\"属性命名\"></a>属性命名</h4><ul>\n<li><p>避免使用 DOM 相关属性来用作其他用途</p>\n<blockquote>\n<p>相关属性为正常 HTML 标签属性，如 <code>style、id、class、href</code> 等</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;MyComponent style=&quot;fancy&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;MyComponent variant=&quot;fancy&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"JSX-书写规范\"><a href=\"#JSX-书写规范\" class=\"headerlink\" title=\"JSX 书写规范\"></a>JSX 书写规范</h3><ul>\n<li><h4 id=\"代码对齐\"><a href=\"#代码对齐\" class=\"headerlink\" title=\"代码对齐\"></a>代码对齐</h4><ul>\n<li>遵循以下的 JSX 语法缩进格式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo superLongParam=&quot;bar&quot;</div><div class=\"line\">     anotherSuperLongParam=&quot;baz&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good, 有多行属性的话, 新建一行关闭标签</div><div class=\"line\">&lt;Foo</div><div class=\"line\">  superLongParam=&quot;bar&quot;</div><div class=\"line\">  anotherSuperLongParam=&quot;baz&quot;</div><div class=\"line\">/&gt;</div><div class=\"line\"></div><div class=\"line\">// 若能在一行中显示, 直接写成一行</div><div class=\"line\">&lt;Foo bar=&quot;bar&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// 子元素按照常规方式缩进</div><div class=\"line\">&lt;Foo</div><div class=\"line\">  superLongParam=&quot;bar&quot;</div><div class=\"line\">  anotherSuperLongParam=&quot;baz&quot;</div><div class=\"line\">&gt;</div><div class=\"line\">&lt;/Foo&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"单双引号\"><a href=\"#单双引号\" class=\"headerlink\" title=\"单双引号\"></a>单双引号</h4><ul>\n<li>对于 JSX 属性值总是使用双引号（<code>&quot;</code>）,其他均使用单引号（<code>&#39;</code>）<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo bar=&apos;bar&apos; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo bar=&quot;bar&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo style=&#123;&#123; left: &quot;20px&quot; &#125;&#125; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo style=&#123;&#123; left: &apos;20px&apos; &#125;&#125; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"空格\"><a href=\"#空格\" class=\"headerlink\" title=\"空格\"></a>空格</h4><ul>\n<li><p>总是在自动关闭的标签前加一个空格，正常情况下不需要换行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo/&gt;</div><div class=\"line\"></div><div class=\"line\">// very bad</div><div class=\"line\">&lt;Foo                 /&gt;</div><div class=\"line\"></div><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo</div><div class=\"line\"> /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo /&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>不要在 JSX <code>{}</code> 引用括号里两边加空格</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo bar=&#123; baz &#125; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo bar=&#123;baz&#125; /&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h4><ul>\n<li><p>对于没有子元素的标签来说总是自己关闭标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo className=&quot;stuff&quot;&gt;&lt;/Foo&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo className=&quot;stuff&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果模块有多行的属性，关闭标签时新建一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">// bad</div><div class=\"line\">&lt;Foo</div><div class=\"line\">    bar=&quot;bar&quot;</div><div class=\"line\">    baz=&quot;baz&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">// good</div><div class=\"line\">&lt;Foo</div><div class=\"line\">    bar=&quot;bar&quot;</div><div class=\"line\">    baz=&quot;baz&quot;</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"组件结构\"><a href=\"#组件结构\" class=\"headerlink\" title=\"组件结构\"></a>组件结构</h4><ul>\n<li><p>总体规则</p>\n<p>  函数式组件形式优于 ES6 Class</p>\n</li>\n<li><p>书写规则</p>\n<p>  组件（ES6 Class）内部生命周期函数书写顺序，如下</p>\n</li>\n</ul>\n<ol>\n<li><p>可选的<code>static</code>方法</p>\n</li>\n<li><p><code>constructor</code>构造函数</p>\n</li>\n<li><p><code>getChildContext</code>获取子元素内容</p>\n</li>\n<li><p><code>componentWillMount</code>模块渲染前</p>\n</li>\n<li><p><code>componentDidMount</code>模块渲染后</p>\n</li>\n<li><p><code>componentWillReceiveProps</code>模块将接受新的数据</p>\n</li>\n<li><p><code>shouldComponentUpdate</code>判断模块需不需要重新渲染</p>\n</li>\n<li><p><code>componentWillUpdate</code>上面的的方法返回 true ，模块将重新渲染</p>\n</li>\n<li><p><code>componentDidUpdate</code>模块渲染结束</p>\n</li>\n<li><p><code>componentWillUnmount</code>模块将从DOM中清除，可以做些清理任务</p>\n</li>\n<li><p>点击回调或者事件处理器 如 <code>onClickSubmit()</code> 或 <code>onChangeDescription()</code></p>\n</li>\n<li><p><code>render</code> 里的 getter方法 如 <code>getSelectReason()</code> 或 <code>getFooterContent()</code></p>\n</li>\n<li><p>可选的 render 方法 如 <code>renderNavigation()</code> 或 <code>renderProfilePicture()</code></p>\n</li>\n<li><p><code>render</code> render() 方法</p>\n<ul>\n<li>示例代码<blockquote>\n<p>如何定义 propTypes, defaultProps, contextTypes, 等其他属性…</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 定义 props 类型</span></div><div class=\"line\"><span class=\"keyword\">const</span> propTypes = &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: React.PropTypes.string</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 如果需要</span></div><div class=\"line\"><span class=\"keyword\">const</span> defaultProps = &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'Guest'</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// 构造函数</span></div><div class=\"line\">  <span class=\"keyword\">constructor</span> (props) &#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(props);</div><div class=\"line\">    <span class=\"comment\">// 定义 state</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.state = &#123; <span class=\"attr\">smiling</span>: <span class=\"literal\">false</span> &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// 生命周期方法</span></div><div class=\"line\">  componentWillMount () &#123;&#125;,</div><div class=\"line\">  componentDidMount () &#123;&#125;,</div><div class=\"line\">  componentWillUnmount () &#123;&#125;,</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">// getters and setters</span></div><div class=\"line\">  get attr() &#123;&#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// handlers</span></div><div class=\"line\">  handleClick = <span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;,</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// render</span></div><div class=\"line\">  renderChild() &#123;&#125;,</div><div class=\"line\">  render () &#123;&#125;,</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 类变量定义</div><div class=\"line\"> */</span></div><div class=\"line\">Person.defaultProps = defaultProps;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 统一都要定义 propTypes</div><div class=\"line\"> * @type &#123;Object&#125;</div><div class=\"line\"> */</span></div><div class=\"line\">Person.propTypes = propTypes;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<!--\n- #### Refs \n    - 在 Refs 里使用回调函数\n\n    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// bad</span></div><div class=\"line\">&lt;Foo</div><div class=\"line\">  ref=<span class=\"string\">\"myRef\"</span></div><div class=\"line\">/&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// good</span></div><div class=\"line\">&lt;Foo</div><div class=\"line\">  ref=&#123;(ref) =&gt; &#123; <span class=\"keyword\">this</span>.myRef = ref; &#125;&#125;</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure>\n<p>–&gt;</p>\n<h3 id=\"语法规范\"><a href=\"#语法规范\" class=\"headerlink\" title=\"语法规范\"></a>语法规范</h3><ul>\n<li><h4 id=\"return-返回\"><a href=\"#return-返回\" class=\"headerlink\" title=\"return (返回)\"></a>return (返回)</h4><ul>\n<li><p>将多行的 JSX 标签写在 <code>()</code> 里，并确保有返回内容</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// bad</span></div><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &lt;MyComponent className=\"long body\" foo=\"bar\"&gt;</div><div class=\"line\">           &lt;MyChild /&gt;</div><div class=\"line\">         &lt;/MyComponent&gt;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// good</span></div><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> (</div><div class=\"line\">    &lt;MyComponent className=\"long body\" foo=\"bar\"&gt;</div><div class=\"line\">      &lt;MyChild /&gt;</div><div class=\"line\">    &lt;/MyComponent&gt;</div><div class=\"line\">  );</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// good,单行可以不需要</span></div><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> body = &lt;div&gt;hello&lt;/div&gt;;</div><div class=\"line\">  <span class=\"keyword\">return</span> &lt;MyComponent&gt;&#123;body&#125;&lt;/MyComponent&gt;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<!--\n### 测试相关\n\n- 不推荐对鼠标右键功能进行改写\n- 页面各主要元素应设定唯一性标识\n    > 标识对照如下表\n\n    分类     | 标识     | 来源      \n    ---|---|---\n    input  | name   |   可以使用后台表中定义页面展示元素字段名或id\n    button | id     | 根据按钮操作功能进行定义\n    a   | href  | 根据 href 属性确定 a 标签的唯一性\n    其他容器标签（带事件）|id   | 根据当前容器事件功能进行定义\n    -->"},{"title":"git","date":"2017-04-29T02:04:24.000Z","_content":"## pwd\n  print working directory 打印当前工作目录\n\n## 告诉git当前用户\n\n- 用git第一次需要配置 以后都不需要\n\n```\ngit config --global user.name <your name>\ngit config --global user.email <your email>\ngit config list 查看配置列表\n\n```\n<!--more-->\n## 初始化文件夹（告诉git那个文件夹归git所管理）\n\n```\ngit init\n```\n## 打开文件夹\n```\ncd\n```\n\n## 删除文件夹  循环删除（递归删除）\n```\nrm -rf <文件夹名>\n```\n## 删除文件\n```\nrm <文件名>\n```\n\n## macOS中查看隐藏文件夹\n```\nls -a\n```\n## 新建文件\n```\ntouch <文件名>\n```\n## 查看文件名\n```\ncat <文件名>\n```\n## 编辑文件 进入vi编辑模式\n```\nvi <文件名>\n```\n## 在vi模式下\n- 按 `i` 键 进入编辑模式\n- 编辑文件\n- 按  `esc` 键，退出编辑模式\n- `:wq` 保存并退出\n- `:q!` 强制退出，不保存\n\n## 工作区进行提交到暂存区\n- 提交全部\n```\ngit add .\n或者\ngit add -A\n```\n\n- 提交单个文件\n```\ngit add <文件名>\n```\n\n## 暂存区提交到版本库\n```\ngit commit -m \"更新内容描述\"\n```\n## 提交到版本库\n```\ngit push\n```\n## 查看文件所在区的提交状态\n```\ngit status\n```\n","source":"_posts/git.md","raw":"---\ntitle: git\ndate: 2017-04-29 10:04:24\ntags: [git,前端笔记]\ncategories: Git\n---\n## pwd\n  print working directory 打印当前工作目录\n\n## 告诉git当前用户\n\n- 用git第一次需要配置 以后都不需要\n\n```\ngit config --global user.name <your name>\ngit config --global user.email <your email>\ngit config list 查看配置列表\n\n```\n<!--more-->\n## 初始化文件夹（告诉git那个文件夹归git所管理）\n\n```\ngit init\n```\n## 打开文件夹\n```\ncd\n```\n\n## 删除文件夹  循环删除（递归删除）\n```\nrm -rf <文件夹名>\n```\n## 删除文件\n```\nrm <文件名>\n```\n\n## macOS中查看隐藏文件夹\n```\nls -a\n```\n## 新建文件\n```\ntouch <文件名>\n```\n## 查看文件名\n```\ncat <文件名>\n```\n## 编辑文件 进入vi编辑模式\n```\nvi <文件名>\n```\n## 在vi模式下\n- 按 `i` 键 进入编辑模式\n- 编辑文件\n- 按  `esc` 键，退出编辑模式\n- `:wq` 保存并退出\n- `:q!` 强制退出，不保存\n\n## 工作区进行提交到暂存区\n- 提交全部\n```\ngit add .\n或者\ngit add -A\n```\n\n- 提交单个文件\n```\ngit add <文件名>\n```\n\n## 暂存区提交到版本库\n```\ngit commit -m \"更新内容描述\"\n```\n## 提交到版本库\n```\ngit push\n```\n## 查看文件所在区的提交状态\n```\ngit status\n```\n","slug":"git","published":1,"updated":"2017-06-02T02:14:47.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11l0006egcr7kgrut29","content":"<h2 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h2><p>  print working directory 打印当前工作目录</p>\n<h2 id=\"告诉git当前用户\"><a href=\"#告诉git当前用户\" class=\"headerlink\" title=\"告诉git当前用户\"></a>告诉git当前用户</h2><ul>\n<li>用git第一次需要配置 以后都不需要</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name &lt;your name&gt;</div><div class=\"line\">git config --global user.email &lt;your email&gt;</div><div class=\"line\">git config list 查看配置列表</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"初始化文件夹（告诉git那个文件夹归git所管理）\"><a href=\"#初始化文件夹（告诉git那个文件夹归git所管理）\" class=\"headerlink\" title=\"初始化文件夹（告诉git那个文件夹归git所管理）\"></a>初始化文件夹（告诉git那个文件夹归git所管理）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure>\n<h2 id=\"打开文件夹\"><a href=\"#打开文件夹\" class=\"headerlink\" title=\"打开文件夹\"></a>打开文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd</div></pre></td></tr></table></figure>\n<h2 id=\"删除文件夹-循环删除（递归删除）\"><a href=\"#删除文件夹-循环删除（递归删除）\" class=\"headerlink\" title=\"删除文件夹  循环删除（递归删除）\"></a>删除文件夹  循环删除（递归删除）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm -rf &lt;文件夹名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"macOS中查看隐藏文件夹\"><a href=\"#macOS中查看隐藏文件夹\" class=\"headerlink\" title=\"macOS中查看隐藏文件夹\"></a>macOS中查看隐藏文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls -a</div></pre></td></tr></table></figure>\n<h2 id=\"新建文件\"><a href=\"#新建文件\" class=\"headerlink\" title=\"新建文件\"></a>新建文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"查看文件名\"><a href=\"#查看文件名\" class=\"headerlink\" title=\"查看文件名\"></a>查看文件名</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"编辑文件-进入vi编辑模式\"><a href=\"#编辑文件-进入vi编辑模式\" class=\"headerlink\" title=\"编辑文件 进入vi编辑模式\"></a>编辑文件 进入vi编辑模式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"在vi模式下\"><a href=\"#在vi模式下\" class=\"headerlink\" title=\"在vi模式下\"></a>在vi模式下</h2><ul>\n<li>按 <code>i</code> 键 进入编辑模式</li>\n<li>编辑文件</li>\n<li>按  <code>esc</code> 键，退出编辑模式</li>\n<li><code>:wq</code> 保存并退出</li>\n<li><code>:q!</code> 强制退出，不保存</li>\n</ul>\n<h2 id=\"工作区进行提交到暂存区\"><a href=\"#工作区进行提交到暂存区\" class=\"headerlink\" title=\"工作区进行提交到暂存区\"></a>工作区进行提交到暂存区</h2><ul>\n<li><p>提交全部</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">或者</div><div class=\"line\">git add -A</div></pre></td></tr></table></figure>\n</li>\n<li><p>提交单个文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add &lt;文件名&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"暂存区提交到版本库\"><a href=\"#暂存区提交到版本库\" class=\"headerlink\" title=\"暂存区提交到版本库\"></a>暂存区提交到版本库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m &quot;更新内容描述&quot;</div></pre></td></tr></table></figure>\n<h2 id=\"提交到版本库\"><a href=\"#提交到版本库\" class=\"headerlink\" title=\"提交到版本库\"></a>提交到版本库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push</div></pre></td></tr></table></figure>\n<h2 id=\"查看文件所在区的提交状态\"><a href=\"#查看文件所在区的提交状态\" class=\"headerlink\" title=\"查看文件所在区的提交状态\"></a>查看文件所在区的提交状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h2><p>  print working directory 打印当前工作目录</p>\n<h2 id=\"告诉git当前用户\"><a href=\"#告诉git当前用户\" class=\"headerlink\" title=\"告诉git当前用户\"></a>告诉git当前用户</h2><ul>\n<li>用git第一次需要配置 以后都不需要</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name &lt;your name&gt;</div><div class=\"line\">git config --global user.email &lt;your email&gt;</div><div class=\"line\">git config list 查看配置列表</div></pre></td></tr></table></figure>","more":"<h2 id=\"初始化文件夹（告诉git那个文件夹归git所管理）\"><a href=\"#初始化文件夹（告诉git那个文件夹归git所管理）\" class=\"headerlink\" title=\"初始化文件夹（告诉git那个文件夹归git所管理）\"></a>初始化文件夹（告诉git那个文件夹归git所管理）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure>\n<h2 id=\"打开文件夹\"><a href=\"#打开文件夹\" class=\"headerlink\" title=\"打开文件夹\"></a>打开文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd</div></pre></td></tr></table></figure>\n<h2 id=\"删除文件夹-循环删除（递归删除）\"><a href=\"#删除文件夹-循环删除（递归删除）\" class=\"headerlink\" title=\"删除文件夹  循环删除（递归删除）\"></a>删除文件夹  循环删除（递归删除）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm -rf &lt;文件夹名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"macOS中查看隐藏文件夹\"><a href=\"#macOS中查看隐藏文件夹\" class=\"headerlink\" title=\"macOS中查看隐藏文件夹\"></a>macOS中查看隐藏文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls -a</div></pre></td></tr></table></figure>\n<h2 id=\"新建文件\"><a href=\"#新建文件\" class=\"headerlink\" title=\"新建文件\"></a>新建文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"查看文件名\"><a href=\"#查看文件名\" class=\"headerlink\" title=\"查看文件名\"></a>查看文件名</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"编辑文件-进入vi编辑模式\"><a href=\"#编辑文件-进入vi编辑模式\" class=\"headerlink\" title=\"编辑文件 进入vi编辑模式\"></a>编辑文件 进入vi编辑模式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi &lt;文件名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"在vi模式下\"><a href=\"#在vi模式下\" class=\"headerlink\" title=\"在vi模式下\"></a>在vi模式下</h2><ul>\n<li>按 <code>i</code> 键 进入编辑模式</li>\n<li>编辑文件</li>\n<li>按  <code>esc</code> 键，退出编辑模式</li>\n<li><code>:wq</code> 保存并退出</li>\n<li><code>:q!</code> 强制退出，不保存</li>\n</ul>\n<h2 id=\"工作区进行提交到暂存区\"><a href=\"#工作区进行提交到暂存区\" class=\"headerlink\" title=\"工作区进行提交到暂存区\"></a>工作区进行提交到暂存区</h2><ul>\n<li><p>提交全部</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">或者</div><div class=\"line\">git add -A</div></pre></td></tr></table></figure>\n</li>\n<li><p>提交单个文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add &lt;文件名&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"暂存区提交到版本库\"><a href=\"#暂存区提交到版本库\" class=\"headerlink\" title=\"暂存区提交到版本库\"></a>暂存区提交到版本库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m &quot;更新内容描述&quot;</div></pre></td></tr></table></figure>\n<h2 id=\"提交到版本库\"><a href=\"#提交到版本库\" class=\"headerlink\" title=\"提交到版本库\"></a>提交到版本库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push</div></pre></td></tr></table></figure>\n<h2 id=\"查看文件所在区的提交状态\"><a href=\"#查看文件所在区的提交状态\" class=\"headerlink\" title=\"查看文件所在区的提交状态\"></a>查看文件所在区的提交状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure>"},{"title":"git分支","date":"2017-04-29T04:14:41.000Z","_content":"## 查看当前git分支\n```\ngit branch\n```\n## 创建分支\n```\ngit branch <分支名>\n```\n<!--more-->\n## 切换分支\n```\ngit checkout <分支名>\n```\n## 删除分支\n注：删除分支之前一定确定要删除的分支，不是当前所在分支，切换其他分支之后即可删除\n```\ngit branch -D <分支名>\n```\n## 创建并切换指定分支\n```\ngit checkout -b <分支名>\n```\n## 分支合并 用主干分支合并分支\n注：默认master是主干\n```\ngit merge <分支名>\n```\n\n> 合并分支后 被合并的分支删除即可\n","source":"_posts/git分支.md","raw":"---\ntitle: git分支\ndate: 2017-04-29 12:14:41\ntags: [git,前端笔记]\ncategories: Git\n---\n## 查看当前git分支\n```\ngit branch\n```\n## 创建分支\n```\ngit branch <分支名>\n```\n<!--more-->\n## 切换分支\n```\ngit checkout <分支名>\n```\n## 删除分支\n注：删除分支之前一定确定要删除的分支，不是当前所在分支，切换其他分支之后即可删除\n```\ngit branch -D <分支名>\n```\n## 创建并切换指定分支\n```\ngit checkout -b <分支名>\n```\n## 分支合并 用主干分支合并分支\n注：默认master是主干\n```\ngit merge <分支名>\n```\n\n> 合并分支后 被合并的分支删除即可\n","slug":"git分支","published":1,"updated":"2017-06-02T02:14:47.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11o0008egcrid0oagjw","content":"<h2 id=\"查看当前git分支\"><a href=\"#查看当前git分支\" class=\"headerlink\" title=\"查看当前git分支\"></a>查看当前git分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch</div></pre></td></tr></table></figure>\n<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch &lt;分支名&gt;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout &lt;分支名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><p>注：删除分支之前一定确定要删除的分支，不是当前所在分支，切换其他分支之后即可删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch -D &lt;分支名&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"创建并切换指定分支\"><a href=\"#创建并切换指定分支\" class=\"headerlink\" title=\"创建并切换指定分支\"></a>创建并切换指定分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b &lt;分支名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"分支合并-用主干分支合并分支\"><a href=\"#分支合并-用主干分支合并分支\" class=\"headerlink\" title=\"分支合并 用主干分支合并分支\"></a>分支合并 用主干分支合并分支</h2><p>注：默认master是主干<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git merge &lt;分支名&gt;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>合并分支后 被合并的分支删除即可</p>\n</blockquote>\n","excerpt":"<h2 id=\"查看当前git分支\"><a href=\"#查看当前git分支\" class=\"headerlink\" title=\"查看当前git分支\"></a>查看当前git分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch</div></pre></td></tr></table></figure>\n<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch &lt;分支名&gt;</div></pre></td></tr></table></figure>","more":"<h2 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout &lt;分支名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><p>注：删除分支之前一定确定要删除的分支，不是当前所在分支，切换其他分支之后即可删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch -D &lt;分支名&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"创建并切换指定分支\"><a href=\"#创建并切换指定分支\" class=\"headerlink\" title=\"创建并切换指定分支\"></a>创建并切换指定分支</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b &lt;分支名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"分支合并-用主干分支合并分支\"><a href=\"#分支合并-用主干分支合并分支\" class=\"headerlink\" title=\"分支合并 用主干分支合并分支\"></a>分支合并 用主干分支合并分支</h2><p>注：默认master是主干<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git merge &lt;分支名&gt;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>合并分支后 被合并的分支删除即可</p>\n</blockquote>"},{"title":"express框架使用","date":"2017-05-13T01:47:23.000Z","_content":"## express 是后台框架\n帮我们解决手动搭建服务，处理逻辑的复杂\n```\nnpm init -y\nnpm install express --save\n```\n\n## 使用postman模拟数据发送\n<a href=\"https://www.getpostman.com/\">https://www.getpostman.com/</a>\n> 测试接口是否可用\n\n## 路由\n根据请求的方法和请求的路径返回不同的内容\n```\napp.方法('路径',callback)\napp.all('*',callback)\n```\n> 匹配路由从上到下匹配，匹配成功后不继续向下执行\n\n## express提供的属性\n```\nreq.path\nreq.query\nreq.method\nreq.headers\n```\n\n## 路径参数params\n- :id表示站位必须要有\n```\napp.get('/user/:id',callback)\n```\n<!--more-->\n\n## 中间件\n中间件一般在路由上面写，错误中间件一般写在底部\n- 扩展属性和方法，请求时中间件的res和req与路由中的是同一个\n- 做权限处理，next可以决定是否向下执行\n- 中间件可以写多个，和路由在同一个数组中\n```\napp.use('/',function(req,res,next){})\nnext();//表示是否向下执行\n```\n> 默认不写路径任何请求都能执行\n\n##　send方法\n- 不用设置类型\n- 可以传递对象，数字会转化成状态文本\n\n> 用send取代end\n\n## sendFile\n- 向客户端返回但以页面\n```\nres.sendFile(path.resolve('./index.html'))\nres.sendFile('./index.html',{root:__dirname});\n```\n\n## 静态服务中间件\n```\napp.use(express.static(路径));\n```\n## 常见的前台模板\n- ejs\n- jade\n- underscore\n- handlebar\n- smarty\n\n## 动态渲染js\n- ejs(基于HTML，可以渲染动态数据)\n- 如果安装了ejs，如果使用render，express会自动调用ejs\n```\napp.set('views','新的路径文件夹)\napp.set('view engine','html');// render 时不需要提供html后缀\napp.engine('html',require('ejs').__express);\nres.render('文件名'，渲染的对象 = 自定义对象 + res.locals);\n```\n##　ejs渲染数据\n\n```\n<%=%> 输出结果\n<%for(var i = 0;i<arr.length;i++){%>\n  <li><%=i%></li>\n<%}%>\n<%-%> 输出HTML\n<%include ejs文件%> 插入ejs文件\n```\n","source":"_posts/express框架使用.md","raw":"---\ntitle: express框架使用\ndate: 2017-05-13 09:47:23\ntags: [node,node基础]\ncategories: node\n---\n## express 是后台框架\n帮我们解决手动搭建服务，处理逻辑的复杂\n```\nnpm init -y\nnpm install express --save\n```\n\n## 使用postman模拟数据发送\n<a href=\"https://www.getpostman.com/\">https://www.getpostman.com/</a>\n> 测试接口是否可用\n\n## 路由\n根据请求的方法和请求的路径返回不同的内容\n```\napp.方法('路径',callback)\napp.all('*',callback)\n```\n> 匹配路由从上到下匹配，匹配成功后不继续向下执行\n\n## express提供的属性\n```\nreq.path\nreq.query\nreq.method\nreq.headers\n```\n\n## 路径参数params\n- :id表示站位必须要有\n```\napp.get('/user/:id',callback)\n```\n<!--more-->\n\n## 中间件\n中间件一般在路由上面写，错误中间件一般写在底部\n- 扩展属性和方法，请求时中间件的res和req与路由中的是同一个\n- 做权限处理，next可以决定是否向下执行\n- 中间件可以写多个，和路由在同一个数组中\n```\napp.use('/',function(req,res,next){})\nnext();//表示是否向下执行\n```\n> 默认不写路径任何请求都能执行\n\n##　send方法\n- 不用设置类型\n- 可以传递对象，数字会转化成状态文本\n\n> 用send取代end\n\n## sendFile\n- 向客户端返回但以页面\n```\nres.sendFile(path.resolve('./index.html'))\nres.sendFile('./index.html',{root:__dirname});\n```\n\n## 静态服务中间件\n```\napp.use(express.static(路径));\n```\n## 常见的前台模板\n- ejs\n- jade\n- underscore\n- handlebar\n- smarty\n\n## 动态渲染js\n- ejs(基于HTML，可以渲染动态数据)\n- 如果安装了ejs，如果使用render，express会自动调用ejs\n```\napp.set('views','新的路径文件夹)\napp.set('view engine','html');// render 时不需要提供html后缀\napp.engine('html',require('ejs').__express);\nres.render('文件名'，渲染的对象 = 自定义对象 + res.locals);\n```\n##　ejs渲染数据\n\n```\n<%=%> 输出结果\n<%for(var i = 0;i<arr.length;i++){%>\n  <li><%=i%></li>\n<%}%>\n<%-%> 输出HTML\n<%include ejs文件%> 插入ejs文件\n```\n","slug":"express框架使用","published":1,"updated":"2018-03-05T02:30:56.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11t0009egcrhrcdzfyv","content":"<h2 id=\"express-是后台框架\"><a href=\"#express-是后台框架\" class=\"headerlink\" title=\"express 是后台框架\"></a>express 是后台框架</h2><p>帮我们解决手动搭建服务，处理逻辑的复杂<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init -y</div><div class=\"line\">npm install express --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用postman模拟数据发送\"><a href=\"#使用postman模拟数据发送\" class=\"headerlink\" title=\"使用postman模拟数据发送\"></a>使用postman模拟数据发送</h2><p><a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"external\">https://www.getpostman.com/</a></p>\n<blockquote>\n<p>测试接口是否可用</p>\n</blockquote>\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><p>根据请求的方法和请求的路径返回不同的内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.方法(&apos;路径&apos;,callback)</div><div class=\"line\">app.all(&apos;*&apos;,callback)</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>匹配路由从上到下匹配，匹配成功后不继续向下执行</p>\n</blockquote>\n<h2 id=\"express提供的属性\"><a href=\"#express提供的属性\" class=\"headerlink\" title=\"express提供的属性\"></a>express提供的属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">req.path</div><div class=\"line\">req.query</div><div class=\"line\">req.method</div><div class=\"line\">req.headers</div></pre></td></tr></table></figure>\n<h2 id=\"路径参数params\"><a href=\"#路径参数params\" class=\"headerlink\" title=\"路径参数params\"></a>路径参数params</h2><ul>\n<li>:id表示站位必须要有<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(&apos;/user/:id&apos;,callback)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"中间件\"><a href=\"#中间件\" class=\"headerlink\" title=\"中间件\"></a>中间件</h2><p>中间件一般在路由上面写，错误中间件一般写在底部</p>\n<ul>\n<li>扩展属性和方法，请求时中间件的res和req与路由中的是同一个</li>\n<li>做权限处理，next可以决定是否向下执行</li>\n<li>中间件可以写多个，和路由在同一个数组中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(&apos;/&apos;,function(req,res,next)&#123;&#125;)</div><div class=\"line\">next();//表示是否向下执行</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>默认不写路径任何请求都能执行</p>\n</blockquote>\n<p>##　send方法</p>\n<ul>\n<li>不用设置类型</li>\n<li>可以传递对象，数字会转化成状态文本</li>\n</ul>\n<blockquote>\n<p>用send取代end</p>\n</blockquote>\n<h2 id=\"sendFile\"><a href=\"#sendFile\" class=\"headerlink\" title=\"sendFile\"></a>sendFile</h2><ul>\n<li>向客户端返回但以页面<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">res.sendFile(path.resolve(&apos;./index.html&apos;))</div><div class=\"line\">res.sendFile(&apos;./index.html&apos;,&#123;root:__dirname&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"静态服务中间件\"><a href=\"#静态服务中间件\" class=\"headerlink\" title=\"静态服务中间件\"></a>静态服务中间件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(express.static(路径));</div></pre></td></tr></table></figure>\n<h2 id=\"常见的前台模板\"><a href=\"#常见的前台模板\" class=\"headerlink\" title=\"常见的前台模板\"></a>常见的前台模板</h2><ul>\n<li>ejs</li>\n<li>jade</li>\n<li>underscore</li>\n<li>handlebar</li>\n<li>smarty</li>\n</ul>\n<h2 id=\"动态渲染js\"><a href=\"#动态渲染js\" class=\"headerlink\" title=\"动态渲染js\"></a>动态渲染js</h2><ul>\n<li>ejs(基于HTML，可以渲染动态数据)</li>\n<li>如果安装了ejs，如果使用render，express会自动调用ejs<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.set(&apos;views&apos;,&apos;新的路径文件夹)</div><div class=\"line\">app.set(&apos;view engine&apos;,&apos;html&apos;);// render 时不需要提供html后缀</div><div class=\"line\">app.engine(&apos;html&apos;,require(&apos;ejs&apos;).__express);</div><div class=\"line\">res.render(&apos;文件名&apos;，渲染的对象 = 自定义对象 + res.locals);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>##　ejs渲染数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%=%&gt; 输出结果</div><div class=\"line\">&lt;%for(var i = 0;i&lt;arr.length;i++)&#123;%&gt;</div><div class=\"line\">  &lt;li&gt;&lt;%=i%&gt;&lt;/li&gt;</div><div class=\"line\">&lt;%&#125;%&gt;</div><div class=\"line\">&lt;%-%&gt; 输出HTML</div><div class=\"line\">&lt;%include ejs文件%&gt; 插入ejs文件</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"express-是后台框架\"><a href=\"#express-是后台框架\" class=\"headerlink\" title=\"express 是后台框架\"></a>express 是后台框架</h2><p>帮我们解决手动搭建服务，处理逻辑的复杂<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init -y</div><div class=\"line\">npm install express --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用postman模拟数据发送\"><a href=\"#使用postman模拟数据发送\" class=\"headerlink\" title=\"使用postman模拟数据发送\"></a>使用postman模拟数据发送</h2><p><a href=\"https://www.getpostman.com/\">https://www.getpostman.com/</a></p>\n<blockquote>\n<p>测试接口是否可用</p>\n</blockquote>\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><p>根据请求的方法和请求的路径返回不同的内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.方法(&apos;路径&apos;,callback)</div><div class=\"line\">app.all(&apos;*&apos;,callback)</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>匹配路由从上到下匹配，匹配成功后不继续向下执行</p>\n</blockquote>\n<h2 id=\"express提供的属性\"><a href=\"#express提供的属性\" class=\"headerlink\" title=\"express提供的属性\"></a>express提供的属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">req.path</div><div class=\"line\">req.query</div><div class=\"line\">req.method</div><div class=\"line\">req.headers</div></pre></td></tr></table></figure>\n<h2 id=\"路径参数params\"><a href=\"#路径参数params\" class=\"headerlink\" title=\"路径参数params\"></a>路径参数params</h2><ul>\n<li>:id表示站位必须要有<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(&apos;/user/:id&apos;,callback)</div></pre></td></tr></table></figure>\n</li>\n</ul>","more":"<h2 id=\"中间件\"><a href=\"#中间件\" class=\"headerlink\" title=\"中间件\"></a>中间件</h2><p>中间件一般在路由上面写，错误中间件一般写在底部</p>\n<ul>\n<li>扩展属性和方法，请求时中间件的res和req与路由中的是同一个</li>\n<li>做权限处理，next可以决定是否向下执行</li>\n<li>中间件可以写多个，和路由在同一个数组中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(&apos;/&apos;,function(req,res,next)&#123;&#125;)</div><div class=\"line\">next();//表示是否向下执行</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>默认不写路径任何请求都能执行</p>\n</blockquote>\n<p>##　send方法</p>\n<ul>\n<li>不用设置类型</li>\n<li>可以传递对象，数字会转化成状态文本</li>\n</ul>\n<blockquote>\n<p>用send取代end</p>\n</blockquote>\n<h2 id=\"sendFile\"><a href=\"#sendFile\" class=\"headerlink\" title=\"sendFile\"></a>sendFile</h2><ul>\n<li>向客户端返回但以页面<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">res.sendFile(path.resolve(&apos;./index.html&apos;))</div><div class=\"line\">res.sendFile(&apos;./index.html&apos;,&#123;root:__dirname&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"静态服务中间件\"><a href=\"#静态服务中间件\" class=\"headerlink\" title=\"静态服务中间件\"></a>静态服务中间件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(express.static(路径));</div></pre></td></tr></table></figure>\n<h2 id=\"常见的前台模板\"><a href=\"#常见的前台模板\" class=\"headerlink\" title=\"常见的前台模板\"></a>常见的前台模板</h2><ul>\n<li>ejs</li>\n<li>jade</li>\n<li>underscore</li>\n<li>handlebar</li>\n<li>smarty</li>\n</ul>\n<h2 id=\"动态渲染js\"><a href=\"#动态渲染js\" class=\"headerlink\" title=\"动态渲染js\"></a>动态渲染js</h2><ul>\n<li>ejs(基于HTML，可以渲染动态数据)</li>\n<li>如果安装了ejs，如果使用render，express会自动调用ejs<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.set(&apos;views&apos;,&apos;新的路径文件夹)</div><div class=\"line\">app.set(&apos;view engine&apos;,&apos;html&apos;);// render 时不需要提供html后缀</div><div class=\"line\">app.engine(&apos;html&apos;,require(&apos;ejs&apos;).__express);</div><div class=\"line\">res.render(&apos;文件名&apos;，渲染的对象 = 自定义对象 + res.locals);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>##　ejs渲染数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%=%&gt; 输出结果</div><div class=\"line\">&lt;%for(var i = 0;i&lt;arr.length;i++)&#123;%&gt;</div><div class=\"line\">  &lt;li&gt;&lt;%=i%&gt;&lt;/li&gt;</div><div class=\"line\">&lt;%&#125;%&gt;</div><div class=\"line\">&lt;%-%&gt; 输出HTML</div><div class=\"line\">&lt;%include ejs文件%&gt; 插入ejs文件</div></pre></td></tr></table></figure>"},{"title":"express中cookie/session","date":"2017-05-14T09:43:09.000Z","_content":"## body-parser\n解析请求体的会将请求的数据挂载在req.body上\n```\nnpm install body-parser --save\nlet bodyParser = require('body-parser');\napp.use(bodyParser.json());//解析json\napp.use(bodyParser.urlencoded({extended:false}));//解析formData的格式\n```\n\n## querystring的核心模块\n```\nlet querystring = require('querystring');\nquerystring.parse('name=1&age=2','&','=');\nquerystring.stringify({name:1,age:2},'&&','=');\n```\n\n## cookie\n```\nnpm install cookie-parser --save\nlet cookieParser = require('cookie-parser');\napp.use(cookieParser());\nreq.cookies //可以直接获取cookie转换后的对象\nreq.cookie(key,value,{domain,path,expires,maxAge,httpOnly});\n```\n<!--more-->\n## session\n```\nnpm install express-session --save\nlet session = require('express-session');\n\n```\n","source":"_posts/express中cookie-session.md","raw":"---\ntitle: express中cookie/session\ndate: 2017-05-14 17:43:09\ntags: [node,node基础]\ncategories: node\n---\n## body-parser\n解析请求体的会将请求的数据挂载在req.body上\n```\nnpm install body-parser --save\nlet bodyParser = require('body-parser');\napp.use(bodyParser.json());//解析json\napp.use(bodyParser.urlencoded({extended:false}));//解析formData的格式\n```\n\n## querystring的核心模块\n```\nlet querystring = require('querystring');\nquerystring.parse('name=1&age=2','&','=');\nquerystring.stringify({name:1,age:2},'&&','=');\n```\n\n## cookie\n```\nnpm install cookie-parser --save\nlet cookieParser = require('cookie-parser');\napp.use(cookieParser());\nreq.cookies //可以直接获取cookie转换后的对象\nreq.cookie(key,value,{domain,path,expires,maxAge,httpOnly});\n```\n<!--more-->\n## session\n```\nnpm install express-session --save\nlet session = require('express-session');\n\n```\n","slug":"express中cookie-session","published":1,"updated":"2018-03-05T02:30:56.058Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11v000cegcrhiydvz20","content":"<h2 id=\"body-parser\"><a href=\"#body-parser\" class=\"headerlink\" title=\"body-parser\"></a>body-parser</h2><p>解析请求体的会将请求的数据挂载在req.body上<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install body-parser --save</div><div class=\"line\">let bodyParser = require(&apos;body-parser&apos;);</div><div class=\"line\">app.use(bodyParser.json());//解析json</div><div class=\"line\">app.use(bodyParser.urlencoded(&#123;extended:false&#125;));//解析formData的格式</div></pre></td></tr></table></figure></p>\n<h2 id=\"querystring的核心模块\"><a href=\"#querystring的核心模块\" class=\"headerlink\" title=\"querystring的核心模块\"></a>querystring的核心模块</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">let querystring = require(&apos;querystring&apos;);</div><div class=\"line\">querystring.parse(&apos;name=1&amp;age=2&apos;,&apos;&amp;&apos;,&apos;=&apos;);</div><div class=\"line\">querystring.stringify(&#123;name:1,age:2&#125;,&apos;&amp;&amp;&apos;,&apos;=&apos;);</div></pre></td></tr></table></figure>\n<h2 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install cookie-parser --save</div><div class=\"line\">let cookieParser = require(&apos;cookie-parser&apos;);</div><div class=\"line\">app.use(cookieParser());</div><div class=\"line\">req.cookies //可以直接获取cookie转换后的对象</div><div class=\"line\">req.cookie(key,value,&#123;domain,path,expires,maxAge,httpOnly&#125;);</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install express-session --save</div><div class=\"line\">let session = require(&apos;express-session&apos;);</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"body-parser\"><a href=\"#body-parser\" class=\"headerlink\" title=\"body-parser\"></a>body-parser</h2><p>解析请求体的会将请求的数据挂载在req.body上<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install body-parser --save</div><div class=\"line\">let bodyParser = require(&apos;body-parser&apos;);</div><div class=\"line\">app.use(bodyParser.json());//解析json</div><div class=\"line\">app.use(bodyParser.urlencoded(&#123;extended:false&#125;));//解析formData的格式</div></pre></td></tr></table></figure></p>\n<h2 id=\"querystring的核心模块\"><a href=\"#querystring的核心模块\" class=\"headerlink\" title=\"querystring的核心模块\"></a>querystring的核心模块</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">let querystring = require(&apos;querystring&apos;);</div><div class=\"line\">querystring.parse(&apos;name=1&amp;age=2&apos;,&apos;&amp;&apos;,&apos;=&apos;);</div><div class=\"line\">querystring.stringify(&#123;name:1,age:2&#125;,&apos;&amp;&amp;&apos;,&apos;=&apos;);</div></pre></td></tr></table></figure>\n<h2 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install cookie-parser --save</div><div class=\"line\">let cookieParser = require(&apos;cookie-parser&apos;);</div><div class=\"line\">app.use(cookieParser());</div><div class=\"line\">req.cookies //可以直接获取cookie转换后的对象</div><div class=\"line\">req.cookie(key,value,&#123;domain,path,expires,maxAge,httpOnly&#125;);</div></pre></td></tr></table></figure>","more":"<h2 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install express-session --save</div><div class=\"line\">let session = require(&apos;express-session&apos;);</div></pre></td></tr></table></figure>"},{"title":"git文件对比","date":"2017-04-29T03:00:26.000Z","_content":"## 查看版本信息\n```\ngit log\n```\n或者\n```\ngit log --oneline\n```\n<!--more-->\n## 文件内容比对\n- 工作区和暂存区文件比较\n```\ngit diff\n```\n- 暂存区和版本文件比较\n```\ngit diff --cached\n```\n- 工作区和版本库比较\n```\ngit diff master\n```\n","source":"_posts/git文件内容对比.md","raw":"---\ntitle: git文件对比\ndate: 2017-04-29 11:00:26\ntags: [git,前端笔记]\ncategories: Git\n---\n## 查看版本信息\n```\ngit log\n```\n或者\n```\ngit log --oneline\n```\n<!--more-->\n## 文件内容比对\n- 工作区和暂存区文件比较\n```\ngit diff\n```\n- 暂存区和版本文件比较\n```\ngit diff --cached\n```\n- 工作区和版本库比较\n```\ngit diff master\n```\n","slug":"git文件内容对比","published":1,"updated":"2017-06-02T02:14:47.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11w000eegcr3cnxjmiv","content":"<h2 id=\"查看版本信息\"><a href=\"#查看版本信息\" class=\"headerlink\" title=\"查看版本信息\"></a>查看版本信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log</div></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --oneline</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"文件内容比对\"><a href=\"#文件内容比对\" class=\"headerlink\" title=\"文件内容比对\"></a>文件内容比对</h2><ul>\n<li><p>工作区和暂存区文件比较</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git diff</div></pre></td></tr></table></figure>\n</li>\n<li><p>暂存区和版本文件比较</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git diff --cached</div></pre></td></tr></table></figure>\n</li>\n<li><p>工作区和版本库比较</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git diff master</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"<h2 id=\"查看版本信息\"><a href=\"#查看版本信息\" class=\"headerlink\" title=\"查看版本信息\"></a>查看版本信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log</div></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --oneline</div></pre></td></tr></table></figure></p>","more":"<h2 id=\"文件内容比对\"><a href=\"#文件内容比对\" class=\"headerlink\" title=\"文件内容比对\"></a>文件内容比对</h2><ul>\n<li><p>工作区和暂存区文件比较</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git diff</div></pre></td></tr></table></figure>\n</li>\n<li><p>暂存区和版本文件比较</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git diff --cached</div></pre></td></tr></table></figure>\n</li>\n<li><p>工作区和版本库比较</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git diff master</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"git发布静态网站","date":"2017-04-29T07:59:01.000Z","_content":"## 在github上发布静态网站\n- 必须在当前项目下建立一个`gh-pages`的分支\n- 将我们需要发布的内容推送到`gh-pages`这个分支上\n- 推送到远程仓库上即可\n- github会给你一个在线地址\n<!--more-->\n## 执行步骤\n- git checkout -b gh-pages\n- touch index.html\n- git add .\n- git commit -m \"add index.html\"\n- git push origin gh-pages\n-在github中的setting页可以查找到网址+文件名即可（默认会展示index.html）\n\n## 获取自己仓库的代码\n```\ngit clone <地址>\n```\n","source":"_posts/git发布静态网站.md","raw":"---\ntitle: git发布静态网站\ndate: 2017-04-29 15:59:01\ntags: [git,前端笔记]\ncategories: Git\n---\n## 在github上发布静态网站\n- 必须在当前项目下建立一个`gh-pages`的分支\n- 将我们需要发布的内容推送到`gh-pages`这个分支上\n- 推送到远程仓库上即可\n- github会给你一个在线地址\n<!--more-->\n## 执行步骤\n- git checkout -b gh-pages\n- touch index.html\n- git add .\n- git commit -m \"add index.html\"\n- git push origin gh-pages\n-在github中的setting页可以查找到网址+文件名即可（默认会展示index.html）\n\n## 获取自己仓库的代码\n```\ngit clone <地址>\n```\n","slug":"git发布静态网站","published":1,"updated":"2017-06-02T02:14:47.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne11z000hegcrx45d6ovy","content":"<h2 id=\"在github上发布静态网站\"><a href=\"#在github上发布静态网站\" class=\"headerlink\" title=\"在github上发布静态网站\"></a>在github上发布静态网站</h2><ul>\n<li>必须在当前项目下建立一个<code>gh-pages</code>的分支</li>\n<li>将我们需要发布的内容推送到<code>gh-pages</code>这个分支上</li>\n<li>推送到远程仓库上即可</li>\n<li>github会给你一个在线地址<a id=\"more\"></a>\n<h2 id=\"执行步骤\"><a href=\"#执行步骤\" class=\"headerlink\" title=\"执行步骤\"></a>执行步骤</h2></li>\n<li>git checkout -b gh-pages</li>\n<li>touch index.html</li>\n<li>git add .</li>\n<li>git commit -m “add index.html”</li>\n<li>git push origin gh-pages<br>-在github中的setting页可以查找到网址+文件名即可（默认会展示index.html）</li>\n</ul>\n<h2 id=\"获取自己仓库的代码\"><a href=\"#获取自己仓库的代码\" class=\"headerlink\" title=\"获取自己仓库的代码\"></a>获取自己仓库的代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone &lt;地址&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"在github上发布静态网站\"><a href=\"#在github上发布静态网站\" class=\"headerlink\" title=\"在github上发布静态网站\"></a>在github上发布静态网站</h2><ul>\n<li>必须在当前项目下建立一个<code>gh-pages</code>的分支</li>\n<li>将我们需要发布的内容推送到<code>gh-pages</code>这个分支上</li>\n<li>推送到远程仓库上即可</li>\n<li>github会给你一个在线地址","more":"<h2 id=\"执行步骤\"><a href=\"#执行步骤\" class=\"headerlink\" title=\"执行步骤\"></a>执行步骤</h2></li>\n<li>git checkout -b gh-pages</li>\n<li>touch index.html</li>\n<li>git add .</li>\n<li>git commit -m “add index.html”</li>\n<li>git push origin gh-pages<br>-在github中的setting页可以查找到网址+文件名即可（默认会展示index.html）</li>\n</ul>\n<h2 id=\"获取自己仓库的代码\"><a href=\"#获取自己仓库的代码\" class=\"headerlink\" title=\"获取自己仓库的代码\"></a>获取自己仓库的代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone &lt;地址&gt;</div></pre></td></tr></table></figure>"},{"title":"git在mac中自动补全功能配置","date":"2017-01-25T02:47:34.000Z","_content":"## ps:\n在 __MAC__ 中使用自带的命令行工具来操作git很不方便，没有提示对于我这种英语渣渣的人来说简直是不能接受。\n***\n## 话不多说直接走起\n<!--more-->\n- 首先使用 `$ brew list` 命令来查看你是否已经安装了\n***bash-completion*** ，如果没有继续向下进行，有的跳过下一步。\n- 接下来安装 ***bash-completion*** ，执行以下命令：\n\n  `$ brew install bash-completion`\n\n  安装完成之后运行 `$ brew info bash-completion`\n\n  在最下方会出现\n      ==> Caveats\n      Add the following lines to your ~/.bash_profile:\n      if [ -f $(brew --prefix)/etc/bash_completion ]; then\n      . $(brew --prefix)/etc/bash_completion\n      fi\n  这个是已经配置好的，正常的是没有if...then...这段的。\n\n  这时候我们需要在当前用户根目录（即 __~/__ 目录）下创建一个 .bash_profile 文件（即创建路径为 `~/.bash_profile` ），\n  接下来将\n\n      if [ -f $(brew --prefix)/etc/bash_completion ]; then\n      . $(brew --prefix)/etc/bash_completion\n      fi\n\n  添加到 .bash_profile 文件内。\n\n  ### 注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\n\n  安装完 ***bash-completion*** 重启终端命令行工具，继续一下步骤。\n\n- 然后将  __Git__ 源码中的 __completion.bash__ 源码clone到本地\n\n  `$ git clone  https://github.com/markgandolfo/git-bash-completion`\n\n- 在下载的git-bash-completion文件夹中，找到git-bash-completion文件夹中的git-bash-completion文件。将此文件重名为.git-bash-completion（目的是将此文件隐藏在用户跟目录中，防止意外将其删除）。如果重命名不成功，可以通过 `$ vi .git-bash-completion`\n   命令在用户跟目录下进行创建，然后通过编辑器将git-bash-completion文件中的内容复制到.git-bash-completion文件中。\n- 之后，在用户跟目录下创建.bashrc文件，此文件也可以通过 `$ vi .bashrc` 命令进行创建，其内容如下：\n\n        source ~/.git-completion.bashrc\n\n 然后保存。\n## 配置都已完成，重启终端命令行工具即可。\n","source":"_posts/git在mac中自动补全功能配置.md","raw":"---\ntitle: git在mac中自动补全功能配置\ndate: 2017-01-25 10:47:34\ntags: [git配置,前端笔记]\ncategories: [Git]\n---\n## ps:\n在 __MAC__ 中使用自带的命令行工具来操作git很不方便，没有提示对于我这种英语渣渣的人来说简直是不能接受。\n***\n## 话不多说直接走起\n<!--more-->\n- 首先使用 `$ brew list` 命令来查看你是否已经安装了\n***bash-completion*** ，如果没有继续向下进行，有的跳过下一步。\n- 接下来安装 ***bash-completion*** ，执行以下命令：\n\n  `$ brew install bash-completion`\n\n  安装完成之后运行 `$ brew info bash-completion`\n\n  在最下方会出现\n      ==> Caveats\n      Add the following lines to your ~/.bash_profile:\n      if [ -f $(brew --prefix)/etc/bash_completion ]; then\n      . $(brew --prefix)/etc/bash_completion\n      fi\n  这个是已经配置好的，正常的是没有if...then...这段的。\n\n  这时候我们需要在当前用户根目录（即 __~/__ 目录）下创建一个 .bash_profile 文件（即创建路径为 `~/.bash_profile` ），\n  接下来将\n\n      if [ -f $(brew --prefix)/etc/bash_completion ]; then\n      . $(brew --prefix)/etc/bash_completion\n      fi\n\n  添加到 .bash_profile 文件内。\n\n  ### 注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\n\n  安装完 ***bash-completion*** 重启终端命令行工具，继续一下步骤。\n\n- 然后将  __Git__ 源码中的 __completion.bash__ 源码clone到本地\n\n  `$ git clone  https://github.com/markgandolfo/git-bash-completion`\n\n- 在下载的git-bash-completion文件夹中，找到git-bash-completion文件夹中的git-bash-completion文件。将此文件重名为.git-bash-completion（目的是将此文件隐藏在用户跟目录中，防止意外将其删除）。如果重命名不成功，可以通过 `$ vi .git-bash-completion`\n   命令在用户跟目录下进行创建，然后通过编辑器将git-bash-completion文件中的内容复制到.git-bash-completion文件中。\n- 之后，在用户跟目录下创建.bashrc文件，此文件也可以通过 `$ vi .bashrc` 命令进行创建，其内容如下：\n\n        source ~/.git-completion.bashrc\n\n 然后保存。\n## 配置都已完成，重启终端命令行工具即可。\n","slug":"git在mac中自动补全功能配置","published":1,"updated":"2017-06-02T02:14:47.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne120000iegcrbnceka2k","content":"<h2 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps:\"></a>ps:</h2><p>在 <strong>MAC</strong> 中使用自带的命令行工具来操作git很不方便，没有提示对于我这种英语渣渣的人来说简直是不能接受。</p>\n<hr>\n<h2 id=\"话不多说直接走起\"><a href=\"#话不多说直接走起\" class=\"headerlink\" title=\"话不多说直接走起\"></a>话不多说直接走起</h2><a id=\"more\"></a>\n<ul>\n<li>首先使用 <code>$ brew list</code> 命令来查看你是否已经安装了<br><strong><em>bash-completion</em></strong> ，如果没有继续向下进行，有的跳过下一步。</li>\n<li><p>接下来安装 <strong><em>bash-completion</em></strong> ，执行以下命令：</p>\n<p><code>$ brew install bash-completion</code></p>\n<p>安装完成之后运行 <code>$ brew info bash-completion</code></p>\n<p>在最下方会出现</p>\n<pre><code>==&gt; Caveats\nAdd the following lines to your ~/.bash_profile:\nif [ -f $(brew --prefix)/etc/bash_completion ]; then\n. $(brew --prefix)/etc/bash_completion\nfi\n</code></pre><p>这个是已经配置好的，正常的是没有if…then…这段的。</p>\n<p>这时候我们需要在当前用户根目录（即 <strong>~/</strong> 目录）下创建一个 .bash_profile 文件（即创建路径为 <code>~/.bash_profile</code> ），<br>接下来将</p>\n<pre><code>if [ -f $(brew --prefix)/etc/bash_completion ]; then\n. $(brew --prefix)/etc/bash_completion\nfi\n</code></pre><p>添加到 .bash_profile 文件内。</p>\n<h3 id=\"注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\"><a href=\"#注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\" class=\"headerlink\" title=\"注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\"></a>注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！</h3><p>安装完 <strong><em>bash-completion</em></strong> 重启终端命令行工具，继续一下步骤。</p>\n</li>\n<li><p>然后将  <strong>Git</strong> 源码中的 <strong>completion.bash</strong> 源码clone到本地</p>\n<p><code>$ git clone  https://github.com/markgandolfo/git-bash-completion</code></p>\n</li>\n<li><p>在下载的git-bash-completion文件夹中，找到git-bash-completion文件夹中的git-bash-completion文件。将此文件重名为.git-bash-completion（目的是将此文件隐藏在用户跟目录中，防止意外将其删除）。如果重命名不成功，可以通过 <code>$ vi .git-bash-completion</code><br> 命令在用户跟目录下进行创建，然后通过编辑器将git-bash-completion文件中的内容复制到.git-bash-completion文件中。</p>\n</li>\n<li><p>之后，在用户跟目录下创建.bashrc文件，此文件也可以通过 <code>$ vi .bashrc</code> 命令进行创建，其内容如下：</p>\n<pre><code>source ~/.git-completion.bashrc\n</code></pre><p>然后保存。</p>\n<h2 id=\"配置都已完成，重启终端命令行工具即可。\"><a href=\"#配置都已完成，重启终端命令行工具即可。\" class=\"headerlink\" title=\"配置都已完成，重启终端命令行工具即可。\"></a>配置都已完成，重启终端命令行工具即可。</h2></li>\n</ul>\n","excerpt":"<h2 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps:\"></a>ps:</h2><p>在 <strong>MAC</strong> 中使用自带的命令行工具来操作git很不方便，没有提示对于我这种英语渣渣的人来说简直是不能接受。</p>\n<hr>\n<h2 id=\"话不多说直接走起\"><a href=\"#话不多说直接走起\" class=\"headerlink\" title=\"话不多说直接走起\"></a>话不多说直接走起</h2>","more":"<ul>\n<li>首先使用 <code>$ brew list</code> 命令来查看你是否已经安装了<br><strong><em>bash-completion</em></strong> ，如果没有继续向下进行，有的跳过下一步。</li>\n<li><p>接下来安装 <strong><em>bash-completion</em></strong> ，执行以下命令：</p>\n<p><code>$ brew install bash-completion</code></p>\n<p>安装完成之后运行 <code>$ brew info bash-completion</code></p>\n<p>在最下方会出现</p>\n<pre><code>==&gt; Caveats\nAdd the following lines to your ~/.bash_profile:\nif [ -f $(brew --prefix)/etc/bash_completion ]; then\n. $(brew --prefix)/etc/bash_completion\nfi\n</code></pre><p>这个是已经配置好的，正常的是没有if…then…这段的。</p>\n<p>这时候我们需要在当前用户根目录（即 <strong>~/</strong> 目录）下创建一个 .bash_profile 文件（即创建路径为 <code>~/.bash_profile</code> ），<br>接下来将</p>\n<pre><code>if [ -f $(brew --prefix)/etc/bash_completion ]; then\n. $(brew --prefix)/etc/bash_completion\nfi\n</code></pre><p>添加到 .bash_profile 文件内。</p>\n<h3 id=\"注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\"><a href=\"#注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\" class=\"headerlink\" title=\"注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！\"></a>注意：最好不要直接复制。如果复制的话，代码中的换行位置需要重新输入。否则最后会报错！</h3><p>安装完 <strong><em>bash-completion</em></strong> 重启终端命令行工具，继续一下步骤。</p>\n</li>\n<li><p>然后将  <strong>Git</strong> 源码中的 <strong>completion.bash</strong> 源码clone到本地</p>\n<p><code>$ git clone  https://github.com/markgandolfo/git-bash-completion</code></p>\n</li>\n<li><p>在下载的git-bash-completion文件夹中，找到git-bash-completion文件夹中的git-bash-completion文件。将此文件重名为.git-bash-completion（目的是将此文件隐藏在用户跟目录中，防止意外将其删除）。如果重命名不成功，可以通过 <code>$ vi .git-bash-completion</code><br> 命令在用户跟目录下进行创建，然后通过编辑器将git-bash-completion文件中的内容复制到.git-bash-completion文件中。</p>\n</li>\n<li><p>之后，在用户跟目录下创建.bashrc文件，此文件也可以通过 <code>$ vi .bashrc</code> 命令进行创建，其内容如下：</p>\n<pre><code>source ~/.git-completion.bashrc\n</code></pre><p>然后保存。</p>\n<h2 id=\"配置都已完成，重启终端命令行工具即可。\"><a href=\"#配置都已完成，重启终端命令行工具即可。\" class=\"headerlink\" title=\"配置都已完成，重启终端命令行工具即可。\"></a>配置都已完成，重启终端命令行工具即可。</h2></li>\n</ul>"},{"title":"git文件回滚","date":"2017-04-29T03:18:08.000Z","_content":"## 跨过暂存区直接将本地文件提交到版本库\n\n如果执行过一次增加到版本库 `git commit -a -m \"更新内容描述\"`\n\n## 从暂存区拉取历史文件\n- 全部拉取回来\n```\ngit checkout .\n```\n<!--more-->\n- 拉取某一个文件\n```\ngit checkout <文件名>\n```\n\n## 从版本库将文件某一版本回滚到暂存区和工作区\n```\ngit reset --hard <版本号>\n```\n\n## 查看所有操作的版本号\n```\ngit reflog\n```\n\n## 搜索带有<需要查询的关键字>的版本号\n```\ngit log --grep=<需要查询的关键字>\n```\n\n## 搜索<作者/用户名>提交的历史版本\n```\ngit log --author=<作者/用户名>\n```\n\n## 加入暂存区后，返回上一次的添加 (删除本次的 `add`)\n- 返回指定文件\n```\ngit reset HEAD <文件名>\n```\n- 返回所有文件\n```\ngit reset HEAD .\n```\n","source":"_posts/git文件回滚.md","raw":"---\ntitle: git文件回滚\ndate: 2017-04-29 11:18:08\ntags: [git,前端笔记]\ncategories: Git\n---\n## 跨过暂存区直接将本地文件提交到版本库\n\n如果执行过一次增加到版本库 `git commit -a -m \"更新内容描述\"`\n\n## 从暂存区拉取历史文件\n- 全部拉取回来\n```\ngit checkout .\n```\n<!--more-->\n- 拉取某一个文件\n```\ngit checkout <文件名>\n```\n\n## 从版本库将文件某一版本回滚到暂存区和工作区\n```\ngit reset --hard <版本号>\n```\n\n## 查看所有操作的版本号\n```\ngit reflog\n```\n\n## 搜索带有<需要查询的关键字>的版本号\n```\ngit log --grep=<需要查询的关键字>\n```\n\n## 搜索<作者/用户名>提交的历史版本\n```\ngit log --author=<作者/用户名>\n```\n\n## 加入暂存区后，返回上一次的添加 (删除本次的 `add`)\n- 返回指定文件\n```\ngit reset HEAD <文件名>\n```\n- 返回所有文件\n```\ngit reset HEAD .\n```\n","slug":"git文件回滚","published":1,"updated":"2017-06-02T02:14:47.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne125000megcrjx81q3bb","content":"<h2 id=\"跨过暂存区直接将本地文件提交到版本库\"><a href=\"#跨过暂存区直接将本地文件提交到版本库\" class=\"headerlink\" title=\"跨过暂存区直接将本地文件提交到版本库\"></a>跨过暂存区直接将本地文件提交到版本库</h2><p>如果执行过一次增加到版本库 <code>git commit -a -m &quot;更新内容描述&quot;</code></p>\n<h2 id=\"从暂存区拉取历史文件\"><a href=\"#从暂存区拉取历史文件\" class=\"headerlink\" title=\"从暂存区拉取历史文件\"></a>从暂存区拉取历史文件</h2><ul>\n<li>全部拉取回来<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout .</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>拉取某一个文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout &lt;文件名&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"从版本库将文件某一版本回滚到暂存区和工作区\"><a href=\"#从版本库将文件某一版本回滚到暂存区和工作区\" class=\"headerlink\" title=\"从版本库将文件某一版本回滚到暂存区和工作区\"></a>从版本库将文件某一版本回滚到暂存区和工作区</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset --hard &lt;版本号&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"查看所有操作的版本号\"><a href=\"#查看所有操作的版本号\" class=\"headerlink\" title=\"查看所有操作的版本号\"></a>查看所有操作的版本号</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reflog</div></pre></td></tr></table></figure>\n<h2 id=\"搜索带有-lt-需要查询的关键字-gt-的版本号\"><a href=\"#搜索带有-lt-需要查询的关键字-gt-的版本号\" class=\"headerlink\" title=\"搜索带有&lt;需要查询的关键字&gt;的版本号\"></a>搜索带有&lt;需要查询的关键字&gt;的版本号</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --grep=&lt;需要查询的关键字&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"搜索-lt-作者-用户名-gt-提交的历史版本\"><a href=\"#搜索-lt-作者-用户名-gt-提交的历史版本\" class=\"headerlink\" title=\"搜索&lt;作者/用户名&gt;提交的历史版本\"></a>搜索&lt;作者/用户名&gt;提交的历史版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --author=&lt;作者/用户名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"加入暂存区后，返回上一次的添加-删除本次的-add\"><a href=\"#加入暂存区后，返回上一次的添加-删除本次的-add\" class=\"headerlink\" title=\"加入暂存区后，返回上一次的添加 (删除本次的 add)\"></a>加入暂存区后，返回上一次的添加 (删除本次的 <code>add</code>)</h2><ul>\n<li><p>返回指定文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset HEAD &lt;文件名&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>返回所有文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset HEAD .</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"<h2 id=\"跨过暂存区直接将本地文件提交到版本库\"><a href=\"#跨过暂存区直接将本地文件提交到版本库\" class=\"headerlink\" title=\"跨过暂存区直接将本地文件提交到版本库\"></a>跨过暂存区直接将本地文件提交到版本库</h2><p>如果执行过一次增加到版本库 <code>git commit -a -m &quot;更新内容描述&quot;</code></p>\n<h2 id=\"从暂存区拉取历史文件\"><a href=\"#从暂存区拉取历史文件\" class=\"headerlink\" title=\"从暂存区拉取历史文件\"></a>从暂存区拉取历史文件</h2><ul>\n<li>全部拉取回来<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout .</div></pre></td></tr></table></figure>\n</li>\n</ul>","more":"<ul>\n<li>拉取某一个文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout &lt;文件名&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"从版本库将文件某一版本回滚到暂存区和工作区\"><a href=\"#从版本库将文件某一版本回滚到暂存区和工作区\" class=\"headerlink\" title=\"从版本库将文件某一版本回滚到暂存区和工作区\"></a>从版本库将文件某一版本回滚到暂存区和工作区</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset --hard &lt;版本号&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"查看所有操作的版本号\"><a href=\"#查看所有操作的版本号\" class=\"headerlink\" title=\"查看所有操作的版本号\"></a>查看所有操作的版本号</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reflog</div></pre></td></tr></table></figure>\n<h2 id=\"搜索带有-lt-需要查询的关键字-gt-的版本号\"><a href=\"#搜索带有-lt-需要查询的关键字-gt-的版本号\" class=\"headerlink\" title=\"搜索带有&lt;需要查询的关键字&gt;的版本号\"></a>搜索带有&lt;需要查询的关键字&gt;的版本号</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --grep=&lt;需要查询的关键字&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"搜索-lt-作者-用户名-gt-提交的历史版本\"><a href=\"#搜索-lt-作者-用户名-gt-提交的历史版本\" class=\"headerlink\" title=\"搜索&lt;作者/用户名&gt;提交的历史版本\"></a>搜索&lt;作者/用户名&gt;提交的历史版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --author=&lt;作者/用户名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"加入暂存区后，返回上一次的添加-删除本次的-add\"><a href=\"#加入暂存区后，返回上一次的添加-删除本次的-add\" class=\"headerlink\" title=\"加入暂存区后，返回上一次的添加 (删除本次的 add)\"></a>加入暂存区后，返回上一次的添加 (删除本次的 <code>add</code>)</h2><ul>\n<li><p>返回指定文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset HEAD &lt;文件名&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>返回所有文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset HEAD .</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"git解决冲突","date":"2017-04-29T04:46:48.000Z","_content":"## 处理冲突\n由于两个分支改变了相同的文件，但是文件内容不同，这时候需要手动吹，再次提交，就可以完成合并\n> 模块化开发，可以降低冲突的发生\n\n## 查看git提交图谱\n```\ngit log --graph\n```\n<!--more-->\n通过上下方向键拉倒提交日志最低端，按`Q`键退出提交日志窗口。\n\n## github注册之后需要配置邮箱\n\n## 创建有内容的文件\n```\necho \"重写的内容\" > README.md\necho \"需要追加的内容\" >> README.md\n```\n\n## 本地仓库与远程仓库进行关联\n```\ngit remote add <名字> <地址>\n```\n\n## 查看远程仓库的连接列表\n```\ngit remote -v\n```\n## 删除远程仓库的连接\n```\ngit remote <连接名>\n```\n\n## 推送到远程仓库\n-u 为upstream  设置之后下次推送时可以使用简写\n```\ngit push origin master -u\n简写\ngit push\n```\n","source":"_posts/git解决冲突.md","raw":"---\ntitle: git解决冲突\ndate: 2017-04-29 12:46:48\ntags: [git，前端笔记]\ncategories: Git\n---\n## 处理冲突\n由于两个分支改变了相同的文件，但是文件内容不同，这时候需要手动吹，再次提交，就可以完成合并\n> 模块化开发，可以降低冲突的发生\n\n## 查看git提交图谱\n```\ngit log --graph\n```\n<!--more-->\n通过上下方向键拉倒提交日志最低端，按`Q`键退出提交日志窗口。\n\n## github注册之后需要配置邮箱\n\n## 创建有内容的文件\n```\necho \"重写的内容\" > README.md\necho \"需要追加的内容\" >> README.md\n```\n\n## 本地仓库与远程仓库进行关联\n```\ngit remote add <名字> <地址>\n```\n\n## 查看远程仓库的连接列表\n```\ngit remote -v\n```\n## 删除远程仓库的连接\n```\ngit remote <连接名>\n```\n\n## 推送到远程仓库\n-u 为upstream  设置之后下次推送时可以使用简写\n```\ngit push origin master -u\n简写\ngit push\n```\n","slug":"git解决冲突","published":1,"updated":"2017-06-02T02:14:47.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne127000pegcrefmbqnpg","content":"<h2 id=\"处理冲突\"><a href=\"#处理冲突\" class=\"headerlink\" title=\"处理冲突\"></a>处理冲突</h2><p>由于两个分支改变了相同的文件，但是文件内容不同，这时候需要手动吹，再次提交，就可以完成合并</p>\n<blockquote>\n<p>模块化开发，可以降低冲突的发生</p>\n</blockquote>\n<h2 id=\"查看git提交图谱\"><a href=\"#查看git提交图谱\" class=\"headerlink\" title=\"查看git提交图谱\"></a>查看git提交图谱</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --graph</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>通过上下方向键拉倒提交日志最低端，按<code>Q</code>键退出提交日志窗口。</p>\n<h2 id=\"github注册之后需要配置邮箱\"><a href=\"#github注册之后需要配置邮箱\" class=\"headerlink\" title=\"github注册之后需要配置邮箱\"></a>github注册之后需要配置邮箱</h2><h2 id=\"创建有内容的文件\"><a href=\"#创建有内容的文件\" class=\"headerlink\" title=\"创建有内容的文件\"></a>创建有内容的文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;重写的内容&quot; &gt; README.md</div><div class=\"line\">echo &quot;需要追加的内容&quot; &gt;&gt; README.md</div></pre></td></tr></table></figure>\n<h2 id=\"本地仓库与远程仓库进行关联\"><a href=\"#本地仓库与远程仓库进行关联\" class=\"headerlink\" title=\"本地仓库与远程仓库进行关联\"></a>本地仓库与远程仓库进行关联</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add &lt;名字&gt; &lt;地址&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"查看远程仓库的连接列表\"><a href=\"#查看远程仓库的连接列表\" class=\"headerlink\" title=\"查看远程仓库的连接列表\"></a>查看远程仓库的连接列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure>\n<h2 id=\"删除远程仓库的连接\"><a href=\"#删除远程仓库的连接\" class=\"headerlink\" title=\"删除远程仓库的连接\"></a>删除远程仓库的连接</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote &lt;连接名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"推送到远程仓库\"><a href=\"#推送到远程仓库\" class=\"headerlink\" title=\"推送到远程仓库\"></a>推送到远程仓库</h2><p>-u 为upstream  设置之后下次推送时可以使用简写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master -u</div><div class=\"line\">简写</div><div class=\"line\">git push</div></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"处理冲突\"><a href=\"#处理冲突\" class=\"headerlink\" title=\"处理冲突\"></a>处理冲突</h2><p>由于两个分支改变了相同的文件，但是文件内容不同，这时候需要手动吹，再次提交，就可以完成合并</p>\n<blockquote>\n<p>模块化开发，可以降低冲突的发生</p>\n</blockquote>\n<h2 id=\"查看git提交图谱\"><a href=\"#查看git提交图谱\" class=\"headerlink\" title=\"查看git提交图谱\"></a>查看git提交图谱</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --graph</div></pre></td></tr></table></figure>","more":"<p>通过上下方向键拉倒提交日志最低端，按<code>Q</code>键退出提交日志窗口。</p>\n<h2 id=\"github注册之后需要配置邮箱\"><a href=\"#github注册之后需要配置邮箱\" class=\"headerlink\" title=\"github注册之后需要配置邮箱\"></a>github注册之后需要配置邮箱</h2><h2 id=\"创建有内容的文件\"><a href=\"#创建有内容的文件\" class=\"headerlink\" title=\"创建有内容的文件\"></a>创建有内容的文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;重写的内容&quot; &gt; README.md</div><div class=\"line\">echo &quot;需要追加的内容&quot; &gt;&gt; README.md</div></pre></td></tr></table></figure>\n<h2 id=\"本地仓库与远程仓库进行关联\"><a href=\"#本地仓库与远程仓库进行关联\" class=\"headerlink\" title=\"本地仓库与远程仓库进行关联\"></a>本地仓库与远程仓库进行关联</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add &lt;名字&gt; &lt;地址&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"查看远程仓库的连接列表\"><a href=\"#查看远程仓库的连接列表\" class=\"headerlink\" title=\"查看远程仓库的连接列表\"></a>查看远程仓库的连接列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure>\n<h2 id=\"删除远程仓库的连接\"><a href=\"#删除远程仓库的连接\" class=\"headerlink\" title=\"删除远程仓库的连接\"></a>删除远程仓库的连接</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote &lt;连接名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"推送到远程仓库\"><a href=\"#推送到远程仓库\" class=\"headerlink\" title=\"推送到远程仓库\"></a>推送到远程仓库</h2><p>-u 为upstream  设置之后下次推送时可以使用简写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master -u</div><div class=\"line\">简写</div><div class=\"line\">git push</div></pre></td></tr></table></figure></p>"},{"title":"node-EventEmitter方法","date":"2017-04-24T14:48:38.000Z","_content":"## EventEmitter方法\n- `addListener(eventName,listener)` 对指定事件绑定监听\n\n- `on(enentName,listener)` 对指定事件绑定监听同 `addListener(eventName,listener)`\n\n- `once(eventName,listener)` 对指定事件仅绑定一次\n<!--more-->\n- `removeListener(eventName，listener)` 解除绑定监听\n\n- `removeAllListener(eventName)` 解除所有绑定的监听事件\n\n- `emit(eventName,args)` 触发事件第一个是事件类型 args是传入的参数\n","source":"_posts/node-EventEmitter方法.md","raw":"---\ntitle: node-EventEmitter方法\ndate: 2017-04-24 22:48:38\ntags: [node,js,nodeAPI]\ncategories: node\n---\n## EventEmitter方法\n- `addListener(eventName,listener)` 对指定事件绑定监听\n\n- `on(enentName,listener)` 对指定事件绑定监听同 `addListener(eventName,listener)`\n\n- `once(eventName,listener)` 对指定事件仅绑定一次\n<!--more-->\n- `removeListener(eventName，listener)` 解除绑定监听\n\n- `removeAllListener(eventName)` 解除所有绑定的监听事件\n\n- `emit(eventName,args)` 触发事件第一个是事件类型 args是传入的参数\n","slug":"node-EventEmitter方法","published":1,"updated":"2017-06-02T02:14:47.228Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12a000uegcrtd9cve19","content":"<h2 id=\"EventEmitter方法\"><a href=\"#EventEmitter方法\" class=\"headerlink\" title=\"EventEmitter方法\"></a>EventEmitter方法</h2><ul>\n<li><p><code>addListener(eventName,listener)</code> 对指定事件绑定监听</p>\n</li>\n<li><p><code>on(enentName,listener)</code> 对指定事件绑定监听同 <code>addListener(eventName,listener)</code></p>\n</li>\n<li><p><code>once(eventName,listener)</code> 对指定事件仅绑定一次</p>\n<a id=\"more\"></a></li>\n<li><p><code>removeListener(eventName，listener)</code> 解除绑定监听</p>\n</li>\n<li><p><code>removeAllListener(eventName)</code> 解除所有绑定的监听事件</p>\n</li>\n<li><p><code>emit(eventName,args)</code> 触发事件第一个是事件类型 args是传入的参数</p>\n</li>\n</ul>\n","excerpt":"<h2 id=\"EventEmitter方法\"><a href=\"#EventEmitter方法\" class=\"headerlink\" title=\"EventEmitter方法\"></a>EventEmitter方法</h2><ul>\n<li><p><code>addListener(eventName,listener)</code> 对指定事件绑定监听</p>\n</li>\n<li><p><code>on(enentName,listener)</code> 对指定事件绑定监听同 <code>addListener(eventName,listener)</code></p>\n</li>\n<li><p><code>once(eventName,listener)</code> 对指定事件仅绑定一次</p>","more":"</li>\n<li><p><code>removeListener(eventName，listener)</code> 解除绑定监听</p>\n</li>\n<li><p><code>removeAllListener(eventName)</code> 解除所有绑定的监听事件</p>\n</li>\n<li><p><code>emit(eventName,args)</code> 触发事件第一个是事件类型 args是传入的参数</p>\n</li>\n</ul>"},{"title":"hexo安装","date":"2017-04-30T09:25:31.000Z","_content":"## 下载hexo脚手架工具\n```\nnpm install hexo-cli -g\n```\n> 下载后可以在命令行下生成一个全局命令`hexo`\n<!--more-->\n## 初始化博客\n```\nhexo init <博客文件夹名>\n```\n<!--more-->\n## 进入博客文件夹\n```\ncd <博客文件夹名>\n```\n## 启动hexo本地服务\n```\nhexo server\n```\n> 默认端口号为4000，如果端口被占用可以使用\n\n```\nhexo server -p <端口号>\n```\n","source":"_posts/hexo安装.md","raw":"---\ntitle: hexo安装\ndate: 2017-04-30 17:25:31\ntags: [hexo,装逼利器]\ncategories: HEXO\n---\n## 下载hexo脚手架工具\n```\nnpm install hexo-cli -g\n```\n> 下载后可以在命令行下生成一个全局命令`hexo`\n<!--more-->\n## 初始化博客\n```\nhexo init <博客文件夹名>\n```\n<!--more-->\n## 进入博客文件夹\n```\ncd <博客文件夹名>\n```\n## 启动hexo本地服务\n```\nhexo server\n```\n> 默认端口号为4000，如果端口被占用可以使用\n\n```\nhexo server -p <端口号>\n```\n","slug":"hexo安装","published":1,"updated":"2017-06-02T02:14:47.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12d000xegcrnrhggsne","content":"<h2 id=\"下载hexo脚手架工具\"><a href=\"#下载hexo脚手架工具\" class=\"headerlink\" title=\"下载hexo脚手架工具\"></a>下载hexo脚手架工具</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div></pre></td></tr></table></figure>\n<blockquote>\n<p>下载后可以在命令行下生成一个全局命令<code>hexo</code><br><a id=\"more\"></a></p>\n<h2 id=\"初始化博客\"><a href=\"#初始化博客\" class=\"headerlink\" title=\"初始化博客\"></a>初始化博客</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;博客文件夹名&gt;</div></pre></td></tr></table></figure>\n</blockquote>\n<!--more-->\n<h2 id=\"进入博客文件夹\"><a href=\"#进入博客文件夹\" class=\"headerlink\" title=\"进入博客文件夹\"></a>进入博客文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd &lt;博客文件夹名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"启动hexo本地服务\"><a href=\"#启动hexo本地服务\" class=\"headerlink\" title=\"启动hexo本地服务\"></a>启动hexo本地服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<blockquote>\n<p>默认端口号为4000，如果端口被占用可以使用</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server -p &lt;端口号&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"下载hexo脚手架工具\"><a href=\"#下载hexo脚手架工具\" class=\"headerlink\" title=\"下载hexo脚手架工具\"></a>下载hexo脚手架工具</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div></pre></td></tr></table></figure>\n<blockquote>\n<p>下载后可以在命令行下生成一个全局命令<code>hexo</code><br>","more":"</p>\n<h2 id=\"初始化博客\"><a href=\"#初始化博客\" class=\"headerlink\" title=\"初始化博客\"></a>初始化博客</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;博客文件夹名&gt;</div></pre></td></tr></table></figure>\n</blockquote>\n<!--more-->\n<h2 id=\"进入博客文件夹\"><a href=\"#进入博客文件夹\" class=\"headerlink\" title=\"进入博客文件夹\"></a>进入博客文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd &lt;博客文件夹名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"启动hexo本地服务\"><a href=\"#启动hexo本地服务\" class=\"headerlink\" title=\"启动hexo本地服务\"></a>启动hexo本地服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<blockquote>\n<p>默认端口号为4000，如果端口被占用可以使用</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server -p &lt;端口号&gt;</div></pre></td></tr></table></figure>"},{"title":"jsonp跨域","date":"2017-04-23T04:47:33.000Z","_content":"## 两个网站要共享数据\njsonp 为跨域的最常见的手段（不能发送数据，只支持get请求）\najax会有限制问题，会出现不允许访问。\njsonp,cros,postMessage(iframe),websocket;\n- jsonp:scritp 不会导致跨域问题，我的网站引用你的网站的js,img,css,不用img和css的原因是默认会被转成图片和样式，img常用作记录访问页面的次数，统计请求这样图片的次数。\n> jsonp是通过src跨域的，并且只支持get请求。\n<!--more-->\n> 由于src没有访问限制，可以通过src引用其他网站的数据（此网站必须通过这样的接口）\n- cros 让被访问的服务器 允许跨域即可 （需要服务端支持）\n- iftame 跨域 html5 提供的API\n- websocket html5 提供的API\n## jsonp 的原理\n- 1.在当前js中声明一个全局函数\nfunction fn(){}\n- 2.动态创建script标签\n通过script 标签引用其他网址并且将这个全局函数名字传递给后台\n\n```\n<script src =\"http://localhost:3000/getuser?callback=fn\">\n```\n- 3.后台返回函数执行\n`\nfn('{name:1}');\n`\n","source":"_posts/jsonp.md","raw":"---\ntitle: jsonp跨域\ndate: 2017-04-23 12:47:33\ntags: [node,js,jsonp]\ncategories: jsonp\n---\n## 两个网站要共享数据\njsonp 为跨域的最常见的手段（不能发送数据，只支持get请求）\najax会有限制问题，会出现不允许访问。\njsonp,cros,postMessage(iframe),websocket;\n- jsonp:scritp 不会导致跨域问题，我的网站引用你的网站的js,img,css,不用img和css的原因是默认会被转成图片和样式，img常用作记录访问页面的次数，统计请求这样图片的次数。\n> jsonp是通过src跨域的，并且只支持get请求。\n<!--more-->\n> 由于src没有访问限制，可以通过src引用其他网站的数据（此网站必须通过这样的接口）\n- cros 让被访问的服务器 允许跨域即可 （需要服务端支持）\n- iftame 跨域 html5 提供的API\n- websocket html5 提供的API\n## jsonp 的原理\n- 1.在当前js中声明一个全局函数\nfunction fn(){}\n- 2.动态创建script标签\n通过script 标签引用其他网址并且将这个全局函数名字传递给后台\n\n```\n<script src =\"http://localhost:3000/getuser?callback=fn\">\n```\n- 3.后台返回函数执行\n`\nfn('{name:1}');\n`\n","slug":"jsonp","published":1,"updated":"2017-06-02T02:14:47.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12f0010egcrgg0slgp0","content":"<h2 id=\"两个网站要共享数据\"><a href=\"#两个网站要共享数据\" class=\"headerlink\" title=\"两个网站要共享数据\"></a>两个网站要共享数据</h2><p>jsonp 为跨域的最常见的手段（不能发送数据，只支持get请求）<br>ajax会有限制问题，会出现不允许访问。<br>jsonp,cros,postMessage(iframe),websocket;</p>\n<ul>\n<li>jsonp:scritp 不会导致跨域问题，我的网站引用你的网站的js,img,css,不用img和css的原因是默认会被转成图片和样式，img常用作记录访问页面的次数，统计请求这样图片的次数。<blockquote>\n<p>jsonp是通过src跨域的，并且只支持get请求。</p>\n<a id=\"more\"></a>\n<p>由于src没有访问限制，可以通过src引用其他网站的数据（此网站必须通过这样的接口）</p>\n</blockquote>\n</li>\n<li>cros 让被访问的服务器 允许跨域即可 （需要服务端支持）</li>\n<li>iftame 跨域 html5 提供的API</li>\n<li>websocket html5 提供的API<h2 id=\"jsonp-的原理\"><a href=\"#jsonp-的原理\" class=\"headerlink\" title=\"jsonp 的原理\"></a>jsonp 的原理</h2></li>\n<li>1.在当前js中声明一个全局函数<br>function fn(){}</li>\n<li>2.动态创建script标签<br>通过script 标签引用其他网址并且将这个全局函数名字传递给后台</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src =&quot;http://localhost:3000/getuser?callback=fn&quot;&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>3.后台返回函数执行<br><code>fn(&#39;{name:1}&#39;);</code></li>\n</ul>\n","excerpt":"<h2 id=\"两个网站要共享数据\"><a href=\"#两个网站要共享数据\" class=\"headerlink\" title=\"两个网站要共享数据\"></a>两个网站要共享数据</h2><p>jsonp 为跨域的最常见的手段（不能发送数据，只支持get请求）<br>ajax会有限制问题，会出现不允许访问。<br>jsonp,cros,postMessage(iframe),websocket;</p>\n<ul>\n<li>jsonp:scritp 不会导致跨域问题，我的网站引用你的网站的js,img,css,不用img和css的原因是默认会被转成图片和样式，img常用作记录访问页面的次数，统计请求这样图片的次数。<blockquote>\n<p>jsonp是通过src跨域的，并且只支持get请求。</p>","more":"<p>由于src没有访问限制，可以通过src引用其他网站的数据（此网站必须通过这样的接口）</p>\n</blockquote>\n</li>\n<li>cros 让被访问的服务器 允许跨域即可 （需要服务端支持）</li>\n<li>iftame 跨域 html5 提供的API</li>\n<li>websocket html5 提供的API<h2 id=\"jsonp-的原理\"><a href=\"#jsonp-的原理\" class=\"headerlink\" title=\"jsonp 的原理\"></a>jsonp 的原理</h2></li>\n<li>1.在当前js中声明一个全局函数<br>function fn(){}</li>\n<li>2.动态创建script标签<br>通过script 标签引用其他网址并且将这个全局函数名字传递给后台</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src =&quot;http://localhost:3000/getuser?callback=fn&quot;&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>3.后台返回函数执行<br><code>fn(&#39;{name:1}&#39;);</code></li>\n</ul>"},{"title":"hexo发布","date":"2017-04-30T09:48:34.000Z","_content":"## 发布hexo\n发布到github上一个账号只能发布一次，创建新的github库名字必须是\n`<github用户名>.github.io`\n## 配置到github\n在_config.yml中找到`deploy`中添加一下内容\n<!--more-->\n```\ndeploy:\n  type: git\n  repository: https://github.com/<github用户名>/<github用户名>.github.io.git\n  branch: master\n```\n## 下载发布插件\n```\nnpm install hexo-deployer-git --save\n```\n## 发布\n```\nhexo g //生成静态页\nhexo d //发布博客\n```\n","source":"_posts/hexo发布.md","raw":"---\ntitle: hexo发布\ndate: 2017-04-30 17:48:34\ntags: [hexo,装逼利器]\ncategories: HEXO\n---\n## 发布hexo\n发布到github上一个账号只能发布一次，创建新的github库名字必须是\n`<github用户名>.github.io`\n## 配置到github\n在_config.yml中找到`deploy`中添加一下内容\n<!--more-->\n```\ndeploy:\n  type: git\n  repository: https://github.com/<github用户名>/<github用户名>.github.io.git\n  branch: master\n```\n## 下载发布插件\n```\nnpm install hexo-deployer-git --save\n```\n## 发布\n```\nhexo g //生成静态页\nhexo d //发布博客\n```\n","slug":"hexo发布","published":1,"updated":"2017-06-02T02:14:47.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12g0014egcr7h7rz1p2","content":"<h2 id=\"发布hexo\"><a href=\"#发布hexo\" class=\"headerlink\" title=\"发布hexo\"></a>发布hexo</h2><p>发布到github上一个账号只能发布一次，创建新的github库名字必须是<br><code>&lt;github用户名&gt;.github.io</code></p>\n<h2 id=\"配置到github\"><a href=\"#配置到github\" class=\"headerlink\" title=\"配置到github\"></a>配置到github</h2><p>在_config.yml中找到<code>deploy</code>中添加一下内容<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: https://github.com/&lt;github用户名&gt;/&lt;github用户名&gt;.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<h2 id=\"下载发布插件\"><a href=\"#下载发布插件\" class=\"headerlink\" title=\"下载发布插件\"></a>下载发布插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<h2 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g //生成静态页</div><div class=\"line\">hexo d //发布博客</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"发布hexo\"><a href=\"#发布hexo\" class=\"headerlink\" title=\"发布hexo\"></a>发布hexo</h2><p>发布到github上一个账号只能发布一次，创建新的github库名字必须是<br><code>&lt;github用户名&gt;.github.io</code></p>\n<h2 id=\"配置到github\"><a href=\"#配置到github\" class=\"headerlink\" title=\"配置到github\"></a>配置到github</h2><p>在_config.yml中找到<code>deploy</code>中添加一下内容<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: https://github.com/&lt;github用户名&gt;/&lt;github用户名&gt;.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<h2 id=\"下载发布插件\"><a href=\"#下载发布插件\" class=\"headerlink\" title=\"下载发布插件\"></a>下载发布插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<h2 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g //生成静态页</div><div class=\"line\">hexo d //发布博客</div></pre></td></tr></table></figure>"},{"title":"node发布与订阅-观察者模式","date":"2017-04-30T08:01:00.000Z","_content":"## 发布订阅模式\n- 一种一对多的关系，订阅事件和发布事件\n- {'水开了':['泡面','洗澡']}\n\n## 绑定事件 on\n维护一个一对多的关系{\"被监听的事件名\":[事件1,事件2,事件3]}\n<!--more-->\n## 发射事件 emit\n当触发事件后会将绑定的事件依次触发\n通过发射的事件名，将数组里面的参数依次执行\n","source":"_posts/node发布与订阅.md","raw":"---\ntitle: node发布与订阅-观察者模式\ndate: 2017-04-30 16:01:00\ntags: [node,node基础]\ncategories: node\n---\n## 发布订阅模式\n- 一种一对多的关系，订阅事件和发布事件\n- {'水开了':['泡面','洗澡']}\n\n## 绑定事件 on\n维护一个一对多的关系{\"被监听的事件名\":[事件1,事件2,事件3]}\n<!--more-->\n## 发射事件 emit\n当触发事件后会将绑定的事件依次触发\n通过发射的事件名，将数组里面的参数依次执行\n","slug":"node发布与订阅","published":1,"updated":"2017-06-02T02:14:47.228Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12i0018egcr0q66ju5j","content":"<h2 id=\"发布订阅模式\"><a href=\"#发布订阅模式\" class=\"headerlink\" title=\"发布订阅模式\"></a>发布订阅模式</h2><ul>\n<li>一种一对多的关系，订阅事件和发布事件</li>\n<li>{‘水开了’:[‘泡面’,’洗澡’]}</li>\n</ul>\n<h2 id=\"绑定事件-on\"><a href=\"#绑定事件-on\" class=\"headerlink\" title=\"绑定事件 on\"></a>绑定事件 on</h2><p>维护一个一对多的关系{“被监听的事件名”:[事件1,事件2,事件3]}<br><a id=\"more\"></a></p>\n<h2 id=\"发射事件-emit\"><a href=\"#发射事件-emit\" class=\"headerlink\" title=\"发射事件 emit\"></a>发射事件 emit</h2><p>当触发事件后会将绑定的事件依次触发<br>通过发射的事件名，将数组里面的参数依次执行</p>\n","excerpt":"<h2 id=\"发布订阅模式\"><a href=\"#发布订阅模式\" class=\"headerlink\" title=\"发布订阅模式\"></a>发布订阅模式</h2><ul>\n<li>一种一对多的关系，订阅事件和发布事件</li>\n<li>{‘水开了’:[‘泡面’,’洗澡’]}</li>\n</ul>\n<h2 id=\"绑定事件-on\"><a href=\"#绑定事件-on\" class=\"headerlink\" title=\"绑定事件 on\"></a>绑定事件 on</h2><p>维护一个一对多的关系{“被监听的事件名”:[事件1,事件2,事件3]}<br>","more":"</p>\n<h2 id=\"发射事件-emit\"><a href=\"#发射事件-emit\" class=\"headerlink\" title=\"发射事件 emit\"></a>发射事件 emit</h2><p>当触发事件后会将绑定的事件依次触发<br>通过发射的事件名，将数组里面的参数依次执行</p>"},{"title":"node同步与异步","date":"2017-04-30T01:46:51.000Z","_content":"## 同步与异步\nnode中异步包括：\n- setTimeout\n- callback\n- process\n- setImmediate\n- setInterval\n<!--more-->\n## 阻塞非阻塞\n针对的内核，厨师，如果厨师不释放掉服务员，主线程不可能异步\n- 非阻塞是异步的前置条件\n\n> 主线是单线程的，内核是多线程\n\n## 单线程&多线程\n- 一个个发短信\n- 群发短信多线程\n\n> 进程包括线程，在node中一个进程只能包括一个线程，node可以多开多个线程，开多个进程（子进程）\n\n## 事件循环\n- 事件驱动\n","source":"_posts/node同步与异步.md","raw":"---\ntitle: node同步与异步\ndate: 2017-04-30 09:46:51\ntags: [node]\ncategories: node\n---\n## 同步与异步\nnode中异步包括：\n- setTimeout\n- callback\n- process\n- setImmediate\n- setInterval\n<!--more-->\n## 阻塞非阻塞\n针对的内核，厨师，如果厨师不释放掉服务员，主线程不可能异步\n- 非阻塞是异步的前置条件\n\n> 主线是单线程的，内核是多线程\n\n## 单线程&多线程\n- 一个个发短信\n- 群发短信多线程\n\n> 进程包括线程，在node中一个进程只能包括一个线程，node可以多开多个线程，开多个进程（子进程）\n\n## 事件循环\n- 事件驱动\n","slug":"node同步与异步","published":1,"updated":"2017-06-02T02:14:47.228Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12k001begcreg2qm78x","content":"<h2 id=\"同步与异步\"><a href=\"#同步与异步\" class=\"headerlink\" title=\"同步与异步\"></a>同步与异步</h2><p>node中异步包括：</p>\n<ul>\n<li>setTimeout</li>\n<li>callback</li>\n<li>process</li>\n<li>setImmediate</li>\n<li>setInterval<a id=\"more\"></a>\n<h2 id=\"阻塞非阻塞\"><a href=\"#阻塞非阻塞\" class=\"headerlink\" title=\"阻塞非阻塞\"></a>阻塞非阻塞</h2>针对的内核，厨师，如果厨师不释放掉服务员，主线程不可能异步</li>\n<li>非阻塞是异步的前置条件</li>\n</ul>\n<blockquote>\n<p>主线是单线程的，内核是多线程</p>\n</blockquote>\n<h2 id=\"单线程-amp-多线程\"><a href=\"#单线程-amp-多线程\" class=\"headerlink\" title=\"单线程&amp;多线程\"></a>单线程&amp;多线程</h2><ul>\n<li>一个个发短信</li>\n<li>群发短信多线程</li>\n</ul>\n<blockquote>\n<p>进程包括线程，在node中一个进程只能包括一个线程，node可以多开多个线程，开多个进程（子进程）</p>\n</blockquote>\n<h2 id=\"事件循环\"><a href=\"#事件循环\" class=\"headerlink\" title=\"事件循环\"></a>事件循环</h2><ul>\n<li>事件驱动</li>\n</ul>\n","excerpt":"<h2 id=\"同步与异步\"><a href=\"#同步与异步\" class=\"headerlink\" title=\"同步与异步\"></a>同步与异步</h2><p>node中异步包括：</p>\n<ul>\n<li>setTimeout</li>\n<li>callback</li>\n<li>process</li>\n<li>setImmediate</li>\n<li>setInterval","more":"<h2 id=\"阻塞非阻塞\"><a href=\"#阻塞非阻塞\" class=\"headerlink\" title=\"阻塞非阻塞\"></a>阻塞非阻塞</h2>针对的内核，厨师，如果厨师不释放掉服务员，主线程不可能异步</li>\n<li>非阻塞是异步的前置条件</li>\n</ul>\n<blockquote>\n<p>主线是单线程的，内核是多线程</p>\n</blockquote>\n<h2 id=\"单线程-amp-多线程\"><a href=\"#单线程-amp-多线程\" class=\"headerlink\" title=\"单线程&amp;多线程\"></a>单线程&amp;多线程</h2><ul>\n<li>一个个发短信</li>\n<li>群发短信多线程</li>\n</ul>\n<blockquote>\n<p>进程包括线程，在node中一个进程只能包括一个线程，node可以多开多个线程，开多个进程（子进程）</p>\n</blockquote>\n<h2 id=\"事件循环\"><a href=\"#事件循环\" class=\"headerlink\" title=\"事件循环\"></a>事件循环</h2><ul>\n<li>事件驱动</li>\n</ul>"},{"title":"node核心模块","date":"2017-04-30T04:37:18.000Z","_content":"## 核心模块\n引用核心模块不需要安装，也不需要使用./或者../来引入\n\n### util模块\nutil 最主要的功能是继承，判断类型\n>js中的继承call，原型继承，new，extends\n- Obj.create() es5的继承 只继承公有\n```\nSun.prototype = Obj.create(Parent.prototype)\n```\n<!--more-->\n- Object.setPrototypeOf() es6只继承公有\n```\nObject.setPrototypeOf(Sun.prototype,Parent.prototype);\n```\n原理Sun.prototype.__proto__ = Parent.prototype\n- call 只继承私有属性\n- Sun.prototype = new Parent() 可以继承公有和私有的方法 缺点不能传递参数\n- Sun.prototype.__proto__ = Parent.prototype 通过原型链连接父亲的原型\n\n- util.inherits(Child,Parent);   //node中的继承（继承公有属性）\n\n### events模块\n常用的包括 on，emit，once，removeListener，removeAllListener\n","source":"_posts/node核心模块.md","raw":"---\ntitle: node核心模块\ndate: 2017-04-30 12:37:18\ntags: [node，node基础]\ncategories: node\n---\n## 核心模块\n引用核心模块不需要安装，也不需要使用./或者../来引入\n\n### util模块\nutil 最主要的功能是继承，判断类型\n>js中的继承call，原型继承，new，extends\n- Obj.create() es5的继承 只继承公有\n```\nSun.prototype = Obj.create(Parent.prototype)\n```\n<!--more-->\n- Object.setPrototypeOf() es6只继承公有\n```\nObject.setPrototypeOf(Sun.prototype,Parent.prototype);\n```\n原理Sun.prototype.__proto__ = Parent.prototype\n- call 只继承私有属性\n- Sun.prototype = new Parent() 可以继承公有和私有的方法 缺点不能传递参数\n- Sun.prototype.__proto__ = Parent.prototype 通过原型链连接父亲的原型\n\n- util.inherits(Child,Parent);   //node中的继承（继承公有属性）\n\n### events模块\n常用的包括 on，emit，once，removeListener，removeAllListener\n","slug":"node核心模块","published":1,"updated":"2017-06-02T02:14:47.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12n001eegcro8oao47u","content":"<h2 id=\"核心模块\"><a href=\"#核心模块\" class=\"headerlink\" title=\"核心模块\"></a>核心模块</h2><p>引用核心模块不需要安装，也不需要使用./或者../来引入</p>\n<h3 id=\"util模块\"><a href=\"#util模块\" class=\"headerlink\" title=\"util模块\"></a>util模块</h3><p>util 最主要的功能是继承，判断类型</p>\n<blockquote>\n<p>js中的继承call，原型继承，new，extends</p>\n<ul>\n<li>Obj.create() es5的继承 只继承公有<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sun.prototype = Obj.create(Parent.prototype)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<ul>\n<li>Object.setPrototypeOf() es6只继承公有<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Object.setPrototypeOf(Sun.prototype,Parent.prototype);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>原理Sun.prototype.<strong>proto</strong> = Parent.prototype</p>\n<ul>\n<li>call 只继承私有属性</li>\n<li>Sun.prototype = new Parent() 可以继承公有和私有的方法 缺点不能传递参数</li>\n<li><p>Sun.prototype.<strong>proto</strong> = Parent.prototype 通过原型链连接父亲的原型</p>\n</li>\n<li><p>util.inherits(Child,Parent);   //node中的继承（继承公有属性）</p>\n</li>\n</ul>\n<h3 id=\"events模块\"><a href=\"#events模块\" class=\"headerlink\" title=\"events模块\"></a>events模块</h3><p>常用的包括 on，emit，once，removeListener，removeAllListener</p>\n","excerpt":"<h2 id=\"核心模块\"><a href=\"#核心模块\" class=\"headerlink\" title=\"核心模块\"></a>核心模块</h2><p>引用核心模块不需要安装，也不需要使用./或者../来引入</p>\n<h3 id=\"util模块\"><a href=\"#util模块\" class=\"headerlink\" title=\"util模块\"></a>util模块</h3><p>util 最主要的功能是继承，判断类型</p>\n<blockquote>\n<p>js中的继承call，原型继承，new，extends</p>\n<ul>\n<li>Obj.create() es5的继承 只继承公有<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sun.prototype = Obj.create(Parent.prototype)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>","more":"<ul>\n<li>Object.setPrototypeOf() es6只继承公有<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Object.setPrototypeOf(Sun.prototype,Parent.prototype);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>原理Sun.prototype.<strong>proto</strong> = Parent.prototype</p>\n<ul>\n<li>call 只继承私有属性</li>\n<li>Sun.prototype = new Parent() 可以继承公有和私有的方法 缺点不能传递参数</li>\n<li><p>Sun.prototype.<strong>proto</strong> = Parent.prototype 通过原型链连接父亲的原型</p>\n</li>\n<li><p>util.inherits(Child,Parent);   //node中的继承（继承公有属性）</p>\n</li>\n</ul>\n<h3 id=\"events模块\"><a href=\"#events模块\" class=\"headerlink\" title=\"events模块\"></a>events模块</h3><p>常用的包括 on，emit，once，removeListener，removeAllListener</p>"},{"title":"node基础（一）","date":"2017-04-30T01:58:14.000Z","_content":"> node 默认执行一个‘文件’ 时，就会套一层闭包函数，所有代码都是在个函数中执行的，默认这个函数提供5个参数，这五个参数可以直接使用，不用声明可以直接使用exports,require,module,__filename,dirname\n\n- 1.process 进程对象\n- 2.Buffer 缓冲区，表示内存中的数据（16进制）\n- 3.clearImmediate , setImmediate\n- 4.clearInterval , setInterval\n- 5.clearTimeout , setTimeout\n- 6.console\n<!--more-->\n## console 顺序不定的\n- console.log('log');\n- console.error('error');\n- console.warn('warn');\n- console.info('info');\n\n## setTimeout 异步\n- (1)这里的this是setTimeout 自己\nconsole.log(this);//这里的this被外层的闭包改掉了，是个{}\n(function(){\n  console.log(this);\n})();//这里的this是global\n> 改变this指向的方式\n  - 1.call apply\n  - 2.bind\n  - 3.var that = this;\n  - 4.arrow func 即箭头函数\n\n- (2)setTimeout(function(参数1,参数2){\n  console.log(参数1，参数2);\n},1000,'参数1','参数2')；\n\n## 高阶函数\n> let a = b => c => b + c;\nconsole.log(a(2)(3)); //5\n\n## setImmediate 不能传递时间\n等待同步代码执行后调用，没有写时间的setTimeout\n```\nsetImmediate(function () {\n    console.log('setImmediate')\n});\nsetTimeout(function () {\n    console.log('setTimeout')\n});\nconsole.log('ok');//默认setTimeout 有可能比 setImmediate 先执行\n```\n## process 代码执行时会开一个进程，代码运行完成后进程就结束了\n```\nsetInterval(function () {\n    //process.pid//当前进程id\n     console.log(process.pid);\n     //process.kill(13140); //杀掉进程\n     //process.exit();//退出进程\n},1000);\n```\n```\nprocess.nextTick(function () {\n    console.log('nextTick')\n});//是异步的函数\n```\n> nextTick > setImmediate > setTimeout\n","source":"_posts/node基础.md","raw":"---\ntitle: node基础（一）\ndate: 2017-04-30 09:58:14\ntags: [node,node基础]\ncategories: node\n---\n> node 默认执行一个‘文件’ 时，就会套一层闭包函数，所有代码都是在个函数中执行的，默认这个函数提供5个参数，这五个参数可以直接使用，不用声明可以直接使用exports,require,module,__filename,dirname\n\n- 1.process 进程对象\n- 2.Buffer 缓冲区，表示内存中的数据（16进制）\n- 3.clearImmediate , setImmediate\n- 4.clearInterval , setInterval\n- 5.clearTimeout , setTimeout\n- 6.console\n<!--more-->\n## console 顺序不定的\n- console.log('log');\n- console.error('error');\n- console.warn('warn');\n- console.info('info');\n\n## setTimeout 异步\n- (1)这里的this是setTimeout 自己\nconsole.log(this);//这里的this被外层的闭包改掉了，是个{}\n(function(){\n  console.log(this);\n})();//这里的this是global\n> 改变this指向的方式\n  - 1.call apply\n  - 2.bind\n  - 3.var that = this;\n  - 4.arrow func 即箭头函数\n\n- (2)setTimeout(function(参数1,参数2){\n  console.log(参数1，参数2);\n},1000,'参数1','参数2')；\n\n## 高阶函数\n> let a = b => c => b + c;\nconsole.log(a(2)(3)); //5\n\n## setImmediate 不能传递时间\n等待同步代码执行后调用，没有写时间的setTimeout\n```\nsetImmediate(function () {\n    console.log('setImmediate')\n});\nsetTimeout(function () {\n    console.log('setTimeout')\n});\nconsole.log('ok');//默认setTimeout 有可能比 setImmediate 先执行\n```\n## process 代码执行时会开一个进程，代码运行完成后进程就结束了\n```\nsetInterval(function () {\n    //process.pid//当前进程id\n     console.log(process.pid);\n     //process.kill(13140); //杀掉进程\n     //process.exit();//退出进程\n},1000);\n```\n```\nprocess.nextTick(function () {\n    console.log('nextTick')\n});//是异步的函数\n```\n> nextTick > setImmediate > setTimeout\n","slug":"node基础","published":1,"updated":"2017-06-02T02:14:47.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12p001hegcrjcle32uq","content":"<blockquote>\n<p>node 默认执行一个‘文件’ 时，就会套一层闭包函数，所有代码都是在个函数中执行的，默认这个函数提供5个参数，这五个参数可以直接使用，不用声明可以直接使用exports,require,module,__filename,dirname</p>\n</blockquote>\n<ul>\n<li>1.process 进程对象</li>\n<li>2.Buffer 缓冲区，表示内存中的数据（16进制）</li>\n<li>3.clearImmediate , setImmediate</li>\n<li>4.clearInterval , setInterval</li>\n<li>5.clearTimeout , setTimeout</li>\n<li>6.console<a id=\"more\"></a>\n<h2 id=\"console-顺序不定的\"><a href=\"#console-顺序不定的\" class=\"headerlink\" title=\"console 顺序不定的\"></a>console 顺序不定的</h2></li>\n<li>console.log(‘log’);</li>\n<li>console.error(‘error’);</li>\n<li>console.warn(‘warn’);</li>\n<li>console.info(‘info’);</li>\n</ul>\n<h2 id=\"setTimeout-异步\"><a href=\"#setTimeout-异步\" class=\"headerlink\" title=\"setTimeout 异步\"></a>setTimeout 异步</h2><ul>\n<li><p>(1)这里的this是setTimeout 自己<br>console.log(this);//这里的this被外层的闭包改掉了，是个{}<br>(function(){<br>console.log(this);<br>})();//这里的this是global</p>\n<blockquote>\n<p>改变this指向的方式</p>\n<ul>\n<li>1.call apply</li>\n<li>2.bind</li>\n<li>3.var that = this;</li>\n<li>4.arrow func 即箭头函数</li>\n</ul>\n</blockquote>\n</li>\n<li><p>(2)setTimeout(function(参数1,参数2){<br>console.log(参数1，参数2);<br>},1000,’参数1’,’参数2’)；</p>\n</li>\n</ul>\n<h2 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h2><blockquote>\n<p>let a = b =&gt; c =&gt; b + c;<br>console.log(a(2)(3)); //5</p>\n</blockquote>\n<h2 id=\"setImmediate-不能传递时间\"><a href=\"#setImmediate-不能传递时间\" class=\"headerlink\" title=\"setImmediate 不能传递时间\"></a>setImmediate 不能传递时间</h2><p>等待同步代码执行后调用，没有写时间的setTimeout<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">setImmediate(function () &#123;</div><div class=\"line\">    console.log(&apos;setImmediate&apos;)</div><div class=\"line\">&#125;);</div><div class=\"line\">setTimeout(function () &#123;</div><div class=\"line\">    console.log(&apos;setTimeout&apos;)</div><div class=\"line\">&#125;);</div><div class=\"line\">console.log(&apos;ok&apos;);//默认setTimeout 有可能比 setImmediate 先执行</div></pre></td></tr></table></figure></p>\n<h2 id=\"process-代码执行时会开一个进程，代码运行完成后进程就结束了\"><a href=\"#process-代码执行时会开一个进程，代码运行完成后进程就结束了\" class=\"headerlink\" title=\"process 代码执行时会开一个进程，代码运行完成后进程就结束了\"></a>process 代码执行时会开一个进程，代码运行完成后进程就结束了</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">setInterval(function () &#123;</div><div class=\"line\">    //process.pid//当前进程id</div><div class=\"line\">     console.log(process.pid);</div><div class=\"line\">     //process.kill(13140); //杀掉进程</div><div class=\"line\">     //process.exit();//退出进程</div><div class=\"line\">&#125;,1000);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">process.nextTick(function () &#123;</div><div class=\"line\">    console.log(&apos;nextTick&apos;)</div><div class=\"line\">&#125;);//是异步的函数</div></pre></td></tr></table></figure>\n<blockquote>\n<p>nextTick &gt; setImmediate &gt; setTimeout</p>\n</blockquote>\n","excerpt":"<blockquote>\n<p>node 默认执行一个‘文件’ 时，就会套一层闭包函数，所有代码都是在个函数中执行的，默认这个函数提供5个参数，这五个参数可以直接使用，不用声明可以直接使用exports,require,module,__filename,dirname</p>\n</blockquote>\n<ul>\n<li>1.process 进程对象</li>\n<li>2.Buffer 缓冲区，表示内存中的数据（16进制）</li>\n<li>3.clearImmediate , setImmediate</li>\n<li>4.clearInterval , setInterval</li>\n<li>5.clearTimeout , setTimeout</li>\n<li>6.console","more":"<h2 id=\"console-顺序不定的\"><a href=\"#console-顺序不定的\" class=\"headerlink\" title=\"console 顺序不定的\"></a>console 顺序不定的</h2></li>\n<li>console.log(‘log’);</li>\n<li>console.error(‘error’);</li>\n<li>console.warn(‘warn’);</li>\n<li>console.info(‘info’);</li>\n</ul>\n<h2 id=\"setTimeout-异步\"><a href=\"#setTimeout-异步\" class=\"headerlink\" title=\"setTimeout 异步\"></a>setTimeout 异步</h2><ul>\n<li><p>(1)这里的this是setTimeout 自己<br>console.log(this);//这里的this被外层的闭包改掉了，是个{}<br>(function(){<br>console.log(this);<br>})();//这里的this是global</p>\n<blockquote>\n<p>改变this指向的方式</p>\n<ul>\n<li>1.call apply</li>\n<li>2.bind</li>\n<li>3.var that = this;</li>\n<li>4.arrow func 即箭头函数</li>\n</ul>\n</blockquote>\n</li>\n<li><p>(2)setTimeout(function(参数1,参数2){<br>console.log(参数1，参数2);<br>},1000,’参数1’,’参数2’)；</p>\n</li>\n</ul>\n<h2 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h2><blockquote>\n<p>let a = b =&gt; c =&gt; b + c;<br>console.log(a(2)(3)); //5</p>\n</blockquote>\n<h2 id=\"setImmediate-不能传递时间\"><a href=\"#setImmediate-不能传递时间\" class=\"headerlink\" title=\"setImmediate 不能传递时间\"></a>setImmediate 不能传递时间</h2><p>等待同步代码执行后调用，没有写时间的setTimeout<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">setImmediate(function () &#123;</div><div class=\"line\">    console.log(&apos;setImmediate&apos;)</div><div class=\"line\">&#125;);</div><div class=\"line\">setTimeout(function () &#123;</div><div class=\"line\">    console.log(&apos;setTimeout&apos;)</div><div class=\"line\">&#125;);</div><div class=\"line\">console.log(&apos;ok&apos;);//默认setTimeout 有可能比 setImmediate 先执行</div></pre></td></tr></table></figure></p>\n<h2 id=\"process-代码执行时会开一个进程，代码运行完成后进程就结束了\"><a href=\"#process-代码执行时会开一个进程，代码运行完成后进程就结束了\" class=\"headerlink\" title=\"process 代码执行时会开一个进程，代码运行完成后进程就结束了\"></a>process 代码执行时会开一个进程，代码运行完成后进程就结束了</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">setInterval(function () &#123;</div><div class=\"line\">    //process.pid//当前进程id</div><div class=\"line\">     console.log(process.pid);</div><div class=\"line\">     //process.kill(13140); //杀掉进程</div><div class=\"line\">     //process.exit();//退出进程</div><div class=\"line\">&#125;,1000);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">process.nextTick(function () &#123;</div><div class=\"line\">    console.log(&apos;nextTick&apos;)</div><div class=\"line\">&#125;);//是异步的函数</div></pre></td></tr></table></figure>\n<blockquote>\n<p>nextTick &gt; setImmediate &gt; setTimeout</p>\n</blockquote>"},{"title":"node模块安装","date":"2017-04-30T03:39:38.000Z","_content":"## 模块\n- 文件模块\n- 内置模块\n- 第三方模块\n### 模块安装\n- npm root -g 可以查看安装到哪里去了\n- 全局安装 -g 在命令行下使用\n- nrm 切换源的工具\n> 默认下载从官方下载npm，nrm可以切换国内数据源\n- 全局安装nrm\n<!--more-->\n```\nnpm install -g nrm\n```\n- 列出所有可用的源\n```\nnrm ls\n```\n- 测试源的速度\n```\nnrm test\n```\n- 添加数据源\n```\nnrm add <源名字> <地址> //\n```\n- 删除数据源\n```\nnrm del <源名字> //\n```\n- 使用数据源\n```\nnrm use <源名字> //\n```\n### 本地安装 （如果切换到淘宝后，以后都是通过淘宝进行安装）\n- 本地安装主要在项目中使用\n> 本地安装会默认安装到node_modules 中,如果没有初始化package.json可能会安装上一node_modules目录\n```\nnpm init -y\nnpm install jquery --save //安装\nnpm uninstall jquery --save //卸载\n```\n\n### 项目依赖\n- 上线需要开发时也需要 mime\n```\n--save 可以简写 -S\n```\n### 开发依赖\n- 上线不需要，开发时需要 webpack gulp\n```\n--save-dev  可以简写 -D\n```\n### 安装依赖\n- 当我们文件上传到github上，会node_module文件忽略掉，别人下载代码后需要执行npm install 将所有依赖进行安装\n```\nnpm install\n```\n### 安装指定版本\n```\nnpm install <依赖名>@版本号\n```\n### 查看指定版本号\n```\nnpm info <依赖名>\n```\n## yarn\n- 也是安装模块的方式，和npm一样。\n```\nnpm install yarn -g\n```\n- 初始化package.json\n```\nyarn init -y\n```\n- 安装模块\n如果是项目依赖则不用标注，如果是开发依赖需要标注（-dev）\n```\nyarn add <依赖名> //项目依赖\nyarn add <依赖名> -dev //开发依赖\n```\n- 删除模块\n```\nyarn remove <依赖名> （-dev）\n```\n- 找回模块\n```\nyarn install\n```\n","source":"_posts/node模块安装.md","raw":"---\ntitle: node模块安装\ndate: 2017-04-30 11:39:38\ntags: [node,node基础]\ncategories: node\n---\n## 模块\n- 文件模块\n- 内置模块\n- 第三方模块\n### 模块安装\n- npm root -g 可以查看安装到哪里去了\n- 全局安装 -g 在命令行下使用\n- nrm 切换源的工具\n> 默认下载从官方下载npm，nrm可以切换国内数据源\n- 全局安装nrm\n<!--more-->\n```\nnpm install -g nrm\n```\n- 列出所有可用的源\n```\nnrm ls\n```\n- 测试源的速度\n```\nnrm test\n```\n- 添加数据源\n```\nnrm add <源名字> <地址> //\n```\n- 删除数据源\n```\nnrm del <源名字> //\n```\n- 使用数据源\n```\nnrm use <源名字> //\n```\n### 本地安装 （如果切换到淘宝后，以后都是通过淘宝进行安装）\n- 本地安装主要在项目中使用\n> 本地安装会默认安装到node_modules 中,如果没有初始化package.json可能会安装上一node_modules目录\n```\nnpm init -y\nnpm install jquery --save //安装\nnpm uninstall jquery --save //卸载\n```\n\n### 项目依赖\n- 上线需要开发时也需要 mime\n```\n--save 可以简写 -S\n```\n### 开发依赖\n- 上线不需要，开发时需要 webpack gulp\n```\n--save-dev  可以简写 -D\n```\n### 安装依赖\n- 当我们文件上传到github上，会node_module文件忽略掉，别人下载代码后需要执行npm install 将所有依赖进行安装\n```\nnpm install\n```\n### 安装指定版本\n```\nnpm install <依赖名>@版本号\n```\n### 查看指定版本号\n```\nnpm info <依赖名>\n```\n## yarn\n- 也是安装模块的方式，和npm一样。\n```\nnpm install yarn -g\n```\n- 初始化package.json\n```\nyarn init -y\n```\n- 安装模块\n如果是项目依赖则不用标注，如果是开发依赖需要标注（-dev）\n```\nyarn add <依赖名> //项目依赖\nyarn add <依赖名> -dev //开发依赖\n```\n- 删除模块\n```\nyarn remove <依赖名> （-dev）\n```\n- 找回模块\n```\nyarn install\n```\n","slug":"node模块安装","published":1,"updated":"2017-06-02T02:14:47.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12s001kegcrcz0dla2w","content":"<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><ul>\n<li>文件模块</li>\n<li>内置模块</li>\n<li>第三方模块<h3 id=\"模块安装\"><a href=\"#模块安装\" class=\"headerlink\" title=\"模块安装\"></a>模块安装</h3></li>\n<li>npm root -g 可以查看安装到哪里去了</li>\n<li>全局安装 -g 在命令行下使用</li>\n<li>nrm 切换源的工具<blockquote>\n<p>默认下载从官方下载npm，nrm可以切换国内数据源</p>\n</blockquote>\n</li>\n<li><p>全局安装nrm</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g nrm</div></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有可用的源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm ls</div></pre></td></tr></table></figure>\n</li>\n<li><p>测试源的速度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm test</div></pre></td></tr></table></figure>\n</li>\n<li><p>添加数据源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm add &lt;源名字&gt; &lt;地址&gt; //</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除数据源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm del &lt;源名字&gt; //</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用数据源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm use &lt;源名字&gt; //</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"本地安装-（如果切换到淘宝后，以后都是通过淘宝进行安装）\"><a href=\"#本地安装-（如果切换到淘宝后，以后都是通过淘宝进行安装）\" class=\"headerlink\" title=\"本地安装 （如果切换到淘宝后，以后都是通过淘宝进行安装）\"></a>本地安装 （如果切换到淘宝后，以后都是通过淘宝进行安装）</h3><ul>\n<li>本地安装主要在项目中使用<blockquote>\n<p>本地安装会默认安装到node_modules 中,如果没有初始化package.json可能会安装上一node_modules目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init -y</div><div class=\"line\">npm install jquery --save //安装</div><div class=\"line\">npm uninstall jquery --save //卸载</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"项目依赖\"><a href=\"#项目依赖\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h3><ul>\n<li>上线需要开发时也需要 mime<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--save 可以简写 -S</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"开发依赖\"><a href=\"#开发依赖\" class=\"headerlink\" title=\"开发依赖\"></a>开发依赖</h3><ul>\n<li>上线不需要，开发时需要 webpack gulp<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--save-dev  可以简写 -D</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><ul>\n<li>当我们文件上传到github上，会node_module文件忽略掉，别人下载代码后需要执行npm install 将所有依赖进行安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装指定版本\"><a href=\"#安装指定版本\" class=\"headerlink\" title=\"安装指定版本\"></a>安装指定版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install &lt;依赖名&gt;@版本号</div></pre></td></tr></table></figure>\n<h3 id=\"查看指定版本号\"><a href=\"#查看指定版本号\" class=\"headerlink\" title=\"查看指定版本号\"></a>查看指定版本号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm info &lt;依赖名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"yarn\"><a href=\"#yarn\" class=\"headerlink\" title=\"yarn\"></a>yarn</h2><ul>\n<li><p>也是安装模块的方式，和npm一样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install yarn -g</div></pre></td></tr></table></figure>\n</li>\n<li><p>初始化package.json</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn init -y</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装模块<br>如果是项目依赖则不用标注，如果是开发依赖需要标注（-dev）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn add &lt;依赖名&gt; //项目依赖</div><div class=\"line\">yarn add &lt;依赖名&gt; -dev //开发依赖</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn remove &lt;依赖名&gt; （-dev）</div></pre></td></tr></table></figure>\n</li>\n<li><p>找回模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn install</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><ul>\n<li>文件模块</li>\n<li>内置模块</li>\n<li>第三方模块<h3 id=\"模块安装\"><a href=\"#模块安装\" class=\"headerlink\" title=\"模块安装\"></a>模块安装</h3></li>\n<li>npm root -g 可以查看安装到哪里去了</li>\n<li>全局安装 -g 在命令行下使用</li>\n<li>nrm 切换源的工具<blockquote>\n<p>默认下载从官方下载npm，nrm可以切换国内数据源</p>\n</blockquote>\n</li>\n<li><p>全局安装nrm</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g nrm</div></pre></td></tr></table></figure>\n</li>\n<li><p>列出所有可用的源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm ls</div></pre></td></tr></table></figure>\n</li>\n<li><p>测试源的速度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm test</div></pre></td></tr></table></figure>\n</li>\n<li><p>添加数据源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm add &lt;源名字&gt; &lt;地址&gt; //</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除数据源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm del &lt;源名字&gt; //</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用数据源</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm use &lt;源名字&gt; //</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"本地安装-（如果切换到淘宝后，以后都是通过淘宝进行安装）\"><a href=\"#本地安装-（如果切换到淘宝后，以后都是通过淘宝进行安装）\" class=\"headerlink\" title=\"本地安装 （如果切换到淘宝后，以后都是通过淘宝进行安装）\"></a>本地安装 （如果切换到淘宝后，以后都是通过淘宝进行安装）</h3><ul>\n<li>本地安装主要在项目中使用<blockquote>\n<p>本地安装会默认安装到node_modules 中,如果没有初始化package.json可能会安装上一node_modules目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init -y</div><div class=\"line\">npm install jquery --save //安装</div><div class=\"line\">npm uninstall jquery --save //卸载</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"项目依赖\"><a href=\"#项目依赖\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h3><ul>\n<li>上线需要开发时也需要 mime<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--save 可以简写 -S</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"开发依赖\"><a href=\"#开发依赖\" class=\"headerlink\" title=\"开发依赖\"></a>开发依赖</h3><ul>\n<li>上线不需要，开发时需要 webpack gulp<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--save-dev  可以简写 -D</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><ul>\n<li>当我们文件上传到github上，会node_module文件忽略掉，别人下载代码后需要执行npm install 将所有依赖进行安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装指定版本\"><a href=\"#安装指定版本\" class=\"headerlink\" title=\"安装指定版本\"></a>安装指定版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install &lt;依赖名&gt;@版本号</div></pre></td></tr></table></figure>\n<h3 id=\"查看指定版本号\"><a href=\"#查看指定版本号\" class=\"headerlink\" title=\"查看指定版本号\"></a>查看指定版本号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm info &lt;依赖名&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"yarn\"><a href=\"#yarn\" class=\"headerlink\" title=\"yarn\"></a>yarn</h2><ul>\n<li><p>也是安装模块的方式，和npm一样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install yarn -g</div></pre></td></tr></table></figure>\n</li>\n<li><p>初始化package.json</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn init -y</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装模块<br>如果是项目依赖则不用标注，如果是开发依赖需要标注（-dev）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn add &lt;依赖名&gt; //项目依赖</div><div class=\"line\">yarn add &lt;依赖名&gt; -dev //开发依赖</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn remove &lt;依赖名&gt; （-dev）</div></pre></td></tr></table></figure>\n</li>\n<li><p>找回模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn install</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"web前端规范","date":"2017-06-02T02:32:42.000Z","_content":"## web前端规范文档\n### 规范目的\n> 使开发流程更加规范\n\n### 通用规范\n>- TAB键使用两个空格代替（WINDOW 下TAB键占四个空格，LINUX 下TAB键占八个空格）。\n- CSS 样式属性或者JavaScript代码后加 “ ; ” 方便压缩工具 “断句”。\n- 文件内容编码统一为UTF-8。\n- CSS、JavaScript 中的非注释类中文字符必须转换成Unicode编码使用，以避免编码错误时乱码显示。\n\n<!--more-->\n\n### 文件规范\n>- 文件名用英文单词，多个单词使用驼峰命名法。\n- 一些浏览器会将含有这些词的作为广告拦截，文件名、ID、CLASS等所有命名避免以下词汇。  \n```\nad 、 ads 、 adv 、 banner 、 sponsor 、 gg 、 guangg 、 guanggao 等\n```\n\n### HTML书写规范\n- 为每一个html页面的第一行添加标准模式（standard mode）的声明，确保在每个浏览器中拥有一致的表现。\n文档类型声明统一为HTML5声明类型。\n```\n<!DOCTYPE html>\n```\n- 字符编码\n通过明确声明字符编码，能够确保浏览器快速容易的判断页面内容的渲染方式。这样做的好处是，可以避免在HTML中使用字符实体标记（character entity），从而全部与文档编码一致（约定一致采用UTF-8）。\n```\n<meta charset=\"UTF-8\">\n```\n- IE兼容模式\nIE支持通过特定的<meta>标签来确定绘制当前页面所应该采用的IE版本。除非有强烈的特殊需求，否则最好设置为 edge mode ，从而通知IE采用其所支持的最新的模式。\n```\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n```\n\n- 元素\n\n\n1. HTML5元素\n  - section 表示文档中的节、区段，可以和 h1 - h6 一起来显示文档结构。\n  - article 表示一块比较独立的内容或者主题内容，块级元素，比如 blog 的内容，报纸的文章。\n  - aside 表示 article 以外的内容，而且应该和 article 有一定的关系，块级元素。\n  - hgroup 表示一个文档、区段（ section ）的标题组合。\n  - header 表示页眉，页头。\n  - footer 表示页脚。\n  - nav 表示导航。\n  - figure 表示以相对独立的或外引的元素，如 img 、 video 。\n  - figcaption 表示 figure 内容的标题。\n\n  ```\n  <!-- hgroup 示例 -->\n  <hgroup>\n    <h1>文档主标题</h1>\n    <h2>文档副标题</h2>\n  </hgroup>\n\n  <!-- figure 示例 -->\n  <figure>\n    <video src=\"mp4\"></video>\n    <figcaption>示例</figcaption>\n  </figure>\n\n  <figure>\n    <img src=\"img\" alt=\"示例图片\" />\n    <figcaption>示例</figcaption>\n  </figure>\n  ```\n\n2. 结构性元素\n  - p 表示段落。只能包含内联元素，不能包含块级元素。\n  - div 本身无特殊含义，可用于布局。几乎可以包含任何元素。\n  - br 表示换行符。\n  - hr 表示水平分割线。\n  - h1 - h6 表示标题。其中 h1 用于表示当前页面最重要的内容的标题。\n  - blockquote 表示引用，可以包含多个段落。请勿纯粹为了缩进进而使用 blockquote ，大部分浏览器默认将 blockquote 渲染为带有左右缩进。\n  - pre 表示一段格式化好的文本。\n\n3. 头部元素\n  - title 每个页面必须有且仅有一个 title 元素。\n  - base 可用场景：首页、频道等大部分连接都为新窗口打开的页面。\n  - link link 用于引入 css 资源时，可省去 media （默认为 all ）和 type （默认为 text/css ）属性。\n  - style type 默认为 text/css ，可以省去。\n  - script type 属性可以省去。不赞成使用 lang 属性。\n  - noscript 在用户代理不支持 JavaScript 的情况下提供说明。\n\n4. 文本元素\n  - a 存在 href 属性时表示链接，无 href 属性但有 name 属性表示锚点。\n  - em / strong em 表示句意强调，加与不加会引起语义变化，可用于表示不同的心情或者语调；strong 表示重要性强调，可用于局部或全局，strong 强调的是重要性，不会改变句意。\n  - abbr 表示缩写。\n  - sub/sup 主要用于数学和化学公式，sup 还可用于脚注。\n  - span 本身无特殊含义。\n  - ins/del 分别表示从文档中增加（插入）和删除。\n\n5. 媒体元素\n  - img 请勿将img元素作为定位布局的工具，其中的 src 属性必须赋值，必要时给 img 元素增加 alt 属性。\n  - object 可以用来插入 Flash 。\n\n6. 列表元素\n  - dl 表示关联列表，dd 是对 dt 的解释，dt 和 dd 的对应关系比较随意，一个 dt 对应多个 dd 、多个 dt 对应一个 dd ，都合法。可用于名词/单词解释、日程列表、站点目录。\n  - ul 表示无序列表。\n  - ol 表示有序列表，可用于排行榜等。\n  - li 表示列表项，必须是 ul / ol 的子元素。\n\n7. 表单元素\n  - 推荐使用 button 代替 input, 但必须声明 type 。\n  - 表单元素的 name 不能设定为 action , enctype , method , novalidate , target , submit 会导致表单提交混乱。\n\n#### 属性顺序\n1. HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。\n  - CLASS\n  - ID 、name\n  - data-*\n  - src 、 for 、 type 、href\n  - title 、alt\n  - aria-* 、 role\n2. CLASS 用于标识高度可复用组件，因此应该排在首位。 ID 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。如：\n```\n<a class=\"...\" id=\"...\" data-modal=\"toggle\" href=\"#\">示例</a>\n<input class=\"form-control\" type=\"text\">\n<img src=\"img\" alt=\"...\">\n```\n\n#### 文件和目录命名约定\n\n1. 一律小写，必须是英文单词或者汉语拼音，以英语单词优先，多个单词以连字符（ - ）连接。只能出现小写英文字母，数字和连字符。\n2. 很多浏览器会将含有这些词的作为广告拦截：ad 、ads 、 adv 、 banner 、 sponsor 、 gg 、guangg 、guanggao 等 页面中尽量避免采用以上词汇来命名。\n3. 该命令规范适用于所有前端维护的内容和相关目录。（ html 、css 、js 、png 、 gif 、jpg 、ico）。\n\n#### 空格/标签/注释\n\n1. 用两个空格来代替制表符（tab）-- 这是唯一能保证在所有环境下获得一致展现的方法。\n2. 嵌套元素应当缩进依次 -- 即两个空格。\n3. 对于属性的定义，确保全部使用双引号，绝不要使用单引号。\n4. 不要省略可选的结束标签，如：</li> , </body> 。\n5. 习惯性书写注释，方便日后维护。\n\n#### 文件编码约定\n\n所有文件统一采用 UTF-8 无 BOM 编码。换行格式为 unix 格式。\n\n#### id 和 class 命名约定\n\n1. id 和 class 的命名基本原则：内容优先，表现为辅。首先根据内容来命名，如：`#header` , `#footer` , `.main-nav` 如根据内容无法找到合适的命名，可以在结合表现进行命名，如：`col-main` , `col-sub` , `col-extra` , `blue-box`\n2. id 和 class 的名称一律小写，多个单词以连接字符连接，如： `main-wrap`\n3. id 和 class 的名称只能出现，小写字母，数字和连字符( - ) ( js 钩子除外)\n4. id 和 class 的名称尽量使用英文单词命名，如确实找不到合适的单词，可以使用拼音，如：`zhidao-com`\n5. 在不影响语意的情况下，id 和 class 的名称可以适当使用缩写，如：`col` , `nav` , `hd` , `bd` , `fd` （ 缩写只用来表示结构，不允许写任何样式 ）。不要自造缩写。\n6. class 对于选中命名 `.selected` ；对于 `:hover` ，不支持的使用 `.hover` ，隐藏使用 `.hide`。\n7. id 和 class 的选择，如果只是用一次，使用 id ，如果使用多次使用 class ，如果需要和 js 交互，使用 id ，如果需要交互并且页面中有大量重复，请参见下一条。\n8. 对于作为 js 钩子的 id 和 class 命名规则以 “J_”开头（ J ，象形钩子的形状 ），后面加上应有的命名，在使用 class 的时候需要放在最前面。如：`class=\"J_tab-content some-mod-content\"`。（注意：钩子，不允许在 css 中定义任何的样式效果 ）。\n9. 很多浏览器会将含有这些词的作为广告拦截：`ad` 、`ads` 、 ` adv` 、 `banner` 、 `sponsor` 、 `gg` 、 `guangg` 、 `guanggao`等 页面中尽量避免采用以上词汇来命名。\n\n#### 文件引用\n\n1. 页面中不允许出现 css 内容（ 包括行内样式和 style ）。\n2. 每个页面中至多包括3个 css 文件，1个产品级1个模块级1个页面级别。\n\n#### 选择器\n\n1. 命名比较短的词，或者缩写的不允许直接定义样式，如：`.title` , `.hd` , `.bd` ,`.body`必须用上级节点进行限定，如：`.recommend-mod .title`。\n\n#### 通用结构\n\n1. 页面中的块采用如下结构\n```\n<div class=\"mod recommend-mod\">\n  <div class=\"hd recommend-title\">Title</div>\n  <div class=\"bd recommend-body\">contents</div>\n  <div class=\"ft recommend-footer\">footer</div>\n</div>\n```\n没有内容的部分可以省略，其中用来表示结构的 `mod` 、`hd` 、`bd` 、 `ft`不允许直接定义样式（避免嵌套带来样式问题），需要定义样式的时候需要另外增加 class 以控制样式如：\n```\n<div class=\"mod recommend-mod\">\n  <div class=\"hd recommend-title\">Title</div\n  <div class=\"bd recommend-body\">contents</div>\n  <div class=\"ft recommend-footer\">footer</div>\n</div>\n```\n当两个以上的结构不存在的时候可以不采用此结构，如：没有 hd 和 ft ， bd 也可以省略。\n","source":"_posts/前端规范.md","raw":"---\ntitle: web前端规范\ndate: 2017-06-02 10:32:42\ntags: [前端,基础]\ncategories: 规范\n---\n## web前端规范文档\n### 规范目的\n> 使开发流程更加规范\n\n### 通用规范\n>- TAB键使用两个空格代替（WINDOW 下TAB键占四个空格，LINUX 下TAB键占八个空格）。\n- CSS 样式属性或者JavaScript代码后加 “ ; ” 方便压缩工具 “断句”。\n- 文件内容编码统一为UTF-8。\n- CSS、JavaScript 中的非注释类中文字符必须转换成Unicode编码使用，以避免编码错误时乱码显示。\n\n<!--more-->\n\n### 文件规范\n>- 文件名用英文单词，多个单词使用驼峰命名法。\n- 一些浏览器会将含有这些词的作为广告拦截，文件名、ID、CLASS等所有命名避免以下词汇。  \n```\nad 、 ads 、 adv 、 banner 、 sponsor 、 gg 、 guangg 、 guanggao 等\n```\n\n### HTML书写规范\n- 为每一个html页面的第一行添加标准模式（standard mode）的声明，确保在每个浏览器中拥有一致的表现。\n文档类型声明统一为HTML5声明类型。\n```\n<!DOCTYPE html>\n```\n- 字符编码\n通过明确声明字符编码，能够确保浏览器快速容易的判断页面内容的渲染方式。这样做的好处是，可以避免在HTML中使用字符实体标记（character entity），从而全部与文档编码一致（约定一致采用UTF-8）。\n```\n<meta charset=\"UTF-8\">\n```\n- IE兼容模式\nIE支持通过特定的<meta>标签来确定绘制当前页面所应该采用的IE版本。除非有强烈的特殊需求，否则最好设置为 edge mode ，从而通知IE采用其所支持的最新的模式。\n```\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n```\n\n- 元素\n\n\n1. HTML5元素\n  - section 表示文档中的节、区段，可以和 h1 - h6 一起来显示文档结构。\n  - article 表示一块比较独立的内容或者主题内容，块级元素，比如 blog 的内容，报纸的文章。\n  - aside 表示 article 以外的内容，而且应该和 article 有一定的关系，块级元素。\n  - hgroup 表示一个文档、区段（ section ）的标题组合。\n  - header 表示页眉，页头。\n  - footer 表示页脚。\n  - nav 表示导航。\n  - figure 表示以相对独立的或外引的元素，如 img 、 video 。\n  - figcaption 表示 figure 内容的标题。\n\n  ```\n  <!-- hgroup 示例 -->\n  <hgroup>\n    <h1>文档主标题</h1>\n    <h2>文档副标题</h2>\n  </hgroup>\n\n  <!-- figure 示例 -->\n  <figure>\n    <video src=\"mp4\"></video>\n    <figcaption>示例</figcaption>\n  </figure>\n\n  <figure>\n    <img src=\"img\" alt=\"示例图片\" />\n    <figcaption>示例</figcaption>\n  </figure>\n  ```\n\n2. 结构性元素\n  - p 表示段落。只能包含内联元素，不能包含块级元素。\n  - div 本身无特殊含义，可用于布局。几乎可以包含任何元素。\n  - br 表示换行符。\n  - hr 表示水平分割线。\n  - h1 - h6 表示标题。其中 h1 用于表示当前页面最重要的内容的标题。\n  - blockquote 表示引用，可以包含多个段落。请勿纯粹为了缩进进而使用 blockquote ，大部分浏览器默认将 blockquote 渲染为带有左右缩进。\n  - pre 表示一段格式化好的文本。\n\n3. 头部元素\n  - title 每个页面必须有且仅有一个 title 元素。\n  - base 可用场景：首页、频道等大部分连接都为新窗口打开的页面。\n  - link link 用于引入 css 资源时，可省去 media （默认为 all ）和 type （默认为 text/css ）属性。\n  - style type 默认为 text/css ，可以省去。\n  - script type 属性可以省去。不赞成使用 lang 属性。\n  - noscript 在用户代理不支持 JavaScript 的情况下提供说明。\n\n4. 文本元素\n  - a 存在 href 属性时表示链接，无 href 属性但有 name 属性表示锚点。\n  - em / strong em 表示句意强调，加与不加会引起语义变化，可用于表示不同的心情或者语调；strong 表示重要性强调，可用于局部或全局，strong 强调的是重要性，不会改变句意。\n  - abbr 表示缩写。\n  - sub/sup 主要用于数学和化学公式，sup 还可用于脚注。\n  - span 本身无特殊含义。\n  - ins/del 分别表示从文档中增加（插入）和删除。\n\n5. 媒体元素\n  - img 请勿将img元素作为定位布局的工具，其中的 src 属性必须赋值，必要时给 img 元素增加 alt 属性。\n  - object 可以用来插入 Flash 。\n\n6. 列表元素\n  - dl 表示关联列表，dd 是对 dt 的解释，dt 和 dd 的对应关系比较随意，一个 dt 对应多个 dd 、多个 dt 对应一个 dd ，都合法。可用于名词/单词解释、日程列表、站点目录。\n  - ul 表示无序列表。\n  - ol 表示有序列表，可用于排行榜等。\n  - li 表示列表项，必须是 ul / ol 的子元素。\n\n7. 表单元素\n  - 推荐使用 button 代替 input, 但必须声明 type 。\n  - 表单元素的 name 不能设定为 action , enctype , method , novalidate , target , submit 会导致表单提交混乱。\n\n#### 属性顺序\n1. HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。\n  - CLASS\n  - ID 、name\n  - data-*\n  - src 、 for 、 type 、href\n  - title 、alt\n  - aria-* 、 role\n2. CLASS 用于标识高度可复用组件，因此应该排在首位。 ID 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。如：\n```\n<a class=\"...\" id=\"...\" data-modal=\"toggle\" href=\"#\">示例</a>\n<input class=\"form-control\" type=\"text\">\n<img src=\"img\" alt=\"...\">\n```\n\n#### 文件和目录命名约定\n\n1. 一律小写，必须是英文单词或者汉语拼音，以英语单词优先，多个单词以连字符（ - ）连接。只能出现小写英文字母，数字和连字符。\n2. 很多浏览器会将含有这些词的作为广告拦截：ad 、ads 、 adv 、 banner 、 sponsor 、 gg 、guangg 、guanggao 等 页面中尽量避免采用以上词汇来命名。\n3. 该命令规范适用于所有前端维护的内容和相关目录。（ html 、css 、js 、png 、 gif 、jpg 、ico）。\n\n#### 空格/标签/注释\n\n1. 用两个空格来代替制表符（tab）-- 这是唯一能保证在所有环境下获得一致展现的方法。\n2. 嵌套元素应当缩进依次 -- 即两个空格。\n3. 对于属性的定义，确保全部使用双引号，绝不要使用单引号。\n4. 不要省略可选的结束标签，如：</li> , </body> 。\n5. 习惯性书写注释，方便日后维护。\n\n#### 文件编码约定\n\n所有文件统一采用 UTF-8 无 BOM 编码。换行格式为 unix 格式。\n\n#### id 和 class 命名约定\n\n1. id 和 class 的命名基本原则：内容优先，表现为辅。首先根据内容来命名，如：`#header` , `#footer` , `.main-nav` 如根据内容无法找到合适的命名，可以在结合表现进行命名，如：`col-main` , `col-sub` , `col-extra` , `blue-box`\n2. id 和 class 的名称一律小写，多个单词以连接字符连接，如： `main-wrap`\n3. id 和 class 的名称只能出现，小写字母，数字和连字符( - ) ( js 钩子除外)\n4. id 和 class 的名称尽量使用英文单词命名，如确实找不到合适的单词，可以使用拼音，如：`zhidao-com`\n5. 在不影响语意的情况下，id 和 class 的名称可以适当使用缩写，如：`col` , `nav` , `hd` , `bd` , `fd` （ 缩写只用来表示结构，不允许写任何样式 ）。不要自造缩写。\n6. class 对于选中命名 `.selected` ；对于 `:hover` ，不支持的使用 `.hover` ，隐藏使用 `.hide`。\n7. id 和 class 的选择，如果只是用一次，使用 id ，如果使用多次使用 class ，如果需要和 js 交互，使用 id ，如果需要交互并且页面中有大量重复，请参见下一条。\n8. 对于作为 js 钩子的 id 和 class 命名规则以 “J_”开头（ J ，象形钩子的形状 ），后面加上应有的命名，在使用 class 的时候需要放在最前面。如：`class=\"J_tab-content some-mod-content\"`。（注意：钩子，不允许在 css 中定义任何的样式效果 ）。\n9. 很多浏览器会将含有这些词的作为广告拦截：`ad` 、`ads` 、 ` adv` 、 `banner` 、 `sponsor` 、 `gg` 、 `guangg` 、 `guanggao`等 页面中尽量避免采用以上词汇来命名。\n\n#### 文件引用\n\n1. 页面中不允许出现 css 内容（ 包括行内样式和 style ）。\n2. 每个页面中至多包括3个 css 文件，1个产品级1个模块级1个页面级别。\n\n#### 选择器\n\n1. 命名比较短的词，或者缩写的不允许直接定义样式，如：`.title` , `.hd` , `.bd` ,`.body`必须用上级节点进行限定，如：`.recommend-mod .title`。\n\n#### 通用结构\n\n1. 页面中的块采用如下结构\n```\n<div class=\"mod recommend-mod\">\n  <div class=\"hd recommend-title\">Title</div>\n  <div class=\"bd recommend-body\">contents</div>\n  <div class=\"ft recommend-footer\">footer</div>\n</div>\n```\n没有内容的部分可以省略，其中用来表示结构的 `mod` 、`hd` 、`bd` 、 `ft`不允许直接定义样式（避免嵌套带来样式问题），需要定义样式的时候需要另外增加 class 以控制样式如：\n```\n<div class=\"mod recommend-mod\">\n  <div class=\"hd recommend-title\">Title</div\n  <div class=\"bd recommend-body\">contents</div>\n  <div class=\"ft recommend-footer\">footer</div>\n</div>\n```\n当两个以上的结构不存在的时候可以不采用此结构，如：没有 hd 和 ft ， bd 也可以省略。\n","slug":"前端规范","published":1,"updated":"2018-03-05T02:50:30.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12u001pegcr8q2ysbxd","content":"<h2 id=\"web前端规范文档\"><a href=\"#web前端规范文档\" class=\"headerlink\" title=\"web前端规范文档\"></a>web前端规范文档</h2><h3 id=\"规范目的\"><a href=\"#规范目的\" class=\"headerlink\" title=\"规范目的\"></a>规范目的</h3><blockquote>\n<p>使开发流程更加规范</p>\n</blockquote>\n<h3 id=\"通用规范\"><a href=\"#通用规范\" class=\"headerlink\" title=\"通用规范\"></a>通用规范</h3><blockquote>\n<ul>\n<li>TAB键使用两个空格代替（WINDOW 下TAB键占四个空格，LINUX 下TAB键占八个空格）。</li>\n<li>CSS 样式属性或者JavaScript代码后加 “ ; ” 方便压缩工具 “断句”。</li>\n<li>文件内容编码统一为UTF-8。</li>\n<li>CSS、JavaScript 中的非注释类中文字符必须转换成Unicode编码使用，以避免编码错误时乱码显示。</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"文件规范\"><a href=\"#文件规范\" class=\"headerlink\" title=\"文件规范\"></a>文件规范</h3><blockquote>\n<ul>\n<li>文件名用英文单词，多个单词使用驼峰命名法。</li>\n<li>一些浏览器会将含有这些词的作为广告拦截，文件名、ID、CLASS等所有命名避免以下词汇。  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ad 、 ads 、 adv 、 banner 、 sponsor 、 gg 、 guangg 、 guanggao 等</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"HTML书写规范\"><a href=\"#HTML书写规范\" class=\"headerlink\" title=\"HTML书写规范\"></a>HTML书写规范</h3><ul>\n<li><p>为每一个html页面的第一行添加标准模式（standard mode）的声明，确保在每个浏览器中拥有一致的表现。<br>文档类型声明统一为HTML5声明类型。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>字符编码<br>通过明确声明字符编码，能够确保浏览器快速容易的判断页面内容的渲染方式。这样做的好处是，可以避免在HTML中使用字符实体标记（character entity），从而全部与文档编码一致（约定一致采用UTF-8）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>IE兼容模式<br>IE支持通过特定的<meta>标签来确定绘制当前页面所应该采用的IE版本。除非有强烈的特殊需求，否则最好设置为 edge mode ，从而通知IE采用其所支持的最新的模式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>元素</p>\n</li>\n</ul>\n<ol>\n<li><p>HTML5元素</p>\n<ul>\n<li>section 表示文档中的节、区段，可以和 h1 - h6 一起来显示文档结构。</li>\n<li>article 表示一块比较独立的内容或者主题内容，块级元素，比如 blog 的内容，报纸的文章。</li>\n<li>aside 表示 article 以外的内容，而且应该和 article 有一定的关系，块级元素。</li>\n<li>hgroup 表示一个文档、区段（ section ）的标题组合。</li>\n<li>header 表示页眉，页头。</li>\n<li>footer 表示页脚。</li>\n<li>nav 表示导航。</li>\n<li>figure 表示以相对独立的或外引的元素，如 img 、 video 。</li>\n<li>figcaption 表示 figure 内容的标题。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- hgroup 示例 --&gt;</div><div class=\"line\">&lt;hgroup&gt;</div><div class=\"line\">  &lt;h1&gt;文档主标题&lt;/h1&gt;</div><div class=\"line\">  &lt;h2&gt;文档副标题&lt;/h2&gt;</div><div class=\"line\">&lt;/hgroup&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- figure 示例 --&gt;</div><div class=\"line\">&lt;figure&gt;</div><div class=\"line\">  &lt;video src=&quot;mp4&quot;&gt;&lt;/video&gt;</div><div class=\"line\">  &lt;figcaption&gt;示例&lt;/figcaption&gt;</div><div class=\"line\">&lt;/figure&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;figure&gt;</div><div class=\"line\">  &lt;img src=&quot;img&quot; alt=&quot;示例图片&quot; /&gt;</div><div class=\"line\">  &lt;figcaption&gt;示例&lt;/figcaption&gt;</div><div class=\"line\">&lt;/figure&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>结构性元素</p>\n<ul>\n<li>p 表示段落。只能包含内联元素，不能包含块级元素。</li>\n<li>div 本身无特殊含义，可用于布局。几乎可以包含任何元素。</li>\n<li>br 表示换行符。</li>\n<li>hr 表示水平分割线。</li>\n<li>h1 - h6 表示标题。其中 h1 用于表示当前页面最重要的内容的标题。</li>\n<li>blockquote 表示引用，可以包含多个段落。请勿纯粹为了缩进进而使用 blockquote ，大部分浏览器默认将 blockquote 渲染为带有左右缩进。</li>\n<li>pre 表示一段格式化好的文本。</li>\n</ul>\n</li>\n<li><p>头部元素</p>\n<ul>\n<li>title 每个页面必须有且仅有一个 title 元素。</li>\n<li>base 可用场景：首页、频道等大部分连接都为新窗口打开的页面。</li>\n<li>link link 用于引入 css 资源时，可省去 media （默认为 all ）和 type （默认为 text/css ）属性。</li>\n<li>style type 默认为 text/css ，可以省去。</li>\n<li>script type 属性可以省去。不赞成使用 lang 属性。</li>\n<li>noscript 在用户代理不支持 JavaScript 的情况下提供说明。</li>\n</ul>\n</li>\n<li><p>文本元素</p>\n<ul>\n<li>a 存在 href 属性时表示链接，无 href 属性但有 name 属性表示锚点。</li>\n<li>em / strong em 表示句意强调，加与不加会引起语义变化，可用于表示不同的心情或者语调；strong 表示重要性强调，可用于局部或全局，strong 强调的是重要性，不会改变句意。</li>\n<li>abbr 表示缩写。</li>\n<li>sub/sup 主要用于数学和化学公式，sup 还可用于脚注。</li>\n<li>span 本身无特殊含义。</li>\n<li>ins/del 分别表示从文档中增加（插入）和删除。</li>\n</ul>\n</li>\n<li><p>媒体元素</p>\n<ul>\n<li>img 请勿将img元素作为定位布局的工具，其中的 src 属性必须赋值，必要时给 img 元素增加 alt 属性。</li>\n<li>object 可以用来插入 Flash 。</li>\n</ul>\n</li>\n<li><p>列表元素</p>\n<ul>\n<li>dl 表示关联列表，dd 是对 dt 的解释，dt 和 dd 的对应关系比较随意，一个 dt 对应多个 dd 、多个 dt 对应一个 dd ，都合法。可用于名词/单词解释、日程列表、站点目录。</li>\n<li>ul 表示无序列表。</li>\n<li>ol 表示有序列表，可用于排行榜等。</li>\n<li>li 表示列表项，必须是 ul / ol 的子元素。</li>\n</ul>\n</li>\n<li><p>表单元素</p>\n<ul>\n<li>推荐使用 button 代替 input, 但必须声明 type 。</li>\n<li>表单元素的 name 不能设定为 action , enctype , method , novalidate , target , submit 会导致表单提交混乱。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"属性顺序\"><a href=\"#属性顺序\" class=\"headerlink\" title=\"属性顺序\"></a>属性顺序</h4><ol>\n<li>HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。<ul>\n<li>CLASS</li>\n<li>ID 、name</li>\n<li>data-*</li>\n<li>src 、 for 、 type 、href</li>\n<li>title 、alt</li>\n<li>aria-* 、 role</li>\n</ul>\n</li>\n<li>CLASS 用于标识高度可复用组件，因此应该排在首位。 ID 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。如：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a class=&quot;...&quot; id=&quot;...&quot; data-modal=&quot;toggle&quot; href=&quot;#&quot;&gt;示例&lt;/a&gt;</div><div class=\"line\">&lt;input class=&quot;form-control&quot; type=&quot;text&quot;&gt;</div><div class=\"line\">&lt;img src=&quot;img&quot; alt=&quot;...&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"文件和目录命名约定\"><a href=\"#文件和目录命名约定\" class=\"headerlink\" title=\"文件和目录命名约定\"></a>文件和目录命名约定</h4><ol>\n<li>一律小写，必须是英文单词或者汉语拼音，以英语单词优先，多个单词以连字符（ - ）连接。只能出现小写英文字母，数字和连字符。</li>\n<li>很多浏览器会将含有这些词的作为广告拦截：ad 、ads 、 adv 、 banner 、 sponsor 、 gg 、guangg 、guanggao 等 页面中尽量避免采用以上词汇来命名。</li>\n<li>该命令规范适用于所有前端维护的内容和相关目录。（ html 、css 、js 、png 、 gif 、jpg 、ico）。</li>\n</ol>\n<h4 id=\"空格-标签-注释\"><a href=\"#空格-标签-注释\" class=\"headerlink\" title=\"空格/标签/注释\"></a>空格/标签/注释</h4><ol>\n<li>用两个空格来代替制表符（tab）– 这是唯一能保证在所有环境下获得一致展现的方法。</li>\n<li>嵌套元素应当缩进依次 – 即两个空格。</li>\n<li>对于属性的定义，确保全部使用双引号，绝不要使用单引号。</li>\n<li>不要省略可选的结束标签，如：</li> ,  。\n<li>习惯性书写注释，方便日后维护。</li>\n</ol>\n<h4 id=\"文件编码约定\"><a href=\"#文件编码约定\" class=\"headerlink\" title=\"文件编码约定\"></a>文件编码约定</h4><p>所有文件统一采用 UTF-8 无 BOM 编码。换行格式为 unix 格式。</p>\n<h4 id=\"id-和-class-命名约定\"><a href=\"#id-和-class-命名约定\" class=\"headerlink\" title=\"id 和 class 命名约定\"></a>id 和 class 命名约定</h4><ol>\n<li>id 和 class 的命名基本原则：内容优先，表现为辅。首先根据内容来命名，如：<code>#header</code> , <code>#footer</code> , <code>.main-nav</code> 如根据内容无法找到合适的命名，可以在结合表现进行命名，如：<code>col-main</code> , <code>col-sub</code> , <code>col-extra</code> , <code>blue-box</code></li>\n<li>id 和 class 的名称一律小写，多个单词以连接字符连接，如： <code>main-wrap</code></li>\n<li>id 和 class 的名称只能出现，小写字母，数字和连字符( - ) ( js 钩子除外)</li>\n<li>id 和 class 的名称尽量使用英文单词命名，如确实找不到合适的单词，可以使用拼音，如：<code>zhidao-com</code></li>\n<li>在不影响语意的情况下，id 和 class 的名称可以适当使用缩写，如：<code>col</code> , <code>nav</code> , <code>hd</code> , <code>bd</code> , <code>fd</code> （ 缩写只用来表示结构，不允许写任何样式 ）。不要自造缩写。</li>\n<li>class 对于选中命名 <code>.selected</code> ；对于 <code>:hover</code> ，不支持的使用 <code>.hover</code> ，隐藏使用 <code>.hide</code>。</li>\n<li>id 和 class 的选择，如果只是用一次，使用 id ，如果使用多次使用 class ，如果需要和 js 交互，使用 id ，如果需要交互并且页面中有大量重复，请参见下一条。</li>\n<li>对于作为 js 钩子的 id 和 class 命名规则以 “J_”开头（ J ，象形钩子的形状 ），后面加上应有的命名，在使用 class 的时候需要放在最前面。如：<code>class=&quot;J_tab-content some-mod-content&quot;</code>。（注意：钩子，不允许在 css 中定义任何的样式效果 ）。</li>\n<li>很多浏览器会将含有这些词的作为广告拦截：<code>ad</code> 、<code>ads</code> 、 <code>adv</code> 、 <code>banner</code> 、 <code>sponsor</code> 、 <code>gg</code> 、 <code>guangg</code> 、 <code>guanggao</code>等 页面中尽量避免采用以上词汇来命名。</li>\n</ol>\n<h4 id=\"文件引用\"><a href=\"#文件引用\" class=\"headerlink\" title=\"文件引用\"></a>文件引用</h4><ol>\n<li>页面中不允许出现 css 内容（ 包括行内样式和 style ）。</li>\n<li>每个页面中至多包括3个 css 文件，1个产品级1个模块级1个页面级别。</li>\n</ol>\n<h4 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h4><ol>\n<li>命名比较短的词，或者缩写的不允许直接定义样式，如：<code>.title</code> , <code>.hd</code> , <code>.bd</code> ,<code>.body</code>必须用上级节点进行限定，如：<code>.recommend-mod .title</code>。</li>\n</ol>\n<h4 id=\"通用结构\"><a href=\"#通用结构\" class=\"headerlink\" title=\"通用结构\"></a>通用结构</h4><ol>\n<li>页面中的块采用如下结构<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;mod recommend-mod&quot;&gt;</div><div class=\"line\">  &lt;div class=&quot;hd recommend-title&quot;&gt;Title&lt;/div&gt;</div><div class=\"line\">  &lt;div class=&quot;bd recommend-body&quot;&gt;contents&lt;/div&gt;</div><div class=\"line\">  &lt;div class=&quot;ft recommend-footer&quot;&gt;footer&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>没有内容的部分可以省略，其中用来表示结构的 <code>mod</code> 、<code>hd</code> 、<code>bd</code> 、 <code>ft</code>不允许直接定义样式（避免嵌套带来样式问题），需要定义样式的时候需要另外增加 class 以控制样式如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;mod recommend-mod&quot;&gt;</div><div class=\"line\">  &lt;div class=&quot;hd recommend-title&quot;&gt;Title&lt;/div</div><div class=\"line\">  &lt;div class=&quot;bd recommend-body&quot;&gt;contents&lt;/div&gt;</div><div class=\"line\">  &lt;div class=&quot;ft recommend-footer&quot;&gt;footer&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>当两个以上的结构不存在的时候可以不采用此结构，如：没有 hd 和 ft ， bd 也可以省略。</p>\n","excerpt":"<h2 id=\"web前端规范文档\"><a href=\"#web前端规范文档\" class=\"headerlink\" title=\"web前端规范文档\"></a>web前端规范文档</h2><h3 id=\"规范目的\"><a href=\"#规范目的\" class=\"headerlink\" title=\"规范目的\"></a>规范目的</h3><blockquote>\n<p>使开发流程更加规范</p>\n</blockquote>\n<h3 id=\"通用规范\"><a href=\"#通用规范\" class=\"headerlink\" title=\"通用规范\"></a>通用规范</h3><blockquote>\n<ul>\n<li>TAB键使用两个空格代替（WINDOW 下TAB键占四个空格，LINUX 下TAB键占八个空格）。</li>\n<li>CSS 样式属性或者JavaScript代码后加 “ ; ” 方便压缩工具 “断句”。</li>\n<li>文件内容编码统一为UTF-8。</li>\n<li>CSS、JavaScript 中的非注释类中文字符必须转换成Unicode编码使用，以避免编码错误时乱码显示。</li>\n</ul>\n</blockquote>","more":"<h3 id=\"文件规范\"><a href=\"#文件规范\" class=\"headerlink\" title=\"文件规范\"></a>文件规范</h3><blockquote>\n<ul>\n<li>文件名用英文单词，多个单词使用驼峰命名法。</li>\n<li>一些浏览器会将含有这些词的作为广告拦截，文件名、ID、CLASS等所有命名避免以下词汇。  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ad 、 ads 、 adv 、 banner 、 sponsor 、 gg 、 guangg 、 guanggao 等</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"HTML书写规范\"><a href=\"#HTML书写规范\" class=\"headerlink\" title=\"HTML书写规范\"></a>HTML书写规范</h3><ul>\n<li><p>为每一个html页面的第一行添加标准模式（standard mode）的声明，确保在每个浏览器中拥有一致的表现。<br>文档类型声明统一为HTML5声明类型。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>字符编码<br>通过明确声明字符编码，能够确保浏览器快速容易的判断页面内容的渲染方式。这样做的好处是，可以避免在HTML中使用字符实体标记（character entity），从而全部与文档编码一致（约定一致采用UTF-8）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>IE兼容模式<br>IE支持通过特定的<meta>标签来确定绘制当前页面所应该采用的IE版本。除非有强烈的特殊需求，否则最好设置为 edge mode ，从而通知IE采用其所支持的最新的模式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot; /&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>元素</p>\n</li>\n</ul>\n<ol>\n<li><p>HTML5元素</p>\n<ul>\n<li>section 表示文档中的节、区段，可以和 h1 - h6 一起来显示文档结构。</li>\n<li>article 表示一块比较独立的内容或者主题内容，块级元素，比如 blog 的内容，报纸的文章。</li>\n<li>aside 表示 article 以外的内容，而且应该和 article 有一定的关系，块级元素。</li>\n<li>hgroup 表示一个文档、区段（ section ）的标题组合。</li>\n<li>header 表示页眉，页头。</li>\n<li>footer 表示页脚。</li>\n<li>nav 表示导航。</li>\n<li>figure 表示以相对独立的或外引的元素，如 img 、 video 。</li>\n<li>figcaption 表示 figure 内容的标题。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- hgroup 示例 --&gt;</div><div class=\"line\">&lt;hgroup&gt;</div><div class=\"line\">  &lt;h1&gt;文档主标题&lt;/h1&gt;</div><div class=\"line\">  &lt;h2&gt;文档副标题&lt;/h2&gt;</div><div class=\"line\">&lt;/hgroup&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- figure 示例 --&gt;</div><div class=\"line\">&lt;figure&gt;</div><div class=\"line\">  &lt;video src=&quot;mp4&quot;&gt;&lt;/video&gt;</div><div class=\"line\">  &lt;figcaption&gt;示例&lt;/figcaption&gt;</div><div class=\"line\">&lt;/figure&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;figure&gt;</div><div class=\"line\">  &lt;img src=&quot;img&quot; alt=&quot;示例图片&quot; /&gt;</div><div class=\"line\">  &lt;figcaption&gt;示例&lt;/figcaption&gt;</div><div class=\"line\">&lt;/figure&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>结构性元素</p>\n<ul>\n<li>p 表示段落。只能包含内联元素，不能包含块级元素。</li>\n<li>div 本身无特殊含义，可用于布局。几乎可以包含任何元素。</li>\n<li>br 表示换行符。</li>\n<li>hr 表示水平分割线。</li>\n<li>h1 - h6 表示标题。其中 h1 用于表示当前页面最重要的内容的标题。</li>\n<li>blockquote 表示引用，可以包含多个段落。请勿纯粹为了缩进进而使用 blockquote ，大部分浏览器默认将 blockquote 渲染为带有左右缩进。</li>\n<li>pre 表示一段格式化好的文本。</li>\n</ul>\n</li>\n<li><p>头部元素</p>\n<ul>\n<li>title 每个页面必须有且仅有一个 title 元素。</li>\n<li>base 可用场景：首页、频道等大部分连接都为新窗口打开的页面。</li>\n<li>link link 用于引入 css 资源时，可省去 media （默认为 all ）和 type （默认为 text/css ）属性。</li>\n<li>style type 默认为 text/css ，可以省去。</li>\n<li>script type 属性可以省去。不赞成使用 lang 属性。</li>\n<li>noscript 在用户代理不支持 JavaScript 的情况下提供说明。</li>\n</ul>\n</li>\n<li><p>文本元素</p>\n<ul>\n<li>a 存在 href 属性时表示链接，无 href 属性但有 name 属性表示锚点。</li>\n<li>em / strong em 表示句意强调，加与不加会引起语义变化，可用于表示不同的心情或者语调；strong 表示重要性强调，可用于局部或全局，strong 强调的是重要性，不会改变句意。</li>\n<li>abbr 表示缩写。</li>\n<li>sub/sup 主要用于数学和化学公式，sup 还可用于脚注。</li>\n<li>span 本身无特殊含义。</li>\n<li>ins/del 分别表示从文档中增加（插入）和删除。</li>\n</ul>\n</li>\n<li><p>媒体元素</p>\n<ul>\n<li>img 请勿将img元素作为定位布局的工具，其中的 src 属性必须赋值，必要时给 img 元素增加 alt 属性。</li>\n<li>object 可以用来插入 Flash 。</li>\n</ul>\n</li>\n<li><p>列表元素</p>\n<ul>\n<li>dl 表示关联列表，dd 是对 dt 的解释，dt 和 dd 的对应关系比较随意，一个 dt 对应多个 dd 、多个 dt 对应一个 dd ，都合法。可用于名词/单词解释、日程列表、站点目录。</li>\n<li>ul 表示无序列表。</li>\n<li>ol 表示有序列表，可用于排行榜等。</li>\n<li>li 表示列表项，必须是 ul / ol 的子元素。</li>\n</ul>\n</li>\n<li><p>表单元素</p>\n<ul>\n<li>推荐使用 button 代替 input, 但必须声明 type 。</li>\n<li>表单元素的 name 不能设定为 action , enctype , method , novalidate , target , submit 会导致表单提交混乱。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"属性顺序\"><a href=\"#属性顺序\" class=\"headerlink\" title=\"属性顺序\"></a>属性顺序</h4><ol>\n<li>HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。<ul>\n<li>CLASS</li>\n<li>ID 、name</li>\n<li>data-*</li>\n<li>src 、 for 、 type 、href</li>\n<li>title 、alt</li>\n<li>aria-* 、 role</li>\n</ul>\n</li>\n<li>CLASS 用于标识高度可复用组件，因此应该排在首位。 ID 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。如：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a class=&quot;...&quot; id=&quot;...&quot; data-modal=&quot;toggle&quot; href=&quot;#&quot;&gt;示例&lt;/a&gt;</div><div class=\"line\">&lt;input class=&quot;form-control&quot; type=&quot;text&quot;&gt;</div><div class=\"line\">&lt;img src=&quot;img&quot; alt=&quot;...&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"文件和目录命名约定\"><a href=\"#文件和目录命名约定\" class=\"headerlink\" title=\"文件和目录命名约定\"></a>文件和目录命名约定</h4><ol>\n<li>一律小写，必须是英文单词或者汉语拼音，以英语单词优先，多个单词以连字符（ - ）连接。只能出现小写英文字母，数字和连字符。</li>\n<li>很多浏览器会将含有这些词的作为广告拦截：ad 、ads 、 adv 、 banner 、 sponsor 、 gg 、guangg 、guanggao 等 页面中尽量避免采用以上词汇来命名。</li>\n<li>该命令规范适用于所有前端维护的内容和相关目录。（ html 、css 、js 、png 、 gif 、jpg 、ico）。</li>\n</ol>\n<h4 id=\"空格-标签-注释\"><a href=\"#空格-标签-注释\" class=\"headerlink\" title=\"空格/标签/注释\"></a>空格/标签/注释</h4><ol>\n<li>用两个空格来代替制表符（tab）– 这是唯一能保证在所有环境下获得一致展现的方法。</li>\n<li>嵌套元素应当缩进依次 – 即两个空格。</li>\n<li>对于属性的定义，确保全部使用双引号，绝不要使用单引号。</li>\n<li>不要省略可选的结束标签，如：</li> , </body> 。</li>\n<li>习惯性书写注释，方便日后维护。</li>\n</ol>\n<h4 id=\"文件编码约定\"><a href=\"#文件编码约定\" class=\"headerlink\" title=\"文件编码约定\"></a>文件编码约定</h4><p>所有文件统一采用 UTF-8 无 BOM 编码。换行格式为 unix 格式。</p>\n<h4 id=\"id-和-class-命名约定\"><a href=\"#id-和-class-命名约定\" class=\"headerlink\" title=\"id 和 class 命名约定\"></a>id 和 class 命名约定</h4><ol>\n<li>id 和 class 的命名基本原则：内容优先，表现为辅。首先根据内容来命名，如：<code>#header</code> , <code>#footer</code> , <code>.main-nav</code> 如根据内容无法找到合适的命名，可以在结合表现进行命名，如：<code>col-main</code> , <code>col-sub</code> , <code>col-extra</code> , <code>blue-box</code></li>\n<li>id 和 class 的名称一律小写，多个单词以连接字符连接，如： <code>main-wrap</code></li>\n<li>id 和 class 的名称只能出现，小写字母，数字和连字符( - ) ( js 钩子除外)</li>\n<li>id 和 class 的名称尽量使用英文单词命名，如确实找不到合适的单词，可以使用拼音，如：<code>zhidao-com</code></li>\n<li>在不影响语意的情况下，id 和 class 的名称可以适当使用缩写，如：<code>col</code> , <code>nav</code> , <code>hd</code> , <code>bd</code> , <code>fd</code> （ 缩写只用来表示结构，不允许写任何样式 ）。不要自造缩写。</li>\n<li>class 对于选中命名 <code>.selected</code> ；对于 <code>:hover</code> ，不支持的使用 <code>.hover</code> ，隐藏使用 <code>.hide</code>。</li>\n<li>id 和 class 的选择，如果只是用一次，使用 id ，如果使用多次使用 class ，如果需要和 js 交互，使用 id ，如果需要交互并且页面中有大量重复，请参见下一条。</li>\n<li>对于作为 js 钩子的 id 和 class 命名规则以 “J_”开头（ J ，象形钩子的形状 ），后面加上应有的命名，在使用 class 的时候需要放在最前面。如：<code>class=&quot;J_tab-content some-mod-content&quot;</code>。（注意：钩子，不允许在 css 中定义任何的样式效果 ）。</li>\n<li>很多浏览器会将含有这些词的作为广告拦截：<code>ad</code> 、<code>ads</code> 、 <code>adv</code> 、 <code>banner</code> 、 <code>sponsor</code> 、 <code>gg</code> 、 <code>guangg</code> 、 <code>guanggao</code>等 页面中尽量避免采用以上词汇来命名。</li>\n</ol>\n<h4 id=\"文件引用\"><a href=\"#文件引用\" class=\"headerlink\" title=\"文件引用\"></a>文件引用</h4><ol>\n<li>页面中不允许出现 css 内容（ 包括行内样式和 style ）。</li>\n<li>每个页面中至多包括3个 css 文件，1个产品级1个模块级1个页面级别。</li>\n</ol>\n<h4 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h4><ol>\n<li>命名比较短的词，或者缩写的不允许直接定义样式，如：<code>.title</code> , <code>.hd</code> , <code>.bd</code> ,<code>.body</code>必须用上级节点进行限定，如：<code>.recommend-mod .title</code>。</li>\n</ol>\n<h4 id=\"通用结构\"><a href=\"#通用结构\" class=\"headerlink\" title=\"通用结构\"></a>通用结构</h4><ol>\n<li>页面中的块采用如下结构<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;mod recommend-mod&quot;&gt;</div><div class=\"line\">  &lt;div class=&quot;hd recommend-title&quot;&gt;Title&lt;/div&gt;</div><div class=\"line\">  &lt;div class=&quot;bd recommend-body&quot;&gt;contents&lt;/div&gt;</div><div class=\"line\">  &lt;div class=&quot;ft recommend-footer&quot;&gt;footer&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>没有内容的部分可以省略，其中用来表示结构的 <code>mod</code> 、<code>hd</code> 、<code>bd</code> 、 <code>ft</code>不允许直接定义样式（避免嵌套带来样式问题），需要定义样式的时候需要另外增加 class 以控制样式如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;mod recommend-mod&quot;&gt;</div><div class=\"line\">  &lt;div class=&quot;hd recommend-title&quot;&gt;Title&lt;/div</div><div class=\"line\">  &lt;div class=&quot;bd recommend-body&quot;&gt;contents&lt;/div&gt;</div><div class=\"line\">  &lt;div class=&quot;ft recommend-footer&quot;&gt;footer&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>当两个以上的结构不存在的时候可以不采用此结构，如：没有 hd 和 ft ， bd 也可以省略。</p>"},{"title":"发布node模块包","date":"2017-04-30T07:06:53.000Z","_content":"## 发布自己的包\n- 多个js文件组成的就叫包\n- 通常都存在一个入口文件\n- 发布这个文件夹（发布的包不能和已经存在的包相同）\n> 包中必须要有package.json文件\n\n## 向npm官网发包\n- 切换到官方npm\n<!--more-->\n```\nnrm use npm\n```\n- 如果有账号表示登录，没有账号表示新建账号\n```\nnpm addUser\n```\n- 发布\n```\nnpm publish\n```\n- 删除模块\n```\nnpm unpublish <模块名>@<版本号>\n```\n- 查询是否登录过\n```\nnpm whoami\n```\n## 使用idoc进行文档展示\n\n- 安装idoc\n```\nnpm install idoc -g\n```\n","source":"_posts/发布node模块包.md","raw":"---\ntitle: 发布node模块包\ndate: 2017-04-30 15:06:53\ntags: [node,node基础]\ncategories: node\n---\n## 发布自己的包\n- 多个js文件组成的就叫包\n- 通常都存在一个入口文件\n- 发布这个文件夹（发布的包不能和已经存在的包相同）\n> 包中必须要有package.json文件\n\n## 向npm官网发包\n- 切换到官方npm\n<!--more-->\n```\nnrm use npm\n```\n- 如果有账号表示登录，没有账号表示新建账号\n```\nnpm addUser\n```\n- 发布\n```\nnpm publish\n```\n- 删除模块\n```\nnpm unpublish <模块名>@<版本号>\n```\n- 查询是否登录过\n```\nnpm whoami\n```\n## 使用idoc进行文档展示\n\n- 安装idoc\n```\nnpm install idoc -g\n```\n","slug":"发布node模块包","published":1,"updated":"2017-06-02T02:14:47.230Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne12v001regcryjxnkcmz","content":"<h2 id=\"发布自己的包\"><a href=\"#发布自己的包\" class=\"headerlink\" title=\"发布自己的包\"></a>发布自己的包</h2><ul>\n<li>多个js文件组成的就叫包</li>\n<li>通常都存在一个入口文件</li>\n<li>发布这个文件夹（发布的包不能和已经存在的包相同）<blockquote>\n<p>包中必须要有package.json文件</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"向npm官网发包\"><a href=\"#向npm官网发包\" class=\"headerlink\" title=\"向npm官网发包\"></a>向npm官网发包</h2><ul>\n<li><p>切换到官方npm</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm use npm</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果有账号表示登录，没有账号表示新建账号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm addUser</div></pre></td></tr></table></figure>\n</li>\n<li><p>发布</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm unpublish &lt;模块名&gt;@&lt;版本号&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>查询是否登录过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm whoami</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"使用idoc进行文档展示\"><a href=\"#使用idoc进行文档展示\" class=\"headerlink\" title=\"使用idoc进行文档展示\"></a>使用idoc进行文档展示</h2><ul>\n<li>安装idoc<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install idoc -g</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"<h2 id=\"发布自己的包\"><a href=\"#发布自己的包\" class=\"headerlink\" title=\"发布自己的包\"></a>发布自己的包</h2><ul>\n<li>多个js文件组成的就叫包</li>\n<li>通常都存在一个入口文件</li>\n<li>发布这个文件夹（发布的包不能和已经存在的包相同）<blockquote>\n<p>包中必须要有package.json文件</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"向npm官网发包\"><a href=\"#向npm官网发包\" class=\"headerlink\" title=\"向npm官网发包\"></a>向npm官网发包</h2><ul>\n<li><p>切换到官方npm</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nrm use npm</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果有账号表示登录，没有账号表示新建账号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm addUser</div></pre></td></tr></table></figure>\n</li>\n<li><p>发布</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm unpublish &lt;模块名&gt;@&lt;版本号&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>查询是否登录过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm whoami</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"使用idoc进行文档展示\"><a href=\"#使用idoc进行文档展示\" class=\"headerlink\" title=\"使用idoc进行文档展示\"></a>使用idoc进行文档展示</h2><ul>\n<li>安装idoc<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install idoc -g</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"基于uba前端mock代理","date":"2018-03-05T02:28:40.000Z","_content":"## mock 代理\n\n>1. uba 自带 mock 代理插件，默认配置为开启代理功能。\n>2. 数据模拟功能对开发环境有效，生产环境无效。\n\n#### 1.数据模拟配置\n- 数据模拟功能默认开启。\n> `uba.config.js` 配置文件相关配置项\n```\n// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效\nconst proxyConfig = [{\n  enable : false, // false -> 关闭代理，数据模拟开始\n  router: \"/\", // 接口地址路由\n  url: \"cnodejs.org\",\n  options : {\n    filter : function(req,res){\n      return (req.url.indexOf(\"webpack_hmr\") > -1 ? false : true);\n    }\n  }\n}];\n```\n<!--more-->\n- 配置 mock 配置文件\n> 模板根目录下`uba.mock.js`文件为 mock 配置文件。\n```\n/*\n * 配置数据模拟\n*/\n\nmodule.exports = {\n  \"GET\": [{ // 需要模拟的 get 请求\n    \"/User/Get\": \"./mock/api/user/get.json\"\n  }],\n  \"POST\": [{ // 需要模拟的 post 请求\n    \"/User/Post\": \"./mock/api/user/post.json\"\n  }]\n}\n```\n#### 2.代理配置\n> 1.mock 代理主要解决跨域请求的问题。\n>\n> 2.开启代理服务，需要前端开发环境和后台开发环境在相同网络当中（即相同局域网内同一网段）。并能正常 `ping` 通。\n\n> `uba.config.js` 配置文件相关配置项\n\n```\n// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效\nconst proxyConfig = [{\n  enable : true, // true -> 开启代理，数据模拟失效\n  router: \"/\", // 接口地址路由\n  url: \"192.168.137.1:8080\", // 设置后端接口服务ip地址\n  options : {\n    filter : function(req,res){\n      return (req.url.indexOf(\"webpack_hmr\") > -1 ? false : true);\n    }\n  }\n}];\n```","source":"_posts/基于uba前端mock代理.md","raw":"---\ntitle: 基于uba前端mock代理\ndate: 2018-03-05 10:28:40\ntags: [uba,mock]\ncategories: node\n---\n## mock 代理\n\n>1. uba 自带 mock 代理插件，默认配置为开启代理功能。\n>2. 数据模拟功能对开发环境有效，生产环境无效。\n\n#### 1.数据模拟配置\n- 数据模拟功能默认开启。\n> `uba.config.js` 配置文件相关配置项\n```\n// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效\nconst proxyConfig = [{\n  enable : false, // false -> 关闭代理，数据模拟开始\n  router: \"/\", // 接口地址路由\n  url: \"cnodejs.org\",\n  options : {\n    filter : function(req,res){\n      return (req.url.indexOf(\"webpack_hmr\") > -1 ? false : true);\n    }\n  }\n}];\n```\n<!--more-->\n- 配置 mock 配置文件\n> 模板根目录下`uba.mock.js`文件为 mock 配置文件。\n```\n/*\n * 配置数据模拟\n*/\n\nmodule.exports = {\n  \"GET\": [{ // 需要模拟的 get 请求\n    \"/User/Get\": \"./mock/api/user/get.json\"\n  }],\n  \"POST\": [{ // 需要模拟的 post 请求\n    \"/User/Post\": \"./mock/api/user/post.json\"\n  }]\n}\n```\n#### 2.代理配置\n> 1.mock 代理主要解决跨域请求的问题。\n>\n> 2.开启代理服务，需要前端开发环境和后台开发环境在相同网络当中（即相同局域网内同一网段）。并能正常 `ping` 通。\n\n> `uba.config.js` 配置文件相关配置项\n\n```\n// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效\nconst proxyConfig = [{\n  enable : true, // true -> 开启代理，数据模拟失效\n  router: \"/\", // 接口地址路由\n  url: \"192.168.137.1:8080\", // 设置后端接口服务ip地址\n  options : {\n    filter : function(req,res){\n      return (req.url.indexOf(\"webpack_hmr\") > -1 ? false : true);\n    }\n  }\n}];\n```","slug":"基于uba前端mock代理","published":1,"updated":"2018-03-05T02:31:31.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne132001vegcrcjnq17rf","content":"<h2 id=\"mock-代理\"><a href=\"#mock-代理\" class=\"headerlink\" title=\"mock 代理\"></a>mock 代理</h2><blockquote>\n<ol>\n<li>uba 自带 mock 代理插件，默认配置为开启代理功能。</li>\n<li>数据模拟功能对开发环境有效，生产环境无效。</li>\n</ol>\n</blockquote>\n<h4 id=\"1-数据模拟配置\"><a href=\"#1-数据模拟配置\" class=\"headerlink\" title=\"1.数据模拟配置\"></a>1.数据模拟配置</h4><ul>\n<li>数据模拟功能默认开启。<blockquote>\n<p><code>uba.config.js</code> 配置文件相关配置项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效</div><div class=\"line\">const proxyConfig = [&#123;</div><div class=\"line\">  enable : false, // false -&gt; 关闭代理，数据模拟开始</div><div class=\"line\">  router: &quot;/&quot;, // 接口地址路由</div><div class=\"line\">  url: &quot;cnodejs.org&quot;,</div><div class=\"line\">  options : &#123;</div><div class=\"line\">    filter : function(req,res)&#123;</div><div class=\"line\">      return (req.url.indexOf(&quot;webpack_hmr&quot;) &gt; -1 ? false : true);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;];</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>配置 mock 配置文件<blockquote>\n<p>模板根目录下<code>uba.mock.js</code>文件为 mock 配置文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\"> * 配置数据模拟</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">module.exports = &#123;</div><div class=\"line\">  &quot;GET&quot;: [&#123; // 需要模拟的 get 请求</div><div class=\"line\">    &quot;/User/Get&quot;: &quot;./mock/api/user/get.json&quot;</div><div class=\"line\">  &#125;],</div><div class=\"line\">  &quot;POST&quot;: [&#123; // 需要模拟的 post 请求</div><div class=\"line\">    &quot;/User/Post&quot;: &quot;./mock/api/user/post.json&quot;</div><div class=\"line\">  &#125;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"2-代理配置\"><a href=\"#2-代理配置\" class=\"headerlink\" title=\"2.代理配置\"></a>2.代理配置</h4><blockquote>\n<p>1.mock 代理主要解决跨域请求的问题。</p>\n<p>2.开启代理服务，需要前端开发环境和后台开发环境在相同网络当中（即相同局域网内同一网段）。并能正常 <code>ping</code> 通。</p>\n<p><code>uba.config.js</code> 配置文件相关配置项</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效</div><div class=\"line\">const proxyConfig = [&#123;</div><div class=\"line\">  enable : true, // true -&gt; 开启代理，数据模拟失效</div><div class=\"line\">  router: &quot;/&quot;, // 接口地址路由</div><div class=\"line\">  url: &quot;192.168.137.1:8080&quot;, // 设置后端接口服务ip地址</div><div class=\"line\">  options : &#123;</div><div class=\"line\">    filter : function(req,res)&#123;</div><div class=\"line\">      return (req.url.indexOf(&quot;webpack_hmr&quot;) &gt; -1 ? false : true);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;];</div></pre></td></tr></table></figure>","excerpt":"<h2 id=\"mock-代理\"><a href=\"#mock-代理\" class=\"headerlink\" title=\"mock 代理\"></a>mock 代理</h2><blockquote>\n<ol>\n<li>uba 自带 mock 代理插件，默认配置为开启代理功能。</li>\n<li>数据模拟功能对开发环境有效，生产环境无效。</li>\n</ol>\n</blockquote>\n<h4 id=\"1-数据模拟配置\"><a href=\"#1-数据模拟配置\" class=\"headerlink\" title=\"1.数据模拟配置\"></a>1.数据模拟配置</h4><ul>\n<li>数据模拟功能默认开启。<blockquote>\n<p><code>uba.config.js</code> 配置文件相关配置项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效</div><div class=\"line\">const proxyConfig = [&#123;</div><div class=\"line\">  enable : false, // false -&gt; 关闭代理，数据模拟开始</div><div class=\"line\">  router: &quot;/&quot;, // 接口地址路由</div><div class=\"line\">  url: &quot;cnodejs.org&quot;,</div><div class=\"line\">  options : &#123;</div><div class=\"line\">    filter : function(req,res)&#123;</div><div class=\"line\">      return (req.url.indexOf(&quot;webpack_hmr&quot;) &gt; -1 ? false : true);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;];</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>","more":"<ul>\n<li>配置 mock 配置文件<blockquote>\n<p>模板根目录下<code>uba.mock.js</code>文件为 mock 配置文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\"> * 配置数据模拟</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">module.exports = &#123;</div><div class=\"line\">  &quot;GET&quot;: [&#123; // 需要模拟的 get 请求</div><div class=\"line\">    &quot;/User/Get&quot;: &quot;./mock/api/user/get.json&quot;</div><div class=\"line\">  &#125;],</div><div class=\"line\">  &quot;POST&quot;: [&#123; // 需要模拟的 post 请求</div><div class=\"line\">    &quot;/User/Post&quot;: &quot;./mock/api/user/post.json&quot;</div><div class=\"line\">  &#125;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"2-代理配置\"><a href=\"#2-代理配置\" class=\"headerlink\" title=\"2.代理配置\"></a>2.代理配置</h4><blockquote>\n<p>1.mock 代理主要解决跨域请求的问题。</p>\n<p>2.开启代理服务，需要前端开发环境和后台开发环境在相同网络当中（即相同局域网内同一网段）。并能正常 <code>ping</code> 通。</p>\n<p><code>uba.config.js</code> 配置文件相关配置项</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 代理模式切换，enable:true启用代理，数据模拟失效.只对开发环境有效</div><div class=\"line\">const proxyConfig = [&#123;</div><div class=\"line\">  enable : true, // true -&gt; 开启代理，数据模拟失效</div><div class=\"line\">  router: &quot;/&quot;, // 接口地址路由</div><div class=\"line\">  url: &quot;192.168.137.1:8080&quot;, // 设置后端接口服务ip地址</div><div class=\"line\">  options : &#123;</div><div class=\"line\">    filter : function(req,res)&#123;</div><div class=\"line\">      return (req.url.indexOf(&quot;webpack_hmr&quot;) &gt; -1 ? false : true);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;];</div></pre></td></tr></table></figure>"},{"title":"前端开发环境及工具","date":"2018-03-05T02:37:27.000Z","_content":"## 前端开发环境及工具\n\n### 内容目录\n\n[toc]\n\n---\n### 基本工具及环境\n\n> 前端开发基本工具整理。\n\n####  一、浏览器\n\n1. Chrome    [点此下载](http://www.google.cn/chrome/browser/desktop/index.html)\n\n2. Firefox   [点此下载](http://www.firefox.com.cn/)\n\n<!--more-->\n#### 二、编辑器\n\n1. VScode [点此下载](https://code.visualstudio.com/)\n\n<!--\n2. Webstorm [点此下载](http://www.jetbrains.com/webstorm/)\n\n3. Sublime [点此下载](https://www.sublimetext.com/3)\n\n4. Atom [点此下载](https://atom.io/)\n-->\n\n#### 三、运行环境\n\n1. 版本控制工具 Git [点此下载](https://git-scm.com/) [安装步骤](https://jingyan.baidu.com/article/020278117cbe921bcc9ce51c.html)\n\n2. 前端运行环境 Node (LTS) [点此下载](https://nodejs.org/en/)\n\n### 编辑器基本配置\n\n- 制表符长度：4\n- 编码格式：`UTF-8`\n- 换行符：`CRLF`\n- 插件\n    - 快速格式化 **Prettier Now**\n    - 快速代码生成 **JS JSX Snippets**\n- 编辑器已经内置 git 插件，无需另行配置\n\n\n\n---\n","source":"_posts/前端开发环境及工具.md","raw":"---\ntitle: 前端开发环境及工具\ndate: 2018-03-05 10:37:27\ntags: [uba,前端]\ncategories: 开发工具\n---\n## 前端开发环境及工具\n\n### 内容目录\n\n[toc]\n\n---\n### 基本工具及环境\n\n> 前端开发基本工具整理。\n\n####  一、浏览器\n\n1. Chrome    [点此下载](http://www.google.cn/chrome/browser/desktop/index.html)\n\n2. Firefox   [点此下载](http://www.firefox.com.cn/)\n\n<!--more-->\n#### 二、编辑器\n\n1. VScode [点此下载](https://code.visualstudio.com/)\n\n<!--\n2. Webstorm [点此下载](http://www.jetbrains.com/webstorm/)\n\n3. Sublime [点此下载](https://www.sublimetext.com/3)\n\n4. Atom [点此下载](https://atom.io/)\n-->\n\n#### 三、运行环境\n\n1. 版本控制工具 Git [点此下载](https://git-scm.com/) [安装步骤](https://jingyan.baidu.com/article/020278117cbe921bcc9ce51c.html)\n\n2. 前端运行环境 Node (LTS) [点此下载](https://nodejs.org/en/)\n\n### 编辑器基本配置\n\n- 制表符长度：4\n- 编码格式：`UTF-8`\n- 换行符：`CRLF`\n- 插件\n    - 快速格式化 **Prettier Now**\n    - 快速代码生成 **JS JSX Snippets**\n- 编辑器已经内置 git 插件，无需另行配置\n\n\n\n---\n","slug":"前端开发环境及工具","published":1,"updated":"2018-03-05T02:39:13.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne133001yegcr8ppms1uv","content":"<h2 id=\"前端开发环境及工具\"><a href=\"#前端开发环境及工具\" class=\"headerlink\" title=\"前端开发环境及工具\"></a>前端开发环境及工具</h2><h3 id=\"内容目录\"><a href=\"#内容目录\" class=\"headerlink\" title=\"内容目录\"></a>内容目录</h3><p>[toc]</p>\n<hr>\n<h3 id=\"基本工具及环境\"><a href=\"#基本工具及环境\" class=\"headerlink\" title=\"基本工具及环境\"></a>基本工具及环境</h3><blockquote>\n<p>前端开发基本工具整理。</p>\n</blockquote>\n<h4 id=\"一、浏览器\"><a href=\"#一、浏览器\" class=\"headerlink\" title=\"一、浏览器\"></a>一、浏览器</h4><ol>\n<li><p>Chrome    <a href=\"http://www.google.cn/chrome/browser/desktop/index.html\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n</li>\n<li><p>Firefox   <a href=\"http://www.firefox.com.cn/\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"二、编辑器\"><a href=\"#二、编辑器\" class=\"headerlink\" title=\"二、编辑器\"></a>二、编辑器</h4><ol>\n<li>VScode <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"external\">点此下载</a></li>\n</ol>\n<!--\n2. Webstorm [点此下载](http://www.jetbrains.com/webstorm/)\n\n3. Sublime [点此下载](https://www.sublimetext.com/3)\n\n4. Atom [点此下载](https://atom.io/)\n-->\n<h4 id=\"三、运行环境\"><a href=\"#三、运行环境\" class=\"headerlink\" title=\"三、运行环境\"></a>三、运行环境</h4><ol>\n<li><p>版本控制工具 Git <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">点此下载</a> <a href=\"https://jingyan.baidu.com/article/020278117cbe921bcc9ce51c.html\" target=\"_blank\" rel=\"external\">安装步骤</a></p>\n</li>\n<li><p>前端运行环境 Node (LTS) <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n</li>\n</ol>\n<h3 id=\"编辑器基本配置\"><a href=\"#编辑器基本配置\" class=\"headerlink\" title=\"编辑器基本配置\"></a>编辑器基本配置</h3><ul>\n<li>制表符长度：4</li>\n<li>编码格式：<code>UTF-8</code></li>\n<li>换行符：<code>CRLF</code></li>\n<li>插件<ul>\n<li>快速格式化 <strong>Prettier Now</strong></li>\n<li>快速代码生成 <strong>JS JSX Snippets</strong></li>\n</ul>\n</li>\n<li>编辑器已经内置 git 插件，无需另行配置</li>\n</ul>\n<hr>\n","excerpt":"<h2 id=\"前端开发环境及工具\"><a href=\"#前端开发环境及工具\" class=\"headerlink\" title=\"前端开发环境及工具\"></a>前端开发环境及工具</h2><h3 id=\"内容目录\"><a href=\"#内容目录\" class=\"headerlink\" title=\"内容目录\"></a>内容目录</h3><p>[toc]</p>\n<hr>\n<h3 id=\"基本工具及环境\"><a href=\"#基本工具及环境\" class=\"headerlink\" title=\"基本工具及环境\"></a>基本工具及环境</h3><blockquote>\n<p>前端开发基本工具整理。</p>\n</blockquote>\n<h4 id=\"一、浏览器\"><a href=\"#一、浏览器\" class=\"headerlink\" title=\"一、浏览器\"></a>一、浏览器</h4><ol>\n<li><p>Chrome    <a href=\"http://www.google.cn/chrome/browser/desktop/index.html\">点此下载</a></p>\n</li>\n<li><p>Firefox   <a href=\"http://www.firefox.com.cn/\">点此下载</a></p>\n</li>\n</ol>","more":"<h4 id=\"二、编辑器\"><a href=\"#二、编辑器\" class=\"headerlink\" title=\"二、编辑器\"></a>二、编辑器</h4><ol>\n<li>VScode <a href=\"https://code.visualstudio.com/\">点此下载</a></li>\n</ol>\n<!--\n2. Webstorm [点此下载](http://www.jetbrains.com/webstorm/)\n\n3. Sublime [点此下载](https://www.sublimetext.com/3)\n\n4. Atom [点此下载](https://atom.io/)\n-->\n<h4 id=\"三、运行环境\"><a href=\"#三、运行环境\" class=\"headerlink\" title=\"三、运行环境\"></a>三、运行环境</h4><ol>\n<li><p>版本控制工具 Git <a href=\"https://git-scm.com/\">点此下载</a> <a href=\"https://jingyan.baidu.com/article/020278117cbe921bcc9ce51c.html\">安装步骤</a></p>\n</li>\n<li><p>前端运行环境 Node (LTS) <a href=\"https://nodejs.org/en/\">点此下载</a></p>\n</li>\n</ol>\n<h3 id=\"编辑器基本配置\"><a href=\"#编辑器基本配置\" class=\"headerlink\" title=\"编辑器基本配置\"></a>编辑器基本配置</h3><ul>\n<li>制表符长度：4</li>\n<li>编码格式：<code>UTF-8</code></li>\n<li>换行符：<code>CRLF</code></li>\n<li>插件<ul>\n<li>快速格式化 <strong>Prettier Now</strong></li>\n<li>快速代码生成 <strong>JS JSX Snippets</strong></li>\n</ul>\n</li>\n<li>编辑器已经内置 git 插件，无需另行配置</li>\n</ul>\n<hr>"},{"title":"开篇记","date":"2016-12-31T16:00:00.000Z","_content":"# 开篇\n　\n>　　在新年的第一天决定，2017需要改变一下自己的学习方法，进而通过这种方式来记录自己在前端学习路上的所见、所学、所感。\n\n<!--more-->\n# 目标\n- 掌握Markdown语法，更好的为自己服务。\n- 会简单介绍一下自己在此博客创建过程中走过的坑，方便他人亦是方便自己。\n- 学习Vue.js 向往这种简单、优雅的框架。\n- 感受一下weex 的魅力，以后的项目中很有可能会用的上，阿里还是很强大的。\n- 当然也要学习现在最流行的前端项目整合工具-webpack 。\n- 在工作项目中遇到的问题，与解决问题方法的记录。\n\n\n# 待续\n　\n> 　　现在只想到这么多，这里只是给自己在今年做一个简单的计划，方便自己理清学习思路。\n","source":"_posts/开篇记.md","raw":"---\ntitle: 开篇记\ndate: 2017-01-01 00:00:00\ncategories: 初始\ntags: [记录]\n---\n# 开篇\n　\n>　　在新年的第一天决定，2017需要改变一下自己的学习方法，进而通过这种方式来记录自己在前端学习路上的所见、所学、所感。\n\n<!--more-->\n# 目标\n- 掌握Markdown语法，更好的为自己服务。\n- 会简单介绍一下自己在此博客创建过程中走过的坑，方便他人亦是方便自己。\n- 学习Vue.js 向往这种简单、优雅的框架。\n- 感受一下weex 的魅力，以后的项目中很有可能会用的上，阿里还是很强大的。\n- 当然也要学习现在最流行的前端项目整合工具-webpack 。\n- 在工作项目中遇到的问题，与解决问题方法的记录。\n\n\n# 待续\n　\n> 　　现在只想到这么多，这里只是给自己在今年做一个简单的计划，方便自己理清学习思路。\n","slug":"开篇记","published":1,"updated":"2017-06-02T02:14:47.230Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne1360022egcrvcfh7spp","content":"<h1 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h1><p>　</p>\n<blockquote>\n<p>　　在新年的第一天决定，2017需要改变一下自己的学习方法，进而通过这种方式来记录自己在前端学习路上的所见、所学、所感。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h1><ul>\n<li>掌握Markdown语法，更好的为自己服务。</li>\n<li>会简单介绍一下自己在此博客创建过程中走过的坑，方便他人亦是方便自己。</li>\n<li>学习Vue.js 向往这种简单、优雅的框架。</li>\n<li>感受一下weex 的魅力，以后的项目中很有可能会用的上，阿里还是很强大的。</li>\n<li>当然也要学习现在最流行的前端项目整合工具-webpack 。</li>\n<li>在工作项目中遇到的问题，与解决问题方法的记录。</li>\n</ul>\n<h1 id=\"待续\"><a href=\"#待续\" class=\"headerlink\" title=\"待续\"></a>待续</h1><p>　</p>\n<blockquote>\n<p>　　现在只想到这么多，这里只是给自己在今年做一个简单的计划，方便自己理清学习思路。</p>\n</blockquote>\n","excerpt":"<h1 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h1><p>　</p>\n<blockquote>\n<p>　　在新年的第一天决定，2017需要改变一下自己的学习方法，进而通过这种方式来记录自己在前端学习路上的所见、所学、所感。</p>\n</blockquote>","more":"<h1 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h1><ul>\n<li>掌握Markdown语法，更好的为自己服务。</li>\n<li>会简单介绍一下自己在此博客创建过程中走过的坑，方便他人亦是方便自己。</li>\n<li>学习Vue.js 向往这种简单、优雅的框架。</li>\n<li>感受一下weex 的魅力，以后的项目中很有可能会用的上，阿里还是很强大的。</li>\n<li>当然也要学习现在最流行的前端项目整合工具-webpack 。</li>\n<li>在工作项目中遇到的问题，与解决问题方法的记录。</li>\n</ul>\n<h1 id=\"待续\"><a href=\"#待续\" class=\"headerlink\" title=\"待续\"></a>待续</h1><p>　</p>\n<blockquote>\n<p>　　现在只想到这么多，这里只是给自己在今年做一个简单的计划，方便自己理清学习思路。</p>\n</blockquote>"},{"title":"相关文档目录","date":"2018-03-05T03:02:47.000Z","_content":"### 相关文档目录\n1. [前端开发环境及工具](https://glud.netlify.com/2018/03/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B7%A5%E5%85%B7/)\n2. [React开发规范1.0](https://glud.netlify.com/2018/03/05/react%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%831-0/)\n3. [项目中视图相关](https://glud.netlify.com/2018/03/05/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%A7%86%E5%9B%BE%E7%9B%B8%E5%85%B3/)\n4. [基于uba前端项目搭建](https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/)\n5. [基于uba前端mock代理](https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AFmock%E4%BB%A3%E7%90%86/)","source":"_posts/相关文档目录.md","raw":"---\ntitle: 相关文档目录\ndate: 2018-03-05 11:02:47\ntags: [文档目录，规范]\ncategories: 初始\n---\n### 相关文档目录\n1. [前端开发环境及工具](https://glud.netlify.com/2018/03/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B7%A5%E5%85%B7/)\n2. [React开发规范1.0](https://glud.netlify.com/2018/03/05/react%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%831-0/)\n3. [项目中视图相关](https://glud.netlify.com/2018/03/05/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%A7%86%E5%9B%BE%E7%9B%B8%E5%85%B3/)\n4. [基于uba前端项目搭建](https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/)\n5. [基于uba前端mock代理](https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AFmock%E4%BB%A3%E7%90%86/)","slug":"相关文档目录","published":1,"updated":"2018-03-05T03:08:22.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne1370024egcr42vo45u4","content":"<h3 id=\"相关文档目录\"><a href=\"#相关文档目录\" class=\"headerlink\" title=\"相关文档目录\"></a>相关文档目录</h3><ol>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B7%A5%E5%85%B7/\" target=\"_blank\" rel=\"external\">前端开发环境及工具</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/react%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%831-0/\" target=\"_blank\" rel=\"external\">React开发规范1.0</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%A7%86%E5%9B%BE%E7%9B%B8%E5%85%B3/\" target=\"_blank\" rel=\"external\">项目中视图相关</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/\" target=\"_blank\" rel=\"external\">基于uba前端项目搭建</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AFmock%E4%BB%A3%E7%90%86/\" target=\"_blank\" rel=\"external\">基于uba前端mock代理</a></li>\n</ol>\n","excerpt":"","more":"<h3 id=\"相关文档目录\"><a href=\"#相关文档目录\" class=\"headerlink\" title=\"相关文档目录\"></a>相关文档目录</h3><ol>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B7%A5%E5%85%B7/\">前端开发环境及工具</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/react%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%831-0/\">React开发规范1.0</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%A7%86%E5%9B%BE%E7%9B%B8%E5%85%B3/\">项目中视图相关</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/\">基于uba前端项目搭建</a></li>\n<li><a href=\"https://glud.netlify.com/2018/03/05/%E5%9F%BA%E4%BA%8Euba%E5%89%8D%E7%AB%AFmock%E4%BB%A3%E7%90%86/\">基于uba前端mock代理</a></li>\n</ol>\n"},{"title":"项目中视图相关","date":"2018-03-05T02:47:34.000Z","_content":"### 视图文档\n\n[Toc]\n\n---\n#### 样式文件引入\n\n1.  引入最新版`tinper-bee`样式文件\n\n    ```\n     // 旧版样式文件 \n    <link rel=\"stylesheet\" href=\"//design.yonyoucloud.com/static/tinper-bee/0.6.2/assets/tinper-bee.min.css\">\n    // 新版样式文件\n     <link rel=\"stylesheet\" href=\"//design.yonyoucloud.com/static/tinper-bee/1.2.9/assets/tinper-bee.css\">\n    ```\n<!--more-->\n2.  引入公共样式文件\n    > 在节点页面`less`文件中引入`public.less`文件即可\n\n    ```\n    @import \"~Static/css/public.less\";\n    ```\n#### 公共样式的使用\n> 公共样式的存在为服务各节点页面风格、布局、尺寸等相关样式的一致性\n\n1.  使用说明\n\n    `public.less`提供基本弹性盒子布局、基本尺寸、基本通用类样式等\n    ```css\n    // 基本尺寸类 如下\n    .width-all {...\n    }\n    .width-240 {...\n    }\n\n    // 位置类 如下\n    .margin-top-5 {...\n    }\n    .padding-0 {...\n    }\n\n    // 布局类\n    .n-left {...\n    }\n    .n-right {...\n    }\n    .n-center {...\n    }\n    .n-row {...\n    }\n    .n-all {...\n    }\n    .n-cell-1 {...\n    }\n    .n-cell-2 {...\n    }\n    .n-cell-3 {...\n    }\n    .n-cell-4 {...\n    }\n\n    // 整体功能类\n    // 按钮是 tabs 切换样式\n    .border-tabs {...\n    }\n    // 必须要和 .border-tabs 一起使用\n    .more-tabs {...\n    }   \n    ```\n    在指定节点添加相应`class`即可使用\n    \n#### 全局样式变量的使用\n> 公共样式变量的存在只为统一大家对视图中的颜色、宽高像素值、字号等基本元素的样式修饰\n\n1.  使用说明\n\n    `global.less` 文件，包含如下色值（未展示完全）\n    ```\n    @e1hong: #E14C46;\n    @echong: #CE2C25;\n    @eehong: #EE524B;\n    @33hei: #333333;\n    @25hei: #252525;\n    @66hui: #666666;\n    @99hui: #999999;\n    ```\n    `a.less`文件（某节点样式文件）\n    ```css\n    @import '~Static/css/public.less';\n    // 定义文字颜色\n    .title {\n        color: @e1hong;\n    }\n    ```\n    这样就可以给`a`节点中`.title`元素文字颜色设置为`#E14C46`\n","source":"_posts/项目中视图相关.md","raw":"---\ntitle: 项目中视图相关\ndate: 2018-03-05 10:47:34\ntags: [React,Css]\ncategories: React\n---\n### 视图文档\n\n[Toc]\n\n---\n#### 样式文件引入\n\n1.  引入最新版`tinper-bee`样式文件\n\n    ```\n     // 旧版样式文件 \n    <link rel=\"stylesheet\" href=\"//design.yonyoucloud.com/static/tinper-bee/0.6.2/assets/tinper-bee.min.css\">\n    // 新版样式文件\n     <link rel=\"stylesheet\" href=\"//design.yonyoucloud.com/static/tinper-bee/1.2.9/assets/tinper-bee.css\">\n    ```\n<!--more-->\n2.  引入公共样式文件\n    > 在节点页面`less`文件中引入`public.less`文件即可\n\n    ```\n    @import \"~Static/css/public.less\";\n    ```\n#### 公共样式的使用\n> 公共样式的存在为服务各节点页面风格、布局、尺寸等相关样式的一致性\n\n1.  使用说明\n\n    `public.less`提供基本弹性盒子布局、基本尺寸、基本通用类样式等\n    ```css\n    // 基本尺寸类 如下\n    .width-all {...\n    }\n    .width-240 {...\n    }\n\n    // 位置类 如下\n    .margin-top-5 {...\n    }\n    .padding-0 {...\n    }\n\n    // 布局类\n    .n-left {...\n    }\n    .n-right {...\n    }\n    .n-center {...\n    }\n    .n-row {...\n    }\n    .n-all {...\n    }\n    .n-cell-1 {...\n    }\n    .n-cell-2 {...\n    }\n    .n-cell-3 {...\n    }\n    .n-cell-4 {...\n    }\n\n    // 整体功能类\n    // 按钮是 tabs 切换样式\n    .border-tabs {...\n    }\n    // 必须要和 .border-tabs 一起使用\n    .more-tabs {...\n    }   \n    ```\n    在指定节点添加相应`class`即可使用\n    \n#### 全局样式变量的使用\n> 公共样式变量的存在只为统一大家对视图中的颜色、宽高像素值、字号等基本元素的样式修饰\n\n1.  使用说明\n\n    `global.less` 文件，包含如下色值（未展示完全）\n    ```\n    @e1hong: #E14C46;\n    @echong: #CE2C25;\n    @eehong: #EE524B;\n    @33hei: #333333;\n    @25hei: #252525;\n    @66hui: #666666;\n    @99hui: #999999;\n    ```\n    `a.less`文件（某节点样式文件）\n    ```css\n    @import '~Static/css/public.less';\n    // 定义文字颜色\n    .title {\n        color: @e1hong;\n    }\n    ```\n    这样就可以给`a`节点中`.title`元素文字颜色设置为`#E14C46`\n","slug":"项目中视图相关","published":1,"updated":"2018-03-05T02:48:18.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne1380027egcr9jn5vgwe","content":"<h3 id=\"视图文档\"><a href=\"#视图文档\" class=\"headerlink\" title=\"视图文档\"></a>视图文档</h3><p>[Toc]</p>\n<hr>\n<h4 id=\"样式文件引入\"><a href=\"#样式文件引入\" class=\"headerlink\" title=\"样式文件引入\"></a>样式文件引入</h4><ol>\n<li><p>引入最新版<code>tinper-bee</code>样式文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"> // 旧版样式文件 </div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;//design.yonyoucloud.com/static/tinper-bee/0.6.2/assets/tinper-bee.min.css&quot;&gt;</div><div class=\"line\">// 新版样式文件</div><div class=\"line\"> &lt;link rel=&quot;stylesheet&quot; href=&quot;//design.yonyoucloud.com/static/tinper-bee/1.2.9/assets/tinper-bee.css&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<a id=\"more\"></a>\n<ol>\n<li><p>引入公共样式文件</p>\n<blockquote>\n<p>在节点页面<code>less</code>文件中引入<code>public.less</code>文件即可</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import &quot;~Static/css/public.less&quot;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"公共样式的使用\"><a href=\"#公共样式的使用\" class=\"headerlink\" title=\"公共样式的使用\"></a>公共样式的使用</h4><blockquote>\n<p>公共样式的存在为服务各节点页面风格、布局、尺寸等相关样式的一致性</p>\n</blockquote>\n<ol>\n<li><p>使用说明</p>\n<p><code>public.less</code>提供基本弹性盒子布局、基本尺寸、基本通用类样式等</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 基本尺寸类 如下</div><div class=\"line\">.width-all &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.width-240 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 位置类 如下</div><div class=\"line\">.margin-top-5 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.padding-0 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 布局类</div><div class=\"line\">.n-left &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-right &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-center &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-row &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-all &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-1 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-2 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-3 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-4 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 整体功能类</div><div class=\"line\">// 按钮是 tabs 切换样式</div><div class=\"line\">.border-tabs &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">// 必须要和 .border-tabs 一起使用</div><div class=\"line\">.more-tabs &#123;...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在指定节点添加相应<code>class</code>即可使用</p>\n</li>\n</ol>\n<h4 id=\"全局样式变量的使用\"><a href=\"#全局样式变量的使用\" class=\"headerlink\" title=\"全局样式变量的使用\"></a>全局样式变量的使用</h4><blockquote>\n<p>公共样式变量的存在只为统一大家对视图中的颜色、宽高像素值、字号等基本元素的样式修饰</p>\n</blockquote>\n<ol>\n<li><p>使用说明</p>\n<p><code>global.less</code> 文件，包含如下色值（未展示完全）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@e1hong: #E14C46;</div><div class=\"line\">@echong: #CE2C25;</div><div class=\"line\">@eehong: #EE524B;</div><div class=\"line\">@33hei: #333333;</div><div class=\"line\">@25hei: #252525;</div><div class=\"line\">@66hui: #666666;</div><div class=\"line\">@99hui: #999999;</div></pre></td></tr></table></figure>\n<p><code>a.less</code>文件（某节点样式文件）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import '~Static/css/public.less';</div><div class=\"line\">// 定义文字颜色</div><div class=\"line\">.title &#123;</div><div class=\"line\">    color: @e1hong;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样就可以给<code>a</code>节点中<code>.title</code>元素文字颜色设置为<code>#E14C46</code></p>\n</li>\n</ol>\n","excerpt":"<h3 id=\"视图文档\"><a href=\"#视图文档\" class=\"headerlink\" title=\"视图文档\"></a>视图文档</h3><p>[Toc]</p>\n<hr>\n<h4 id=\"样式文件引入\"><a href=\"#样式文件引入\" class=\"headerlink\" title=\"样式文件引入\"></a>样式文件引入</h4><ol>\n<li><p>引入最新版<code>tinper-bee</code>样式文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"> // 旧版样式文件 </div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;//design.yonyoucloud.com/static/tinper-bee/0.6.2/assets/tinper-bee.min.css&quot;&gt;</div><div class=\"line\">// 新版样式文件</div><div class=\"line\"> &lt;link rel=&quot;stylesheet&quot; href=&quot;//design.yonyoucloud.com/static/tinper-bee/1.2.9/assets/tinper-bee.css&quot;&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>","more":"<ol>\n<li><p>引入公共样式文件</p>\n<blockquote>\n<p>在节点页面<code>less</code>文件中引入<code>public.less</code>文件即可</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import &quot;~Static/css/public.less&quot;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"公共样式的使用\"><a href=\"#公共样式的使用\" class=\"headerlink\" title=\"公共样式的使用\"></a>公共样式的使用</h4><blockquote>\n<p>公共样式的存在为服务各节点页面风格、布局、尺寸等相关样式的一致性</p>\n</blockquote>\n<ol>\n<li><p>使用说明</p>\n<p><code>public.less</code>提供基本弹性盒子布局、基本尺寸、基本通用类样式等</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 基本尺寸类 如下</div><div class=\"line\">.width-all &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.width-240 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 位置类 如下</div><div class=\"line\">.margin-top-5 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.padding-0 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 布局类</div><div class=\"line\">.n-left &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-right &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-center &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-row &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-all &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-1 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-2 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-3 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">.n-cell-4 &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 整体功能类</div><div class=\"line\">// 按钮是 tabs 切换样式</div><div class=\"line\">.border-tabs &#123;...</div><div class=\"line\">&#125;</div><div class=\"line\">// 必须要和 .border-tabs 一起使用</div><div class=\"line\">.more-tabs &#123;...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在指定节点添加相应<code>class</code>即可使用</p>\n</li>\n</ol>\n<h4 id=\"全局样式变量的使用\"><a href=\"#全局样式变量的使用\" class=\"headerlink\" title=\"全局样式变量的使用\"></a>全局样式变量的使用</h4><blockquote>\n<p>公共样式变量的存在只为统一大家对视图中的颜色、宽高像素值、字号等基本元素的样式修饰</p>\n</blockquote>\n<ol>\n<li><p>使用说明</p>\n<p><code>global.less</code> 文件，包含如下色值（未展示完全）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@e1hong: #E14C46;</div><div class=\"line\">@echong: #CE2C25;</div><div class=\"line\">@eehong: #EE524B;</div><div class=\"line\">@33hei: #333333;</div><div class=\"line\">@25hei: #252525;</div><div class=\"line\">@66hui: #666666;</div><div class=\"line\">@99hui: #999999;</div></pre></td></tr></table></figure>\n<p><code>a.less</code>文件（某节点样式文件）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import '~Static/css/public.less';</div><div class=\"line\">// 定义文字颜色</div><div class=\"line\">.title &#123;</div><div class=\"line\">    color: @e1hong;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样就可以给<code>a</code>节点中<code>.title</code>元素文字颜色设置为<code>#E14C46</code></p>\n</li>\n</ol>"},{"title":"基于uba前端项目搭建","date":"2018-03-05T02:45:20.000Z","_content":"## 基于 uba 前端项目搭建\n\n### 安装 uba\n\n- 打开命令行工具，执行 `npm install uba -g` 命令进行安装，等待安装完成。\n- 执行 `uba -v` 命令，正常输出 **uba** 版本号，说明安装成功。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%871.png)\n<!--more-->\n### 初始化项目模板\n\n- 执行 `uba init` 命令，选择相应项目模板进行初始化。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%872.png)\n\n- 输入项目名 （此处采用的是 **uba** 多页模板）\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%873.png)\n\n- 回车进行创建模板项目，输入 `Y` 进行确认项目依赖安装。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%874.png)\n\n- 等待模板下载完成。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%875.png)\n\n### 各文件描述\n- 模板项目文件具体描述\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%876.png)\n\n","source":"_posts/基于uba前端项目搭建.md","raw":"---\ntitle: 基于uba前端项目搭建\ndate: 2018-03-05 10:45:20\ntags: [uba,React]\ncategories: node\n---\n## 基于 uba 前端项目搭建\n\n### 安装 uba\n\n- 打开命令行工具，执行 `npm install uba -g` 命令进行安装，等待安装完成。\n- 执行 `uba -v` 命令，正常输出 **uba** 版本号，说明安装成功。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%871.png)\n<!--more-->\n### 初始化项目模板\n\n- 执行 `uba init` 命令，选择相应项目模板进行初始化。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%872.png)\n\n- 输入项目名 （此处采用的是 **uba** 多页模板）\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%873.png)\n\n- 回车进行创建模板项目，输入 `Y` 进行确认项目依赖安装。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%874.png)\n\n- 等待模板下载完成。\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%875.png)\n\n### 各文件描述\n- 模板项目文件具体描述\n![image](http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%876.png)\n\n","slug":"基于uba前端项目搭建","published":1,"updated":"2018-03-05T02:48:32.748Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjedne13a002begcrskzr53bf","content":"<h2 id=\"基于-uba-前端项目搭建\"><a href=\"#基于-uba-前端项目搭建\" class=\"headerlink\" title=\"基于 uba 前端项目搭建\"></a>基于 uba 前端项目搭建</h2><h3 id=\"安装-uba\"><a href=\"#安装-uba\" class=\"headerlink\" title=\"安装 uba\"></a>安装 uba</h3><ul>\n<li>打开命令行工具，执行 <code>npm install uba -g</code> 命令进行安装，等待安装完成。</li>\n<li><p>执行 <code>uba -v</code> 命令，正常输出 <strong>uba</strong> 版本号，说明安装成功。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%871.png\" alt=\"image\"></p>\n<a id=\"more\"></a>\n<h3 id=\"初始化项目模板\"><a href=\"#初始化项目模板\" class=\"headerlink\" title=\"初始化项目模板\"></a>初始化项目模板</h3></li>\n<li><p>执行 <code>uba init</code> 命令，选择相应项目模板进行初始化。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%872.png\" alt=\"image\"></p>\n</li>\n<li><p>输入项目名 （此处采用的是 <strong>uba</strong> 多页模板）<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%873.png\" alt=\"image\"></p>\n</li>\n<li><p>回车进行创建模板项目，输入 <code>Y</code> 进行确认项目依赖安装。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%874.png\" alt=\"image\"></p>\n</li>\n<li><p>等待模板下载完成。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%875.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"各文件描述\"><a href=\"#各文件描述\" class=\"headerlink\" title=\"各文件描述\"></a>各文件描述</h3><ul>\n<li>模板项目文件具体描述<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%876.png\" alt=\"image\"></li>\n</ul>\n","excerpt":"<h2 id=\"基于-uba-前端项目搭建\"><a href=\"#基于-uba-前端项目搭建\" class=\"headerlink\" title=\"基于 uba 前端项目搭建\"></a>基于 uba 前端项目搭建</h2><h3 id=\"安装-uba\"><a href=\"#安装-uba\" class=\"headerlink\" title=\"安装 uba\"></a>安装 uba</h3><ul>\n<li>打开命令行工具，执行 <code>npm install uba -g</code> 命令进行安装，等待安装完成。</li>\n<li><p>执行 <code>uba -v</code> 命令，正常输出 <strong>uba</strong> 版本号，说明安装成功。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%871.png\" alt=\"image\"></p>","more":"<h3 id=\"初始化项目模板\"><a href=\"#初始化项目模板\" class=\"headerlink\" title=\"初始化项目模板\"></a>初始化项目模板</h3></li>\n<li><p>执行 <code>uba init</code> 命令，选择相应项目模板进行初始化。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%872.png\" alt=\"image\"></p>\n</li>\n<li><p>输入项目名 （此处采用的是 <strong>uba</strong> 多页模板）<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%873.png\" alt=\"image\"></p>\n</li>\n<li><p>回车进行创建模板项目，输入 <code>Y</code> 进行确认项目依赖安装。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%874.png\" alt=\"image\"></p>\n</li>\n<li><p>等待模板下载完成。<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%875.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"各文件描述\"><a href=\"#各文件描述\" class=\"headerlink\" title=\"各文件描述\"></a>各文件描述</h3><ul>\n<li>模板项目文件具体描述<br><img src=\"http://p29pepciw.bkt.clouddn.com/%E5%9B%BE%E7%89%876.png\" alt=\"image\"></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjedne1170000egcruy9xqooy","category_id":"cjedne11h0004egcrglkafhu0","_id":"cjedne11w000degcr34u8m7j9"},{"post_id":"cjedne11d0002egcrlwcwmoy7","category_id":"cjedne11u000aegcrld9yrms0","_id":"cjedne121000jegcrme2owvbi"},{"post_id":"cjedne11z000hegcrx45d6ovy","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne127000oegcr5wxfexvo"},{"post_id":"cjedne11l0006egcr7kgrut29","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne129000segcrfkfna7a3"},{"post_id":"cjedne120000iegcrbnceka2k","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne12c000wegcrv9pafm75"},{"post_id":"cjedne125000megcrjx81q3bb","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne12e000yegcrpe2isvwq"},{"post_id":"cjedne11o0008egcrid0oagjw","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne12g0012egcrydtaro1j"},{"post_id":"cjedne127000pegcrefmbqnpg","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne12h0015egcr2ojqq635"},{"post_id":"cjedne12a000uegcrtd9cve19","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne12k001aegcr2nvgqy7a"},{"post_id":"cjedne11t0009egcrhrcdzfyv","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne12m001cegcr88u4et18"},{"post_id":"cjedne11v000cegcrhiydvz20","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne12p001gegcrzsja5x7f"},{"post_id":"cjedne12i0018egcr0q66ju5j","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne12r001jegcr7q2zjizv"},{"post_id":"cjedne11w000eegcr3cnxjmiv","category_id":"cjedne11x000fegcr0fsjoner","_id":"cjedne12t001oegcrjb5c2snq"},{"post_id":"cjedne12k001begcreg2qm78x","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne12v001qegcr4o9g4joj"},{"post_id":"cjedne12n001eegcro8oao47u","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne130001uegcrec1r4efj"},{"post_id":"cjedne12p001hegcrjcle32uq","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne133001xegcrck7ctfpa"},{"post_id":"cjedne12d000xegcrnrhggsne","category_id":"cjedne12m001degcr7ybmrwif","_id":"cjedne1350020egcr47anfhkh"},{"post_id":"cjedne12s001kegcrcz0dla2w","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne1370023egcr1r5bmfko"},{"post_id":"cjedne12u001pegcr8q2ysbxd","category_id":"cjedne11u000aegcrld9yrms0","_id":"cjedne1380026egcr2a03bymb"},{"post_id":"cjedne12f0010egcrgg0slgp0","category_id":"cjedne12s001legcruq7yv3qe","_id":"cjedne13a0029egcr5mgabkpc"},{"post_id":"cjedne12v001regcryjxnkcmz","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne13b002cegcrtu0bowcb"},{"post_id":"cjedne132001vegcrcjnq17rf","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne13c002gegcrxjhju3m7"},{"post_id":"cjedne12g0014egcr7h7rz1p2","category_id":"cjedne12m001degcr7ybmrwif","_id":"cjedne13d002hegcr3j1u1vo7"},{"post_id":"cjedne133001yegcr8ppms1uv","category_id":"cjedne11h0004egcrglkafhu0","_id":"cjedne13g002kegcr7qvaxrmy"},{"post_id":"cjedne13a002begcrskzr53bf","category_id":"cjedne129000regcrjnovzmr6","_id":"cjedne13g002megcr1nzyt85h"},{"post_id":"cjedne1360022egcrvcfh7spp","category_id":"cjedne1380025egcrna5bf4ch","_id":"cjedne13i002pegcrptthkmbz"},{"post_id":"cjedne1370024egcr42vo45u4","category_id":"cjedne1380025egcrna5bf4ch","_id":"cjedne13i002qegcr3tbzbwz1"},{"post_id":"cjedne1380027egcr9jn5vgwe","category_id":"cjedne13d002iegcrg1ey704d","_id":"cjedne13j002segcr5m27qo07"}],"PostTag":[{"post_id":"cjedne1170000egcruy9xqooy","tag_id":"cjedne11k0005egcrxvgugaaq","_id":"cjedne127000negcrq01za62l"},{"post_id":"cjedne1170000egcruy9xqooy","tag_id":"cjedne11u000begcrb15ik7z2","_id":"cjedne129000qegcr7z4ucmf1"},{"post_id":"cjedne1170000egcruy9xqooy","tag_id":"cjedne11y000gegcrxs5uavv3","_id":"cjedne12c000vegcrwl4lm4st"},{"post_id":"cjedne11d0002egcrlwcwmoy7","tag_id":"cjedne123000legcr3yziyt8p","_id":"cjedne12g0013egcrwa866vjn"},{"post_id":"cjedne11d0002egcrlwcwmoy7","tag_id":"cjedne12a000tegcr0j07mcek","_id":"cjedne12i0017egcroh592ocz"},{"post_id":"cjedne11l0006egcr7kgrut29","tag_id":"cjedne12g0011egcryvjljhid","_id":"cjedne12r001iegcr68v83pwg"},{"post_id":"cjedne11l0006egcr7kgrut29","tag_id":"cjedne12j0019egcrohrymnwq","_id":"cjedne12t001megcr00pt9w67"},{"post_id":"cjedne11o0008egcrid0oagjw","tag_id":"cjedne12g0011egcryvjljhid","_id":"cjedne133001wegcrveud5anv"},{"post_id":"cjedne11o0008egcrid0oagjw","tag_id":"cjedne12j0019egcrohrymnwq","_id":"cjedne134001zegcr1a8uexed"},{"post_id":"cjedne11t0009egcrhrcdzfyv","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne13a002aegcrzapuyo3h"},{"post_id":"cjedne11t0009egcrhrcdzfyv","tag_id":"cjedne1350021egcr2dmnoce9","_id":"cjedne13b002degcrsbx2plm4"},{"post_id":"cjedne11v000cegcrhiydvz20","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne13g002legcri5o3ze1m"},{"post_id":"cjedne11v000cegcrhiydvz20","tag_id":"cjedne1350021egcr2dmnoce9","_id":"cjedne13h002negcr7e743wtl"},{"post_id":"cjedne11w000eegcr3cnxjmiv","tag_id":"cjedne12g0011egcryvjljhid","_id":"cjedne13j002tegcrck3x4f8m"},{"post_id":"cjedne11w000eegcr3cnxjmiv","tag_id":"cjedne12j0019egcrohrymnwq","_id":"cjedne13j002uegcrdsrvqk5y"},{"post_id":"cjedne11z000hegcrx45d6ovy","tag_id":"cjedne12g0011egcryvjljhid","_id":"cjedne13k002xegcrt0a1f47z"},{"post_id":"cjedne11z000hegcrx45d6ovy","tag_id":"cjedne12j0019egcrohrymnwq","_id":"cjedne13k002yegcraz1yvv7q"},{"post_id":"cjedne120000iegcrbnceka2k","tag_id":"cjedne13k002wegcrgh17rpzm","_id":"cjedne13l0031egcretg2423z"},{"post_id":"cjedne120000iegcrbnceka2k","tag_id":"cjedne12j0019egcrohrymnwq","_id":"cjedne13l0032egcrq7sha4kh"},{"post_id":"cjedne125000megcrjx81q3bb","tag_id":"cjedne12g0011egcryvjljhid","_id":"cjedne13n0035egcrvvyilhyt"},{"post_id":"cjedne125000megcrjx81q3bb","tag_id":"cjedne12j0019egcrohrymnwq","_id":"cjedne13n0036egcre5abwr2s"},{"post_id":"cjedne127000pegcrefmbqnpg","tag_id":"cjedne13m0034egcrl1vv1onu","_id":"cjedne13n0038egcru2ykkfnm"},{"post_id":"cjedne12a000uegcrtd9cve19","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne13p003cegcr81zv2rcz"},{"post_id":"cjedne12a000uegcrtd9cve19","tag_id":"cjedne13o0039egcrxx9t9lk3","_id":"cjedne13q003degcr5hfuf9qs"},{"post_id":"cjedne12a000uegcrtd9cve19","tag_id":"cjedne13o003aegcrvbpnhu1l","_id":"cjedne13q003fegcrtn8ympyv"},{"post_id":"cjedne12d000xegcrnrhggsne","tag_id":"cjedne13p003begcrkw7zrwr3","_id":"cjedne13r003hegcro5zv4y2n"},{"post_id":"cjedne12d000xegcrnrhggsne","tag_id":"cjedne13q003eegcrpqiviq3g","_id":"cjedne13r003iegcrxqp6tdy3"},{"post_id":"cjedne12f0010egcrgg0slgp0","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne13t003megcrliq33ndp"},{"post_id":"cjedne12f0010egcrgg0slgp0","tag_id":"cjedne13o0039egcrxx9t9lk3","_id":"cjedne13t003negcrzplzna8g"},{"post_id":"cjedne12f0010egcrgg0slgp0","tag_id":"cjedne13s003kegcrch3agyz5","_id":"cjedne13u003pegcrrohux684"},{"post_id":"cjedne12g0014egcr7h7rz1p2","tag_id":"cjedne13p003begcrkw7zrwr3","_id":"cjedne13w003regcr938rb9ks"},{"post_id":"cjedne12g0014egcr7h7rz1p2","tag_id":"cjedne13q003eegcrpqiviq3g","_id":"cjedne13w003segcrz5lzpyie"},{"post_id":"cjedne12i0018egcr0q66ju5j","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne13y003vegcrlq9523fe"},{"post_id":"cjedne12i0018egcr0q66ju5j","tag_id":"cjedne1350021egcr2dmnoce9","_id":"cjedne13z003wegcr3bqs0tam"},{"post_id":"cjedne12k001begcreg2qm78x","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne13z003yegcrxg0sf6pm"},{"post_id":"cjedne12n001eegcro8oao47u","tag_id":"cjedne13z003xegcryvc1ian1","_id":"cjedne1400040egcraqasordj"},{"post_id":"cjedne12p001hegcrjcle32uq","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne1410043egcra17pust4"},{"post_id":"cjedne12p001hegcrjcle32uq","tag_id":"cjedne1350021egcr2dmnoce9","_id":"cjedne1410044egcrc1rljvo2"},{"post_id":"cjedne12s001kegcrcz0dla2w","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne1430047egcrh38q3fcz"},{"post_id":"cjedne12s001kegcrcz0dla2w","tag_id":"cjedne1350021egcr2dmnoce9","_id":"cjedne1430048egcr90fw2drw"},{"post_id":"cjedne12u001pegcr8q2ysbxd","tag_id":"cjedne123000legcr3yziyt8p","_id":"cjedne144004aegcrebaib0fi"},{"post_id":"cjedne12u001pegcr8q2ysbxd","tag_id":"cjedne1420046egcrcn5xoys8","_id":"cjedne144004begcrddzdfu7z"},{"post_id":"cjedne12v001regcryjxnkcmz","tag_id":"cjedne12z001tegcrczbcn36u","_id":"cjedne145004eegcrwn32mkk2"},{"post_id":"cjedne12v001regcryjxnkcmz","tag_id":"cjedne1350021egcr2dmnoce9","_id":"cjedne146004fegcr2uco7wfo"},{"post_id":"cjedne132001vegcrcjnq17rf","tag_id":"cjedne145004degcrgdhd5bxp","_id":"cjedne147004iegcragne1hdq"},{"post_id":"cjedne132001vegcrcjnq17rf","tag_id":"cjedne146004gegcrfk5p7532","_id":"cjedne147004jegcrbxzh8kjv"},{"post_id":"cjedne133001yegcr8ppms1uv","tag_id":"cjedne145004degcrgdhd5bxp","_id":"cjedne147004legcrqoexwola"},{"post_id":"cjedne133001yegcr8ppms1uv","tag_id":"cjedne123000legcr3yziyt8p","_id":"cjedne148004megcrzj1926kj"},{"post_id":"cjedne1360022egcrvcfh7spp","tag_id":"cjedne147004kegcrl2dgpmg4","_id":"cjedne148004oegcrsw3bmkki"},{"post_id":"cjedne1370024egcr42vo45u4","tag_id":"cjedne148004negcrp4rntly0","_id":"cjedne149004qegcrb4e4q3lz"},{"post_id":"cjedne1380027egcr9jn5vgwe","tag_id":"cjedne12a000tegcr0j07mcek","_id":"cjedne14a004segcrdwnwkdqy"},{"post_id":"cjedne1380027egcr9jn5vgwe","tag_id":"cjedne148004pegcr3oydq73v","_id":"cjedne14a004tegcrdtm81737"},{"post_id":"cjedne13a002begcrskzr53bf","tag_id":"cjedne145004degcrgdhd5bxp","_id":"cjedne14b004uegcrqh1hnrxb"},{"post_id":"cjedne13a002begcrskzr53bf","tag_id":"cjedne12a000tegcr0j07mcek","_id":"cjedne14b004vegcricnlwfyj"}],"Tag":[{"name":"WebStorm","_id":"cjedne11k0005egcrxvgugaaq"},{"name":"PhpStorm","_id":"cjedne11u000begcrb15ik7z2"},{"name":"开发工具","_id":"cjedne11y000gegcrxs5uavv3"},{"name":"前端","_id":"cjedne123000legcr3yziyt8p"},{"name":"React","_id":"cjedne12a000tegcr0j07mcek"},{"name":"git","_id":"cjedne12g0011egcryvjljhid"},{"name":"前端笔记","_id":"cjedne12j0019egcrohrymnwq"},{"name":"node","_id":"cjedne12z001tegcrczbcn36u"},{"name":"node基础","_id":"cjedne1350021egcr2dmnoce9"},{"name":"git配置","_id":"cjedne13k002wegcrgh17rpzm"},{"name":"git，前端笔记","_id":"cjedne13m0034egcrl1vv1onu"},{"name":"js","_id":"cjedne13o0039egcrxx9t9lk3"},{"name":"nodeAPI","_id":"cjedne13o003aegcrvbpnhu1l"},{"name":"hexo","_id":"cjedne13p003begcrkw7zrwr3"},{"name":"装逼利器","_id":"cjedne13q003eegcrpqiviq3g"},{"name":"jsonp","_id":"cjedne13s003kegcrch3agyz5"},{"name":"node，node基础","_id":"cjedne13z003xegcryvc1ian1"},{"name":"基础","_id":"cjedne1420046egcrcn5xoys8"},{"name":"uba","_id":"cjedne145004degcrgdhd5bxp"},{"name":"mock","_id":"cjedne146004gegcrfk5p7532"},{"name":"记录","_id":"cjedne147004kegcrl2dgpmg4"},{"name":"文档目录，规范","_id":"cjedne148004negcrp4rntly0"},{"name":"Css","_id":"cjedne148004pegcr3oydq73v"}]}}